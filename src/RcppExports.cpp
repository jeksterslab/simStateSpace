// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// OU2SSM
Rcpp::List OU2SSM(const arma::vec& mu, const arma::mat& phi, const arma::mat& sigma_sqrt, const double delta_t);
RcppExport SEXP _simStateSpace_OU2SSM(SEXP muSEXP, SEXP phiSEXP, SEXP sigma_sqrtSEXP, SEXP delta_tSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type sigma_sqrt(sigma_sqrtSEXP);
    Rcpp::traits::input_parameter< const double >::type delta_t(delta_tSEXP);
    rcpp_result_gen = Rcpp::wrap(OU2SSM(mu, phi, sigma_sqrt, delta_t));
    return rcpp_result_gen;
END_RCPP
}
// SimSSM0Fixed
Rcpp::List SimSSM0Fixed(const int n, const arma::vec& mu0, const arma::mat& sigma0_sqrt, const arma::vec& alpha, const arma::mat& beta, const arma::mat& psi_sqrt, const arma::vec& nu, const arma::mat& lambda, const arma::mat& theta_sqrt, const int time, const int burn_in);
RcppExport SEXP _simStateSpace_SimSSM0Fixed(SEXP nSEXP, SEXP mu0SEXP, SEXP sigma0_sqrtSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP psi_sqrtSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP theta_sqrtSEXP, SEXP timeSEXP, SEXP burn_inSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type n(nSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type mu0(mu0SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type sigma0_sqrt(sigma0_sqrtSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type psi_sqrt(psi_sqrtSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type theta_sqrt(theta_sqrtSEXP);
    Rcpp::traits::input_parameter< const int >::type time(timeSEXP);
    Rcpp::traits::input_parameter< const int >::type burn_in(burn_inSEXP);
    rcpp_result_gen = Rcpp::wrap(SimSSM0Fixed(n, mu0, sigma0_sqrt, alpha, beta, psi_sqrt, nu, lambda, theta_sqrt, time, burn_in));
    return rcpp_result_gen;
END_RCPP
}
// SimSSM0
Rcpp::List SimSSM0(const arma::vec& mu0, const arma::mat& sigma0_sqrt, const arma::vec& alpha, const arma::mat& beta, const arma::mat& psi_sqrt, const arma::vec& nu, const arma::mat& lambda, const arma::mat& theta_sqrt, const int time, const int burn_in);
RcppExport SEXP _simStateSpace_SimSSM0(SEXP mu0SEXP, SEXP sigma0_sqrtSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP psi_sqrtSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP theta_sqrtSEXP, SEXP timeSEXP, SEXP burn_inSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type mu0(mu0SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type sigma0_sqrt(sigma0_sqrtSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type psi_sqrt(psi_sqrtSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type theta_sqrt(theta_sqrtSEXP);
    Rcpp::traits::input_parameter< const int >::type time(timeSEXP);
    Rcpp::traits::input_parameter< const int >::type burn_in(burn_inSEXP);
    rcpp_result_gen = Rcpp::wrap(SimSSM0(mu0, sigma0_sqrt, alpha, beta, psi_sqrt, nu, lambda, theta_sqrt, time, burn_in));
    return rcpp_result_gen;
END_RCPP
}
// SimSSMOUFixed
Rcpp::List SimSSMOUFixed(const int n, const arma::vec& mu0, const arma::mat& sigma0_sqrt, const arma::vec& mu, const arma::mat& phi, const arma::mat& sigma_sqrt, const arma::vec& nu, const arma::mat& lambda, const arma::mat& theta_sqrt, const double delta_t, const int time, const int burn_in);
RcppExport SEXP _simStateSpace_SimSSMOUFixed(SEXP nSEXP, SEXP mu0SEXP, SEXP sigma0_sqrtSEXP, SEXP muSEXP, SEXP phiSEXP, SEXP sigma_sqrtSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP theta_sqrtSEXP, SEXP delta_tSEXP, SEXP timeSEXP, SEXP burn_inSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type n(nSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type mu0(mu0SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type sigma0_sqrt(sigma0_sqrtSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type sigma_sqrt(sigma_sqrtSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type theta_sqrt(theta_sqrtSEXP);
    Rcpp::traits::input_parameter< const double >::type delta_t(delta_tSEXP);
    Rcpp::traits::input_parameter< const int >::type time(timeSEXP);
    Rcpp::traits::input_parameter< const int >::type burn_in(burn_inSEXP);
    rcpp_result_gen = Rcpp::wrap(SimSSMOUFixed(n, mu0, sigma0_sqrt, mu, phi, sigma_sqrt, nu, lambda, theta_sqrt, delta_t, time, burn_in));
    return rcpp_result_gen;
END_RCPP
}
// SimSSMOU
Rcpp::List SimSSMOU(const arma::vec& mu0, const arma::mat& sigma0_sqrt, const arma::vec& mu, const arma::mat& phi, const arma::mat& sigma_sqrt, const arma::vec& nu, const arma::mat& lambda, const arma::mat& theta_sqrt, const double delta_t, const int time, const int burn_in);
RcppExport SEXP _simStateSpace_SimSSMOU(SEXP mu0SEXP, SEXP sigma0_sqrtSEXP, SEXP muSEXP, SEXP phiSEXP, SEXP sigma_sqrtSEXP, SEXP nuSEXP, SEXP lambdaSEXP, SEXP theta_sqrtSEXP, SEXP delta_tSEXP, SEXP timeSEXP, SEXP burn_inSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type mu0(mu0SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type sigma0_sqrt(sigma0_sqrtSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type sigma_sqrt(sigma_sqrtSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type theta_sqrt(theta_sqrtSEXP);
    Rcpp::traits::input_parameter< const double >::type delta_t(delta_tSEXP);
    Rcpp::traits::input_parameter< const int >::type time(timeSEXP);
    Rcpp::traits::input_parameter< const int >::type burn_in(burn_inSEXP);
    rcpp_result_gen = Rcpp::wrap(SimSSMOU(mu0, sigma0_sqrt, mu, phi, sigma_sqrt, nu, lambda, theta_sqrt, delta_t, time, burn_in));
    return rcpp_result_gen;
END_RCPP
}
// SimSSMVARFixed
Rcpp::List SimSSMVARFixed(const int n, const arma::vec& mu0, const arma::mat& sigma0_sqrt, const arma::vec& alpha, const arma::mat& beta, const arma::mat& psi_sqrt, const int time, const int burn_in);
RcppExport SEXP _simStateSpace_SimSSMVARFixed(SEXP nSEXP, SEXP mu0SEXP, SEXP sigma0_sqrtSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP psi_sqrtSEXP, SEXP timeSEXP, SEXP burn_inSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type n(nSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type mu0(mu0SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type sigma0_sqrt(sigma0_sqrtSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type psi_sqrt(psi_sqrtSEXP);
    Rcpp::traits::input_parameter< const int >::type time(timeSEXP);
    Rcpp::traits::input_parameter< const int >::type burn_in(burn_inSEXP);
    rcpp_result_gen = Rcpp::wrap(SimSSMVARFixed(n, mu0, sigma0_sqrt, alpha, beta, psi_sqrt, time, burn_in));
    return rcpp_result_gen;
END_RCPP
}
// SimSSMVAR
Rcpp::List SimSSMVAR(const arma::vec& mu0, const arma::mat& sigma0_sqrt, const arma::vec& alpha, const arma::mat& beta, const arma::mat& psi_sqrt, const int time, const int burn_in);
RcppExport SEXP _simStateSpace_SimSSMVAR(SEXP mu0SEXP, SEXP sigma0_sqrtSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP psi_sqrtSEXP, SEXP timeSEXP, SEXP burn_inSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type mu0(mu0SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type sigma0_sqrt(sigma0_sqrtSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type psi_sqrt(psi_sqrtSEXP);
    Rcpp::traits::input_parameter< const int >::type time(timeSEXP);
    Rcpp::traits::input_parameter< const int >::type burn_in(burn_inSEXP);
    rcpp_result_gen = Rcpp::wrap(SimSSMVAR(mu0, sigma0_sqrt, alpha, beta, psi_sqrt, time, burn_in));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_simStateSpace_OU2SSM", (DL_FUNC) &_simStateSpace_OU2SSM, 4},
    {"_simStateSpace_SimSSM0Fixed", (DL_FUNC) &_simStateSpace_SimSSM0Fixed, 11},
    {"_simStateSpace_SimSSM0", (DL_FUNC) &_simStateSpace_SimSSM0, 10},
    {"_simStateSpace_SimSSMOUFixed", (DL_FUNC) &_simStateSpace_SimSSMOUFixed, 12},
    {"_simStateSpace_SimSSMOU", (DL_FUNC) &_simStateSpace_SimSSMOU, 11},
    {"_simStateSpace_SimSSMVARFixed", (DL_FUNC) &_simStateSpace_SimSSMVARFixed, 8},
    {"_simStateSpace_SimSSMVAR", (DL_FUNC) &_simStateSpace_SimSSMVAR, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_simStateSpace(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
