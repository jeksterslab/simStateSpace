[{"path":"https://github.com/jeksterslab/simStateSpace/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://github.com/jeksterslab/simStateSpace/articles/lin-growth.html","id":"model","dir":"Articles","previous_headings":"","what":"Model","title":"The Linear Growth Curve Model","text":"measurement model given Yi,t=(10)(η0i,tη1i,t)+𝛆i,t,with𝛆i,t∼𝒩(0,θ)\\begin{equation}   Y_{, t}   =   \\left(   \\begin{array}{cc}     1 & 0 \\\\   \\end{array}   \\right)   \\left(   \\begin{array}{c}     \\eta_{0_{, t}} \\\\     \\eta_{1_{, t}} \\\\   \\end{array}   \\right)   +   \\boldsymbol{\\varepsilon}_{, t},   \\quad   \\mathrm{}   \\quad   \\boldsymbol{\\varepsilon}_{, t}   \\sim   \\mathcal{N}   \\left(   0,   \\theta   \\right) \\end{equation} Yi,tY_{, t}, η0i,t\\eta_{0_{, t}}, η1i,t\\eta_{1_{, t}}, 𝛆i,t\\boldsymbol{\\varepsilon}_{, t} random variables θ\\theta model parameter. Yi,tY_{, t} observed random variable time tt individual ii, η0i,t\\eta_{0_{, t}} (intercept) η1i,t\\eta_{1_{, t}} (slope) form vector latent random variables time tt individual ii, 𝛆i,t\\boldsymbol{\\varepsilon}_{, t} vector random measurement errors time tt individual ii. θ\\theta variance 𝛆\\boldsymbol{\\varepsilon}. dynamic structure given (η0i,tη1i,t)=(1101)(η0i,t−1η1i,t−1).\\begin{equation}   \\left(   \\begin{array}{c}   \\eta_{0_{, t}} \\\\   \\eta_{1_{, t}} \\\\   \\end{array}   \\right)   =   \\left(   \\begin{array}{cc}     1 & 1 \\\\     0 & 1 \\\\   \\end{array}   \\right)   \\left(   \\begin{array}{c}   \\eta_{0_{, t - 1}} \\\\   \\eta_{1_{, t - 1}} \\\\   \\end{array}   \\right) . \\end{equation} mean vector covariance matrix intercept slope captured mean vector covariance matrix initial condition given 𝛍𝛈∣0=(μη0μη1),\\begin{equation}   \\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0}   =   \\left(   \\begin{array}{c}     \\mu_{\\eta_{0}} \\\\     \\mu_{\\eta_{1}} \\\\   \\end{array}   \\right) \\quad \\mathrm{,} \\end{equation} 𝚺𝛈∣0=(ση02ση0,η1ση1,η0ση12).\\begin{equation}   \\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0}   =   \\left(   \\begin{array}{cc}     \\sigma^{2}_{\\eta_{0}} &     \\sigma_{\\eta_{0}, \\eta_{1}} \\\\     \\sigma_{\\eta_{1}, \\eta_{0}} &     \\sigma^{2}_{\\eta_{1}} \\\\   \\end{array}   \\right) . \\end{equation}","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/articles/lin-growth.html","id":"notation","dir":"Articles","previous_headings":"Data Generation","what":"Notation","title":"The Linear Growth Curve Model","text":"Let t=5t = 5 number time points n=10<sup>4<\/sup>n = 10<sup>4<\/sup> number individuals. Let measurement error variance θ\\theta given θ=0.6.\\begin{equation} \\theta = 0.6 . \\end{equation} Let initial condition 𝛈0\\boldsymbol{\\eta}_{0} given 𝛈0∼𝒩(𝛍𝛈∣0,𝚺𝛈∣0)\\begin{equation} \\boldsymbol{\\eta}_{0} \\sim \\mathcal{N} \\left( \\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0}, \\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0} \\right) \\end{equation} 𝛍𝛈∣0=(0.6151.006)\\begin{equation} \\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0} = \\left( \\begin{array}{c}   0.615 \\\\   1.006 \\\\ \\end{array} \\right) \\end{equation} 𝚺𝛈∣0=(1.9320.6180.6180.587).\\begin{equation} \\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0} = \\left( \\begin{array}{ccc}   1.932 & 0.618 \\\\   0.618 & 0.587 \\\\ \\end{array} \\right) . \\end{equation}","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/articles/lin-growth.html","id":"r-function-arguments","dir":"Articles","previous_headings":"Data Generation","what":"R Function Arguments","title":"The Linear Growth Curve Model","text":"","code":"n #> [1] 10000 time #> [1] 5 mu0 #> [1] 0.615 1.006 sigma0 #>       [,1]  [,2] #> [1,] 1.932 0.618 #> [2,] 0.618 0.587 sigma0_l # sigma0_l <- t(chol(sigma0)) #>           [,1]      [,2] #> [1,] 1.3899640 0.0000000 #> [2,] 0.4446158 0.6239525 theta #> [1] 0.6 theta_l # theta_l <- t(chol(theta)) #> [1] 0.7745967"},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/articles/lin-growth.html","id":"using-the-simssmlingrowth-function-from-the-simstatespace-package-to-simulate-data","dir":"Articles","previous_headings":"Data Generation","what":"Using the SimSSMLinGrowth Function from the simStateSpace Package to Simulate Data","title":"The Linear Growth Curve Model","text":"","code":"library(simStateSpace) sim <- SimSSMLinGrowth(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   theta_l = theta_l,   type = 0 ) data <- as.data.frame(sim) head(data) #>   id time       y1 #> 1  1    0 1.723564 #> 2  1    1 2.148702 #> 3  1    2 3.384974 #> 4  1    3 6.225426 #> 5  1    4 5.993965 #> 6  2    0 1.951861 summary(data) #>        id             time         y1           #>  Min.   :    1   Min.   :0   Min.   :-10.7863   #>  1st Qu.: 2501   1st Qu.:1   1st Qu.:  0.3943   #>  Median : 5000   Median :2   Median :  2.1839   #>  Mean   : 5000   Mean   :2   Mean   :  2.5978   #>  3rd Qu.: 7500   3rd Qu.:3   3rd Qu.:  4.4536   #>  Max.   :10000   Max.   :4   Max.   : 21.0250 plot(sim)"},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/articles/lin-growth.html","id":"prepare-data","dir":"Articles","previous_headings":"Model Fitting","what":"Prepare Data","title":"The Linear Growth Curve Model","text":"","code":"dynr_data <- dynr::dynr.data(   dataframe = data,   id = \"id\",   time = \"time\",   observed = \"y1\" )"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/lin-growth.html","id":"prepare-initial-condition","dir":"Articles","previous_headings":"Model Fitting","what":"Prepare Initial Condition","title":"The Linear Growth Curve Model","text":"","code":"dynr_initial <- dynr::prep.initial(   values.inistate = mu0,   params.inistate = c(\"mu0_0\", \"mu0_1\"),   values.inicov = sigma0,   params.inicov = matrix(     data = c(       \"sigma0_00\", \"sigma0_01\",       \"sigma0_01\", \"sigma0_11\"     ),     nrow = 2   ) )"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/lin-growth.html","id":"prepare-measurement-model","dir":"Articles","previous_headings":"Model Fitting","what":"Prepare Measurement Model","title":"The Linear Growth Curve Model","text":"","code":"dynr_measurement <- dynr::prep.measurement(   values.load = matrix(data = c(1, 0), nrow = 1),   params.load = matrix(data = \"fixed\", nrow = 1, ncol = 2),   state.names = c(\"eta_0\", \"eta_1\"),   obs.names = \"y1\" )"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/lin-growth.html","id":"prepare-dynamic-process","dir":"Articles","previous_headings":"Model Fitting","what":"Prepare Dynamic Process","title":"The Linear Growth Curve Model","text":"","code":"dynr_dynamics <- dynr::prep.formulaDynamics(   formula = list(     eta_0 ~ eta_0 + eta_1,     eta_1 ~ eta_1   ),   isContinuousTime = FALSE ) #> Warning in dynr::prep.formulaDynamics(formula = list(eta_0 ~ eta_0 + eta_1, : #> You provided no start values: length(startval)==0. If you have no free #> parameters, keep calm and carry on."},{"path":"https://github.com/jeksterslab/simStateSpace/articles/lin-growth.html","id":"prepare-process-noise","dir":"Articles","previous_headings":"Model Fitting","what":"Prepare Process Noise","title":"The Linear Growth Curve Model","text":"","code":"dynr_noise <- dynr::prep.noise(   values.latent = matrix(data = 0, nrow = 2, ncol = 2),   params.latent = matrix(data = \"fixed\", nrow = 2, ncol = 2),   values.observed = theta,   params.observed = \"theta\" )"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/lin-growth.html","id":"prepare-the-model","dir":"Articles","previous_headings":"Model Fitting","what":"Prepare the Model","title":"The Linear Growth Curve Model","text":"","code":"model <- dynr::dynr.model(   data = dynr_data,   initial = dynr_initial,   measurement = dynr_measurement,   dynamics = dynr_dynamics,   noise = dynr_noise,   outfile = \"lin-growth.c\" )"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/lin-growth.html","id":"fit-the-model","dir":"Articles","previous_headings":"Model Fitting","what":"Fit the Model","title":"The Linear Growth Curve Model","text":"","code":"results <- dynr::dynr.cook(   model,   debug_flag = TRUE,   verbose = FALSE ) #> [1] \"Get ready!!!!\" #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ #> Optimization function called. #> Starting Hessian calculation ... #> Finished Hessian calculation. #> Original exit flag:  3  #> Modified exit flag:  3  #> Optimization terminated successfully: ftol_rel or ftol_abs was reached.  #> Original fitted parameters:  -0.5089635 0.60732 0.9952181 0.6477021 0.3152438  #> -0.9463643  #>  #> Transformed fitted parameters:  0.6011183 0.60732 0.9952181 1.911144 0.6024764  #> 0.5780766  #>  #> Doing end processing #> Successful trial #> Total Time: 1.389332  #> Backend Time: 1.38052"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/lin-growth.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"The Linear Growth Curve Model","text":"","code":"summary(results) #> Coefficients: #>           Estimate Std. Error t value ci.lower ci.upper Pr(>|t|)     #> theta     0.601118   0.004914  122.34 0.591488 0.610749   <2e-16 *** #> mu0_0     0.607320   0.015112   40.19 0.577701 0.636939   <2e-16 *** #> mu0_1     0.995218   0.007992  124.53 0.979554 1.010882   <2e-16 *** #> sigma0_00 1.911144   0.032346   59.08 1.847747 1.974541   <2e-16 *** #> sigma0_01 0.602476   0.013016   46.29 0.576966 0.627987   <2e-16 *** #> sigma0_11 0.578077   0.009046   63.90 0.560347 0.595807   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> -2 log-likelihood value at convergence = 167712.56 #> AIC = 167724.56 #> BIC = 167777.48 #> [1] 0.6073200 0.9952181"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/lin-growth.html","id":"estimated-parameters","dir":"Articles","previous_headings":"Summary","what":"Estimated Parameters","title":"The Linear Growth Curve Model","text":"","code":"mu0_hat #> [1] 0.6073200 0.9952181 sigma0_hat #>           [,1]      [,2] #> [1,] 1.9111442 0.6024764 #> [2,] 0.6024764 0.5780766 theta_hat #>     theta  #> 0.6011183"},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/articles/lin-growth.html","id":"wide-data-set","dir":"Articles","previous_headings":"Linear Growth Curve Model in Structural Equation Modeling","what":"Wide Data Set","title":"The Linear Growth Curve Model","text":"","code":"data <- as.data.frame(sim, long = FALSE) head(data) #>   id        y1_0       y1_1        y1_2        y1_3       y1_4 #> 1  1  1.72356430  2.1487019  3.38497364  6.22542609  5.9939649 #> 2  2  1.95186051  2.6140623  5.60107919  5.59791920  7.6881040 #> 3  3  0.07909854 -1.1410633 -0.02940765  0.07103948 -0.4998955 #> 4  4 -0.14827866 -0.6478676 -0.33440620 -0.29683127 -0.6950588 #> 5  5  1.14625267  2.3844799  0.39101270 -0.76159166  1.6750324 #> 6  6  1.02604168  2.1852479  2.55168739  2.13223414  4.1499727"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/lin-growth.html","id":"model-1","dir":"Articles","previous_headings":"Linear Growth Curve Model in Structural Equation Modeling","what":"Model","title":"The Linear Growth Curve Model","text":"","code":"model <- \"   # factor loadings   eta0 =~ 1 * y1_0 + 1 * y1_1 + 1 * y1_2 + 1 * y1_3 + 1 * y1_4   eta1 =~ 0 * y1_0 + 1 * y1_1 + 2 * y1_2 + 3 * y1_3 + 4 * y1_4   # means of latent variables   eta0 ~ mu0_0 * 1   eta1 ~ mu0_1 * 1   # variances and covariances of latent variables   eta0 ~~ sigma0_00 * eta0   eta0 ~~ sigma0_01 * eta1   eta1 ~~ sigma0_11 * eta1   # constrain error variance theta to be equal   y1_0 ~~ theta * y1_0   y1_1 ~~ theta * y1_1   y1_2 ~~ theta * y1_2   y1_3 ~~ theta * y1_3   y1_4 ~~ theta * y1_4 \" fit <- lavaan::growth(   model = model,   data = data ) lavaan::summary(fit) #> lavaan 0.6-19 ended normally after 34 iterations #>  #>   Estimator                                         ML #>   Optimization method                           NLMINB #>   Number of model parameters                        10 #>   Number of equality constraints                     4 #>  #>   Number of observations                         10000 #>  #> Model Test User Model: #>                                                        #>   Test statistic                                 5.386 #>   Degrees of freedom                                14 #>   P-value (Chi-square)                           0.980 #>  #> Parameter Estimates: #>  #>   Standard errors                             Standard #>   Information                                 Expected #>   Information saturated (h1) model          Structured #>  #> Latent Variables: #>                    Estimate  Std.Err  z-value  P(>|z|) #>   eta0 =~                                              #>     y1_0              1.000                            #>     y1_1              1.000                            #>     y1_2              1.000                            #>     y1_3              1.000                            #>     y1_4              1.000                            #>   eta1 =~                                              #>     y1_0              0.000                            #>     y1_1              1.000                            #>     y1_2              2.000                            #>     y1_3              3.000                            #>     y1_4              4.000                            #>  #> Covariances: #>                    Estimate  Std.Err  z-value  P(>|z|) #>   eta0 ~~                                              #>     eta1    (s0_0)    0.602    0.013   46.317    0.000 #>  #> Intercepts: #>                    Estimate  Std.Err  z-value  P(>|z|) #>     eta0    (m0_0)    0.607    0.015   40.295    0.000 #>     eta1    (m0_1)    0.995    0.008  124.582    0.000 #>  #> Variances: #>                    Estimate  Std.Err  z-value  P(>|z|) #>     eta0    (s0_0)    1.911    0.032   59.235    0.000 #>     eta1    (s0_1)    0.578    0.009   63.955    0.000 #>    .y1_0    (thet)    0.601    0.005  122.474    0.000 #>    .y1_1    (thet)    0.601    0.005  122.474    0.000 #>    .y1_2    (thet)    0.601    0.005  122.474    0.000 #>    .y1_3    (thet)    0.601    0.005  122.474    0.000 #>    .y1_4    (thet)    0.601    0.005  122.474    0.000 #> [1] 0.6073200 0.9952181"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/lin-growth.html","id":"estimated-parameters-1","dir":"Articles","previous_headings":"Linear Growth Curve Model in Structural Equation Modeling","what":"Estimated Parameters","title":"The Linear Growth Curve Model","text":"","code":"mu0_hat #> [1] 0.6073200 0.9952181 sigma0_hat #>           [,1]      [,2] #> [1,] 1.9111442 0.6024764 #> [2,] 0.6024764 0.5780766 theta_hat #> [1] 0.6011183"},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/articles/ou.html","id":"model","dir":"Articles","previous_headings":"","what":"Model","title":"The Ornstein–Uhlenbeck Model","text":"measurement model given 𝐲i,t=𝛎+𝚲𝛈i,t+𝛆i,t,with𝛆i,t∼𝒩(𝟎,𝚯)\\begin{equation}   \\mathbf{y}_{, t}   =   \\boldsymbol{\\nu}   +   \\boldsymbol{\\Lambda}   \\boldsymbol{\\eta}_{, t}   +   \\boldsymbol{\\varepsilon}_{, t},   \\quad   \\mathrm{}   \\quad   \\boldsymbol{\\varepsilon}_{, t}   \\sim   \\mathcal{N}   \\left(   \\mathbf{0},   \\boldsymbol{\\Theta}   \\right) \\end{equation} 𝐲i,t\\mathbf{y}_{, t}, 𝛈i,t\\boldsymbol{\\eta}_{, t}, 𝛆i,t\\boldsymbol{\\varepsilon}_{, t} random variables 𝛎\\boldsymbol{\\nu}, 𝚲\\boldsymbol{\\Lambda}, 𝚯\\boldsymbol{\\Theta} model parameters. 𝐲i,t\\mathbf{y}_{, t} represents vector observed random variables, 𝛈i,t\\boldsymbol{\\eta}_{, t} vector latent random variables, 𝛆i,t\\boldsymbol{\\varepsilon}_{, t} vector random measurement errors, time tt individual ii. 𝛎\\boldsymbol{\\nu} denotes vector intercepts, 𝚲\\boldsymbol{\\Lambda} matrix factor loadings, 𝚯\\boldsymbol{\\Theta} covariance matrix 𝛆\\boldsymbol{\\varepsilon}. alternative representation measurement error given 𝛆i,t=𝚯12𝐳i,t,with𝐳i,t∼𝒩(𝟎,𝐈)\\begin{equation}   \\boldsymbol{\\varepsilon}_{, t}   =   \\boldsymbol{\\Theta}^{\\frac{1}{2}}   \\mathbf{z}_{, t},   \\quad   \\mathrm{}   \\quad   \\mathbf{z}_{, t}   \\sim   \\mathcal{N}   \\left(   \\mathbf{0},   \\mathbf{}   \\right) \\end{equation} 𝐳i,t\\mathbf{z}_{, t} vector independent standard normal random variables (𝚯12)(𝚯12)′=𝚯\\left( \\boldsymbol{\\Theta}^{\\frac{1}{2}} \\right) \\left( \\boldsymbol{\\Theta}^{\\frac{1}{2}} \\right)^{\\prime} = \\boldsymbol{\\Theta} . dynamic structure given d𝛈i,t=𝚽(𝛈i,t−𝛍)dt+𝚺12d𝐖i,t\\begin{equation}   \\mathrm{d} \\boldsymbol{\\eta}_{, t}   =   \\boldsymbol{\\Phi}   \\left(   \\boldsymbol{\\eta}_{, t}   -   \\boldsymbol{\\mu}   \\right)   \\mathrm{d}t   +   \\boldsymbol{\\Sigma}^{\\frac{1}{2}}   \\mathrm{d}   \\mathbf{W}_{, t} \\end{equation} 𝛍\\boldsymbol{\\mu} long-term mean equilibrium level, 𝚽\\boldsymbol{\\Phi} rate mean reversion, determining quickly variable returns mean, 𝚺\\boldsymbol{\\Sigma} matrix volatility randomness process, d𝐖\\mathrm{d}\\boldsymbol{W} Wiener process Brownian motion, represents random fluctuations.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/articles/ou.html","id":"notation","dir":"Articles","previous_headings":"Data Generation","what":"Notation","title":"The Ornstein–Uhlenbeck Model","text":"Let t=1000t = 1000 number time points n=200n = 200 number individuals. Let measurement model intecept vector 𝛎\\boldsymbol{\\nu} given 𝛎=(000).\\begin{equation} \\boldsymbol{\\nu} = \\left( \\begin{array}{c}   0 \\\\   0 \\\\   0 \\\\ \\end{array} \\right) . \\end{equation} Let factor loadings matrix 𝚲\\boldsymbol{\\Lambda} given 𝚲=(100010001).\\begin{equation} \\boldsymbol{\\Lambda} = \\left( \\begin{array}{ccc}   1 & 0 & 0 \\\\   0 & 1 & 0 \\\\   0 & 0 & 1 \\\\ \\end{array} \\right) . \\end{equation} Let measurement error covariance matrix 𝚯\\boldsymbol{\\Theta} given 𝚯=(0.20000.20000.2).\\begin{equation} \\boldsymbol{\\Theta} = \\left( \\begin{array}{ccc}   0.2 & 0 & 0 \\\\   0 & 0.2 & 0 \\\\   0 & 0 & 0.2 \\\\ \\end{array} \\right) . \\end{equation} Let initial condition 𝛈0\\boldsymbol{\\eta}_{0} given 𝛈0∼𝒩(𝛍𝛈∣0,𝚺𝛈∣0)\\begin{equation} \\boldsymbol{\\eta}_{0} \\sim \\mathcal{N} \\left( \\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0}, \\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0} \\right) \\end{equation} 𝛍𝛈∣0=(000)\\begin{equation} \\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0} = \\left( \\begin{array}{c}   0 \\\\   0 \\\\   0 \\\\ \\end{array} \\right) \\end{equation} 𝚺𝛈∣0=(10.20.20.210.20.20.21).\\begin{equation} \\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0} = \\left( \\begin{array}{ccc}   1 & 0.2 & 0.2 \\\\   0.2 & 1 & 0.2 \\\\   0.2 & 0.2 & 1 \\\\ \\end{array} \\right) . \\end{equation} Let long-term mean vector 𝛍\\boldsymbol{\\mu} given 𝛍=(000).\\begin{equation} \\boldsymbol{\\mu} = \\left( \\begin{array}{c}   0 \\\\   0 \\\\   0 \\\\ \\end{array} \\right) . \\end{equation} Let rate mean reversion matrix 𝚽\\boldsymbol{\\Phi} given 𝚽=(−0.357000.771−0.5110−0.450.729−0.693).\\begin{equation} \\boldsymbol{\\Phi} = \\left( \\begin{array}{ccc}   -0.357 & 0 & 0 \\\\   0.771 & -0.511 & 0 \\\\   -0.45 & 0.729 & -0.693 \\\\ \\end{array} \\right) . \\end{equation} Let dynamic process noise covariance matrix 𝚺\\boldsymbol{\\Sigma} given 𝚺=(0.24455560.0220159−0.05004760.02201590.0706780.0153946−0.05004760.01539460.0755306).\\begin{equation} \\boldsymbol{\\Sigma} = \\left( \\begin{array}{ccc}   0.2445556 & 0.0220159 & -0.0500476 \\\\   0.0220159 & 0.070678 & 0.0153946 \\\\   -0.0500476 & 0.0153946 & 0.0755306 \\\\ \\end{array} \\right) . \\end{equation} Let Δt=0.1\\Delta t = 0.1.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/articles/ou.html","id":"r-function-arguments","dir":"Articles","previous_headings":"Data Generation","what":"R Function Arguments","title":"The Ornstein–Uhlenbeck Model","text":"","code":"n #> [1] 200 time #> [1] 1000 delta_t #> [1] 0.1 mu0 #> [1] 0 0 0 sigma0 #>      [,1] [,2] [,3] #> [1,]  1.0  0.2  0.2 #> [2,]  0.2  1.0  0.2 #> [3,]  0.2  0.2  1.0 sigma0_l # sigma0_l <- t(chol(sigma0)) #>      [,1]      [,2]      [,3] #> [1,]  1.0 0.0000000 0.0000000 #> [2,]  0.2 0.9797959 0.0000000 #> [3,]  0.2 0.1632993 0.9660918 mu #> [1] 0 0 0 phi #>        [,1]   [,2]   [,3] #> [1,] -0.357  0.000  0.000 #> [2,]  0.771 -0.511  0.000 #> [3,] -0.450  0.729 -0.693 sigma #>             [,1]       [,2]        [,3] #> [1,]  0.24455556 0.02201587 -0.05004762 #> [2,]  0.02201587 0.07067800  0.01539456 #> [3,] -0.05004762 0.01539456  0.07553061 sigma_l # sigma_l <- t(chol(sigma)) #>             [,1]      [,2]     [,3] #> [1,]  0.49452559 0.0000000 0.000000 #> [2,]  0.04451917 0.2620993 0.000000 #> [3,] -0.10120330 0.0759256 0.243975 nu #> [1] 0 0 0 lambda #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 theta #>      [,1] [,2] [,3] #> [1,]  0.2  0.0  0.0 #> [2,]  0.0  0.2  0.0 #> [3,]  0.0  0.0  0.2 theta_l # theta_l <- t(chol(theta)) #>           [,1]      [,2]      [,3] #> [1,] 0.4472136 0.0000000 0.0000000 #> [2,] 0.0000000 0.4472136 0.0000000 #> [3,] 0.0000000 0.0000000 0.4472136"},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/articles/ou.html","id":"using-the-simssmoufixed-function-from-the-simstatespace-package-to-simulate-data","dir":"Articles","previous_headings":"Data Generation","what":"Using the SimSSMOUFixed Function from the simStateSpace Package to Simulate Data","title":"The Ornstein–Uhlenbeck Model","text":"","code":"library(simStateSpace) sim <- SimSSMOUFixed(   n = n,   time = time,   delta_t = delta_t,   mu0 = mu0,   sigma0_l = sigma0_l,   mu = mu,   phi = phi,   sigma_l = sigma_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 0 ) data <- as.data.frame(sim) head(data) #>   id time          y1          y2        y3 #> 1  1  0.0  0.29937539 -1.37581548 1.3779071 #> 2  1  0.1 -0.98770381 -0.03632195 0.8363080 #> 3  1  0.2  0.33221051 -0.40321664 1.2054318 #> 4  1  0.3 -0.09485392 -0.82030556 1.0272653 #> 5  1  0.4 -1.50322069 -0.36841853 0.1821731 #> 6  1  0.5 -0.75049839  0.35752476 0.2862544 summary(data) #>        id              time             y1                 y2           #>  Min.   :  1.00   Min.   : 0.00   Min.   :-3.98174   Min.   :-4.00519   #>  1st Qu.: 50.75   1st Qu.:24.98   1st Qu.:-0.49138   1st Qu.:-0.57912   #>  Median :100.50   Median :49.95   Median : 0.01242   Median : 0.02468   #>  Mean   :100.50   Mean   :49.95   Mean   : 0.01203   Mean   : 0.02172   #>  3rd Qu.:150.25   3rd Qu.:74.92   3rd Qu.: 0.51866   3rd Qu.: 0.62401   #>  Max.   :200.00   Max.   :99.90   Max.   : 3.44725   Max.   : 4.07203   #>        y3           #>  Min.   :-3.01407   #>  1st Qu.:-0.47005   #>  Median : 0.01713   #>  Mean   : 0.01740   #>  3rd Qu.: 0.50573   #>  Max.   : 3.29603 plot(sim)"},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/articles/ou.html","id":"prepare-data","dir":"Articles","previous_headings":"Model Fitting","what":"Prepare Data","title":"The Ornstein–Uhlenbeck Model","text":"","code":"dynr_data <- dynr::dynr.data(   dataframe = data,   id = \"id\",   time = \"time\",   observed = c(\"y1\", \"y2\", \"y3\") )"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/ou.html","id":"prepare-initial-condition","dir":"Articles","previous_headings":"Model Fitting","what":"Prepare Initial Condition","title":"The Ornstein–Uhlenbeck Model","text":"","code":"dynr_initial <- dynr::prep.initial(   values.inistate = mu0,   params.inistate = c(\"mu0_1_1\", \"mu0_2_1\", \"mu0_3_1\"),   values.inicov = sigma0,   params.inicov = matrix(     data = c(       \"sigma0_1_1\", \"sigma0_2_1\", \"sigma0_3_1\",       \"sigma0_2_1\", \"sigma0_2_2\", \"sigma0_3_2\",       \"sigma0_3_1\", \"sigma0_3_2\", \"sigma0_3_3\"     ),     nrow = 3   ) )"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/ou.html","id":"prepare-measurement-model","dir":"Articles","previous_headings":"Model Fitting","what":"Prepare Measurement Model","title":"The Ornstein–Uhlenbeck Model","text":"","code":"dynr_measurement <- dynr::prep.measurement(   values.load = diag(3),   params.load = matrix(data = \"fixed\", nrow = 3, ncol = 3),   state.names = c(\"eta_1\", \"eta_2\", \"eta_3\"),   obs.names = c(\"y1\", \"y2\", \"y3\") )"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/ou.html","id":"prepare-dynamic-process","dir":"Articles","previous_headings":"Model Fitting","what":"Prepare Dynamic Process","title":"The Ornstein–Uhlenbeck Model","text":"","code":"dynr_dynamics <- dynr::prep.formulaDynamics(   formula = list(     eta_1 ~ (phi_1_1 * (eta_1 - mu_1_1)) + (phi_1_2 * (eta_2 - mu_2_1)) + (phi_1_3 * (eta_3 - mu_3_1)),     eta_2 ~ (phi_2_1 * (eta_1 - mu_1_1)) + (phi_2_2 * (eta_2 - mu_2_1)) + (phi_2_3 * (eta_3 - mu_3_1)),     eta_3 ~ (phi_3_1 * (eta_1 - mu_1_1)) + (phi_3_2 * (eta_2 - mu_2_1)) + (phi_3_3 * (eta_3 - mu_3_1))   ),   startval = c(     mu_1_1 = mu[1], mu_2_1 = mu[2], mu_3_1 = mu[3],     phi_1_1 = phi[1, 1], phi_1_2 = phi[1, 2], phi_1_3 = phi[1, 3],     phi_2_1 = phi[2, 1], phi_2_2 = phi[2, 2], phi_2_3 = phi[2, 3],     phi_3_1 = phi[3, 1], phi_3_2 = phi[3, 2], phi_3_3 = phi[3, 3]   ),   isContinuousTime = TRUE )"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/ou.html","id":"prepare-process-noise","dir":"Articles","previous_headings":"Model Fitting","what":"Prepare Process Noise","title":"The Ornstein–Uhlenbeck Model","text":"","code":"dynr_noise <- dynr::prep.noise(   values.latent = sigma,   params.latent = matrix(     data = c(       \"sigma_1_1\", \"sigma_2_1\", \"sigma_3_1\",       \"sigma_2_1\", \"sigma_2_2\", \"sigma_3_2\",       \"sigma_3_1\", \"sigma_3_2\", \"sigma_3_3\"     ),     nrow = 3   ),   values.observed = theta,   params.observed = matrix(     data = c(       \"theta_1_1\", \"fixed\", \"fixed\",       \"fixed\", \"theta_2_2\", \"fixed\",       \"fixed\", \"fixed\", \"theta_3_3\"     ),     nrow = 3   ) )"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/ou.html","id":"prepare-the-model","dir":"Articles","previous_headings":"Model Fitting","what":"Prepare the Model","title":"The Ornstein–Uhlenbeck Model","text":"Add lower upper bounds aid optimization.","code":"model <- dynr::dynr.model(   data = dynr_data,   initial = dynr_initial,   measurement = dynr_measurement,   dynamics = dynr_dynamics,   noise = dynr_noise,   outfile = \"ou.c\" ) model$lb[   c(     \"phi_1_1\",     \"phi_1_2\",     \"phi_1_3\",     \"phi_2_1\",     \"phi_2_2\",     \"phi_2_3\",     \"phi_3_1\",     \"phi_3_2\",     \"phi_3_3\"   ) ] <- -1.5 model$ub[   c(     \"phi_1_1\",     \"phi_1_2\",     \"phi_1_3\",     \"phi_2_1\",     \"phi_2_2\",     \"phi_2_3\",     \"phi_3_1\",     \"phi_3_2\",     \"phi_3_3\"   ) ] <- +1.5"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/ou.html","id":"fit-the-model","dir":"Articles","previous_headings":"Model Fitting","what":"Fit the Model","title":"The Ornstein–Uhlenbeck Model","text":"","code":"results <- dynr::dynr.cook(   model,   debug_flag = TRUE,   verbose = FALSE ) #> [1] \"Get ready!!!!\" #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ #> Optimization function called. #> Starting Hessian calculation ... #> Finished Hessian calculation. #> Original exit flag:  3  #> Modified exit flag:  3  #> Optimization terminated successfully: ftol_rel or ftol_abs was reached.  #> Original fitted parameters:  0.007442292 0.01604335 0.01480636 -0.3456248  #> 0.005419372 -0.009033311 0.7838956 -0.5201802 0.01062686 -0.4662948 0.7365347  #> -0.6943723 -1.412437 0.08649707 -0.1973169 -2.657512 0.2701019 -2.83898  #> -1.613181 -1.614047 -1.607751 0.006357563 -0.08593 0.07062172 -0.05884392  #> 0.2155057 0.3158868 -0.02382581 0.09879069 -0.1320501  #>  #> Transformed fitted parameters:  0.007442292 0.01604335 0.01480636 -0.3456248  #> 0.005419372 -0.009033311 0.7838956 -0.5201802 0.01062686 -0.4662948 0.7365347  #> -0.6943723 0.243549 0.02106627 -0.04805632 0.07194466 0.01478349 0.0730834  #> 0.1992528 0.1990803 0.2003376 0.006357563 -0.08593 0.07062172 0.9428539  #> 0.2031904 0.2978351 1.020244 0.1606499 0.9799091  #>  #> Doing end processing #> Warning in sqrt(diag(iHess)): NaNs produced #> Warning in sqrt(diag(x$inv.hessian)): NaNs produced #> Warning: These parameters may have untrustworthy standard errors: sigma0_1_1. #> Total Time: 4.390706  #> Backend Time: 4.390532"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/ou.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"The Ornstein–Uhlenbeck Model","text":"","code":"summary(results) #> Coefficients: #>              Estimate Std. Error t value   ci.lower   ci.upper Pr(>|t|)     #> mu_1_1      0.0074423  0.0104386   0.713 -0.0130170  0.0279016   0.2379     #> mu_2_1      0.0160433  0.0169052   0.949 -0.0170902  0.0491769   0.1713     #> mu_3_1      0.0148064  0.0108888   1.360 -0.0065354  0.0361481   0.0870 .   #> phi_1_1    -0.3456248  0.0278701 -12.401 -0.4002493 -0.2910004   <2e-16 *** #> phi_1_2     0.0054194  0.0243789   0.222 -0.0423624  0.0532011   0.4120     #> phi_1_3    -0.0090333  0.0182009  -0.496 -0.0447064  0.0266397   0.3098     #> phi_2_1     0.7838956  0.0170028  46.104  0.7505707  0.8172204   <2e-16 *** #> phi_2_2    -0.5201802  0.0150804 -34.494 -0.5497372 -0.4906231   <2e-16 *** #> phi_2_3     0.0106269  0.0113504   0.936 -0.0116196  0.0328733   0.1746     #> phi_3_1    -0.4662948  0.0166687 -27.974 -0.4989648 -0.4336247   <2e-16 *** #> phi_3_2     0.7365347  0.0148027  49.757  0.7075220  0.7655473   <2e-16 *** #> phi_3_3    -0.6943723  0.0113168 -61.357 -0.7165529 -0.6721917   <2e-16 *** #> sigma_1_1   0.2435490  0.0051396  47.387  0.2334756  0.2536223   <2e-16 *** #> sigma_2_1   0.0210663  0.0019611  10.742  0.0172225  0.0249100   <2e-16 *** #> sigma_3_1  -0.0480563  0.0019832 -24.232 -0.0519433 -0.0441693   <2e-16 *** #> sigma_2_2   0.0719447  0.0014373  50.056  0.0691276  0.0747617   <2e-16 *** #> sigma_3_2   0.0147835  0.0010065  14.688  0.0128108  0.0167562   <2e-16 *** #> sigma_3_3   0.0730834  0.0015033  48.616  0.0701370  0.0760298   <2e-16 *** #> theta_1_1   0.1992528  0.0008420 236.633  0.1976024  0.2009031   <2e-16 *** #> theta_2_2   0.1990803  0.0007105 280.216  0.1976878  0.2004727   <2e-16 *** #> theta_3_3   0.2003376  0.0007163 279.668  0.1989336  0.2017416   <2e-16 *** #> mu0_1_1     0.0063576  0.1487472   0.043 -0.2851817  0.2978968   0.4830     #> mu0_2_1    -0.0859300  0.1174483  -0.732 -0.3161245  0.1442644   0.2322     #> mu0_3_1     0.0706217  0.1096089   0.644 -0.1442079  0.2854513   0.2597     #> sigma0_1_1  0.9428539        NaN      NA        NaN        NaN       NA     #> sigma0_2_1  0.2031904  0.0613306   3.313  0.0829847  0.3233961   0.0005 *** #> sigma0_3_1  0.2978351  0.0929435   3.204  0.1156693  0.4800010   0.0007 *** #> sigma0_2_2  1.0202445  0.1518651   6.718  0.7225943  1.3178947   <2e-16 *** #> sigma0_3_2  0.1606499  0.0967779   1.660 -0.0290313  0.3503311   0.0485 *   #> sigma0_3_3  0.9799091  0.1505299   6.510  0.6848759  1.2749423   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> -2 log-likelihood value at convergence = 858547.55 #> AIC = 858607.55 #> BIC = 858913.73 #> [1]  0.006357563 -0.085930001  0.070621716"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/ou.html","id":"parameter-estimates","dir":"Articles","previous_headings":"Summary","what":"Parameter Estimates","title":"The Ornstein–Uhlenbeck Model","text":"","code":"mu_hat #> [1] 0.007442292 0.016043348 0.014806356 phi_hat #>            [,1]         [,2]         [,3] #> [1,] -0.3456248  0.005419372 -0.009033311 #> [2,]  0.7838956 -0.520180154  0.010626862 #> [3,] -0.4662948  0.736534652 -0.694372287 sigma_hat #>             [,1]       [,2]        [,3] #> [1,]  0.24354895 0.02106627 -0.04805632 #> [2,]  0.02106627 0.07194466  0.01478349 #> [3,] -0.04805632 0.01478349  0.07308340 theta_hat #>           [,1]      [,2]      [,3] #> [1,] 0.1992528 0.0000000 0.0000000 #> [2,] 0.0000000 0.1990803 0.0000000 #> [3,] 0.0000000 0.0000000 0.2003376 mu0_hat #> [1]  0.006357563 -0.085930001  0.070621716 sigma0_hat #>           [,1]      [,2]      [,3] #> [1,] 0.9428539 0.2031904 0.2978351 #> [2,] 0.2031904 1.0202445 0.1606499 #> [3,] 0.2978351 0.1606499 0.9799091 beta_var1_hat <- expm::expm(phi_hat) beta_var1_hat #>            [,1]       [,2]         [,3] #> [1,]  0.7099883 0.00154277 -0.005393888 #> [2,]  0.5088275 0.59743359  0.003699334 #> [3,] -0.1070468 0.40207942  0.502151816"},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/articles/session.html","id":"session","dir":"Articles","previous_headings":"","what":"Session","title":"simStateSpace: Session","text":"","code":"sessionInfo() #> R version 4.4.2 (2024-10-31) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 24.04.1 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> time zone: Etc/UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] simStateSpace_1.2.8.9000 #>  #> loaded via a namespace (and not attached): #>  [1] gtable_0.3.6        shape_1.4.6.1       xfun_0.50           #>  [4] ggplot2_3.5.1       ks_1.14.3           lattice_0.22-6      #>  [7] numDeriv_2016.8-1.1 quadprog_1.5-8      bitops_1.0-9        #> [10] vctrs_0.6.5         tools_4.4.2         Rdpack_2.6.2        #> [13] generics_0.1.3      parallel_4.4.2      stats4_4.4.2        #> [16] tibble_3.2.1        cluster_2.1.6       pan_1.9             #> [19] pkgconfig_2.0.3     fds_1.8             jomo_2.7-6          #> [22] Matrix_1.7-1        KernSmooth_2.23-24  lifecycle_1.0.4     #> [25] farver_2.1.2        compiler_4.4.2      stringr_1.5.1       #> [28] mnormt_2.1.1        munsell_0.5.1       codetools_0.2-20    #> [31] carData_3.0-5       rainbow_3.8         RCurl_1.98-1.16     #> [34] glmnet_4.1-8        Formula_1.2-5       mice_3.17.0         #> [37] pracma_2.4.4        car_3.1-3           pillar_1.10.1       #> [40] nloptr_2.1.1        tidyr_1.3.1         MASS_7.3-61         #> [43] reformulas_0.4.0    iterators_1.0.14    abind_1.4-8         #> [46] rpart_4.1.23        boot_1.3-31         rProject_0.0.18     #> [49] mclust_6.1.1        foreach_1.5.2       mitml_0.4-5         #> [52] nlme_3.1-166        lavaan_0.6-19       tidyselect_1.2.1    #> [55] mvtnorm_1.3-3       stringi_1.8.4       dplyr_1.1.4         #> [58] reshape2_1.4.4      purrr_1.0.2         labeling_0.4.3      #> [61] splines_4.4.2       pcaPP_2.0-5         latex2exp_0.9.6     #> [64] grid_4.4.2          expm_1.0-0          colorspace_2.1-1    #> [67] cli_3.6.3.9002      magrittr_2.0.3      survival_3.7-0      #> [70] pbivnorm_0.6.0      broom_1.0.7         withr_3.0.2         #> [73] scales_1.3.0        backports_1.5.0     dynr_0.1.16-109     #> [76] nnet_7.3-19         lme4_1.1-36         deSolve_1.40        #> [79] evaluate_1.0.3      knitr_1.49          rbibutils_2.3       #> [82] rlang_1.1.5         Rcpp_1.0.14         xtable_1.8-4        #> [85] glue_1.8.0          fda_6.2.0           hdrcde_3.4          #> [88] minqa_1.2.8         R6_2.5.1            plyr_1.8.9"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/session.html","id":"packages","dir":"Articles","previous_headings":"","what":"Packages","title":"simStateSpace: Session","text":"","code":"installed.packages()[, c(\"Package\", \"Version\")] #>                   Package             Version       #> httr2             \"httr2\"             \"1.1.0\"       #> rProject          \"rProject\"          \"0.0.18\"      #> simStateSpace     \"simStateSpace\"     \"1.2.8.9000\"  #> systemfonts       \"systemfonts\"       \"1.2.1\"       #> textshaping       \"textshaping\"       \"1.0.0\"       #> abind             \"abind\"             \"1.4-8\"       #> Amelia            \"Amelia\"            \"1.8.3\"       #> arm               \"arm\"               \"1.14-4\"      #> arrow             \"arrow\"             \"18.1.0.1\"    #> ash               \"ash\"               \"1.0-15\"      #> AsioHeaders       \"AsioHeaders\"       \"1.22.1-2\"    #> askpass           \"askpass\"           \"1.2.1\"       #> assertthat        \"assertthat\"        \"0.2.1\"       #> backports         \"backports\"         \"1.5.0\"       #> base64enc         \"base64enc\"         \"0.1-3\"       #> betaDelta         \"betaDelta\"         \"1.0.6\"       #> betaMC            \"betaMC\"            \"1.3.3\"       #> betaNB            \"betaNB\"            \"1.0.5.9000\"  #> betaSandwich      \"betaSandwich\"      \"1.0.8\"       #> BH                \"BH\"                \"1.87.0-1\"    #> bibtex            \"bibtex\"            \"0.5.1\"       #> BiocManager       \"BiocManager\"       \"1.30.25\"     #> bit               \"bit\"               \"4.5.0.1\"     #> bit64             \"bit64\"             \"4.6.0-1\"     #> bitops            \"bitops\"            \"1.0-9\"       #> blob              \"blob\"              \"1.2.4\"       #> bootStateSpace    \"bootStateSpace\"    \"1.0.0\"       #> brew              \"brew\"              \"1.0-10\"      #> brio              \"brio\"              \"1.1.5\"       #> broom             \"broom\"             \"1.0.7\"       #> bslib             \"bslib\"             \"0.8.0\"       #> cachem            \"cachem\"            \"1.1.0\"       #> callr             \"callr\"             \"3.7.6\"       #> car               \"car\"               \"3.1-3\"       #> caracas           \"caracas\"           \"2.1.1\"       #> carData           \"carData\"           \"3.0-5\"       #> cellranger        \"cellranger\"        \"1.1.0\"       #> cffr              \"cffr\"              \"1.1.1\"       #> checkmate         \"checkmate\"         \"2.3.2\"       #> cli               \"cli\"               \"3.6.3.9002\"  #> clipr             \"clipr\"             \"0.8.0\"       #> clock             \"clock\"             \"0.7.1\"       #> clusterGeneration \"clusterGeneration\" \"1.3.8\"       #> coda              \"coda\"              \"0.19-4.1\"    #> cOde              \"cOde\"              \"1.1.1\"       #> collections       \"collections\"       \"0.3.7\"       #> colorspace        \"colorspace\"        \"2.1-1\"       #> commonmark        \"commonmark\"        \"1.9.2\"       #> conflicted        \"conflicted\"        \"1.2.0\"       #> corpcor           \"corpcor\"           \"1.6.10\"      #> covr              \"covr\"              \"3.6.4\"       #> cowplot           \"cowplot\"           \"1.1.3\"       #> cpp11             \"cpp11\"             \"0.5.1\"       #> crayon            \"crayon\"            \"1.5.3\"       #> credentials       \"credentials\"       \"2.0.2\"       #> crosstalk         \"crosstalk\"         \"1.2.1\"       #> cTMed             \"cTMed\"             \"1.0.5\"       #> ctsem             \"ctsem\"             \"3.10.2\"      #> curl              \"curl\"              \"6.1.0\"       #> cyclocomp         \"cyclocomp\"         \"1.1.1\"       #> data.table        \"data.table\"        \"1.16.4\"      #> DBI               \"DBI\"               \"1.2.3\"       #> dbplyr            \"dbplyr\"            \"2.5.0\"       #> Deriv             \"Deriv\"             \"4.1.6\"       #> desc              \"desc\"              \"1.4.3\"       #> deSolve           \"deSolve\"           \"1.40\"        #> devtools          \"devtools\"          \"2.4.5.9000\"  #> diagram           \"diagram\"           \"1.6.5\"       #> dials             \"dials\"             \"1.3.0\"       #> DiceDesign        \"DiceDesign\"        \"1.10\"        #> diffobj           \"diffobj\"           \"0.3.5\"       #> digest            \"digest\"            \"0.6.37\"      #> distributional    \"distributional\"    \"0.5.0\"       #> distro            \"distro\"            \"0.1.0\"       #> doBy              \"doBy\"              \"4.6.24\"      #> docopt            \"docopt\"            \"0.7.1\"       #> doFuture          \"doFuture\"          \"1.0.1\"       #> downlit           \"downlit\"           \"0.4.4\"       #> dplyr             \"dplyr\"             \"1.1.4\"       #> DT                \"DT\"                \"0.33\"        #> dtplyr            \"dtplyr\"            \"1.3.1\"       #> dynr              \"dynr\"              \"0.1.16-109\"  #> dynUtils          \"dynUtils\"          \"0.9.1\"       #> ellipse           \"ellipse\"           \"0.5.0\"       #> ellipsis          \"ellipsis\"          \"0.3.2\"       #> evaluate          \"evaluate\"          \"1.0.3\"       #> expm              \"expm\"              \"1.0-0\"       #> fansi             \"fansi\"             \"1.0.6\"       #> farver            \"farver\"            \"2.1.2\"       #> fastDummies       \"fastDummies\"       \"1.7.4\"       #> fastmap           \"fastmap\"           \"1.2.0\"       #> fclust            \"fclust\"            \"2.1.1.1\"     #> fda               \"fda\"               \"6.2.0\"       #> fdrtool           \"fdrtool\"           \"1.2.18\"      #> fds               \"fds\"               \"1.8\"         #> fitCTVARMx        \"fitCTVARMx\"        \"0.0.0.9000\"  #> fitDTVARMx        \"fitDTVARMx\"        \"0.0.0.9000\"  #> FNN               \"FNN\"               \"1.1.4.1\"     #> fontawesome       \"fontawesome\"       \"0.5.3\"       #> forcats           \"forcats\"           \"1.0.0\"       #> foreach           \"foreach\"           \"1.5.2\"       #> Formula           \"Formula\"           \"1.2-5\"       #> fs                \"fs\"                \"1.6.5\"       #> fst               \"fst\"               \"0.9.8\"       #> fstcore           \"fstcore\"           \"0.9.18\"      #> furrr             \"furrr\"             \"0.3.1\"       #> future            \"future\"            \"1.34.0\"      #> future.apply      \"future.apply\"      \"1.11.3\"      #> gargle            \"gargle\"            \"1.5.2\"       #> generics          \"generics\"          \"0.1.3\"       #> gert              \"gert\"              \"2.1.4\"       #> ggplot2           \"ggplot2\"           \"3.5.1\"       #> ggrepel           \"ggrepel\"           \"0.9.6\"       #> gh                \"gh\"                \"1.4.1\"       #> gitcreds          \"gitcreds\"          \"0.1.2\"       #> glasso            \"glasso\"            \"1.11\"        #> glmnet            \"glmnet\"            \"4.1-8\"       #> globals           \"globals\"           \"0.16.3\"      #> glue              \"glue\"              \"1.8.0\"       #> googledrive       \"googledrive\"       \"2.1.1\"       #> googlesheets4     \"googlesheets4\"     \"1.1.1\"       #> gower             \"gower\"             \"1.0.2\"       #> GPArotation       \"GPArotation\"       \"2024.3-1\"    #> GPfit             \"GPfit\"             \"1.0-8\"       #> graphicalVAR      \"graphicalVAR\"      \"0.3.4\"       #> gridExtra         \"gridExtra\"         \"2.3\"         #> gsubfn            \"gsubfn\"            \"0.7\"         #> gtable            \"gtable\"            \"0.3.6\"       #> gtools            \"gtools\"            \"3.9.5\"       #> hardhat           \"hardhat\"           \"1.4.0\"       #> haven             \"haven\"             \"2.5.4\"       #> hdrcde            \"hdrcde\"            \"3.4\"         #> here              \"here\"              \"1.0.1\"       #> highr             \"highr\"             \"0.11\"        #> Hmisc             \"Hmisc\"             \"5.2-2\"       #> hms               \"hms\"               \"1.1.3\"       #> htmlTable         \"htmlTable\"         \"2.4.3\"       #> htmltools         \"htmltools\"         \"0.5.8.1\"     #> htmlwidgets       \"htmlwidgets\"       \"1.6.4\"       #> httpgd            \"httpgd\"            \"2.0.2\"       #> httpuv            \"httpuv\"            \"1.6.15\"      #> httr              \"httr\"              \"1.4.7\"       #> httr2             \"httr2\"             \"1.0.7\"       #> ids               \"ids\"               \"1.0.1\"       #> ifaTools          \"ifaTools\"          \"0.23\"        #> igraph            \"igraph\"            \"2.1.3\"       #> infer             \"infer\"             \"1.0.7\"       #> ini               \"ini\"               \"0.3.1\"       #> inline            \"inline\"            \"0.3.21\"      #> ipred             \"ipred\"             \"0.9-15\"      #> isoband           \"isoband\"           \"0.2.7\"       #> iterators         \"iterators\"         \"1.0.14\"      #> jomo              \"jomo\"              \"2.7-6\"       #> jpeg              \"jpeg\"              \"0.1-10\"      #> jquerylib         \"jquerylib\"         \"0.1.4\"       #> jsonlite          \"jsonlite\"          \"1.8.9\"       #> jsonvalidate      \"jsonvalidate\"      \"1.3.2\"       #> kernlab           \"kernlab\"           \"0.9-33\"      #> knitr             \"knitr\"             \"1.49\"        #> ks                \"ks\"                \"1.14.3\"      #> labeling          \"labeling\"          \"0.4.3\"       #> Lahman            \"Lahman\"            \"12.0-0\"      #> languageserver    \"languageserver\"    \"0.3.16\"      #> later             \"later\"             \"1.4.1\"       #> latex2exp         \"latex2exp\"         \"0.9.6\"       #> lava              \"lava\"              \"1.8.1\"       #> lavaan            \"lavaan\"            \"0.6-19\"      #> lazyeval          \"lazyeval\"          \"0.2.2\"       #> lhs               \"lhs\"               \"1.2.0\"       #> lifecycle         \"lifecycle\"         \"1.0.4\"       #> lintr             \"lintr\"             \"3.1.2\"       #> listenv           \"listenv\"           \"0.9.1\"       #> littler           \"littler\"           \"0.3.20\"      #> lme4              \"lme4\"              \"1.1-36\"      #> locfit            \"locfit\"            \"1.5-9.10\"    #> longMI            \"longMI\"            \"1.0.0\"       #> loo               \"loo\"               \"2.8.0\"       #> lubridate         \"lubridate\"         \"1.9.4\"       #> magick            \"magick\"            \"2.8.5\"       #> magrittr          \"magrittr\"          \"2.0.3\"       #> markdown          \"markdown\"          \"1.13\"        #> MatrixModels      \"MatrixModels\"      \"0.5-3\"       #> matrixStats       \"matrixStats\"       \"1.5.0\"       #> mclust            \"mclust\"            \"6.1.1\"       #> memoise           \"memoise\"           \"2.0.1\"       #> metaSEM           \"metaSEM\"           \"1.5.0\"       #> metaVAR           \"metaVAR\"           \"0.0.0.9000\"  #> mice              \"mice\"              \"3.17.0\"      #> microbenchmark    \"microbenchmark\"    \"1.5.0\"       #> mime              \"mime\"              \"0.12\"        #> miniUI            \"miniUI\"            \"0.1.1.1\"     #> minqa             \"minqa\"             \"1.2.8\"       #> mitml             \"mitml\"             \"0.4-5\"       #> mize              \"mize\"              \"0.2.4\"       #> mlVAR             \"mlVAR\"             \"0.5.2\"       #> mnormt            \"mnormt\"            \"2.1.1\"       #> modeldata         \"modeldata\"         \"1.4.0\"       #> modelenv          \"modelenv\"          \"0.2.0\"       #> modelr            \"modelr\"            \"0.1.11\"      #> MplusAutomation   \"MplusAutomation\"   \"1.1.1\"       #> multicool         \"multicool\"         \"1.0.1\"       #> munsell           \"munsell\"           \"0.5.1\"       #> mvtnorm           \"mvtnorm\"           \"1.3-3\"       #> nloptr            \"nloptr\"            \"2.1.1\"       #> numDeriv          \"numDeriv\"          \"2016.8-1.1\"  #> nycflights13      \"nycflights13\"      \"1.0.2\"       #> OpenMx            \"OpenMx\"            \"2.21.13\"     #> openssl           \"openssl\"           \"2.3.1\"       #> ordinal           \"ordinal\"           \"2023.12-4.1\" #> pan               \"pan\"               \"1.9\"         #> pander            \"pander\"            \"0.6.5\"       #> parallelly        \"parallelly\"        \"1.41.0\"      #> parsnip           \"parsnip\"           \"1.2.1\"       #> patchwork         \"patchwork\"         \"1.3.0\"       #> pbapply           \"pbapply\"           \"1.7-2\"       #> pbivnorm          \"pbivnorm\"          \"0.6.0\"       #> pbkrtest          \"pbkrtest\"          \"0.5.3\"       #> pcaPP             \"pcaPP\"             \"2.0-5\"       #> pdftools          \"pdftools\"          \"3.4.1\"       #> pillar            \"pillar\"            \"1.10.1\"      #> pkgbuild          \"pkgbuild\"          \"1.4.6\"       #> pkgconfig         \"pkgconfig\"         \"2.0.3\"       #> pkgdown           \"pkgdown\"           \"2.1.1\"       #> pkgload           \"pkgload\"           \"1.4.0\"       #> plogr             \"plogr\"             \"0.2.0\"       #> plyr              \"plyr\"              \"1.8.9\"       #> png               \"png\"               \"0.1-8\"       #> posterior         \"posterior\"         \"1.6.0\"       #> pracma            \"pracma\"            \"2.4.4\"       #> praise            \"praise\"            \"1.0.0\"       #> prettyunits       \"prettyunits\"       \"1.2.0\"       #> printr            \"printr\"            \"0.3\"         #> processx          \"processx\"          \"3.8.5\"       #> prodlim           \"prodlim\"           \"2024.06.25\"  #> profvis           \"profvis\"           \"0.4.0\"       #> progress          \"progress\"          \"1.2.3\"       #> progressr         \"progressr\"         \"0.15.1\"      #> promises          \"promises\"          \"1.3.2\"       #> proto             \"proto\"             \"1.0.0\"       #> ps                \"ps\"                \"1.8.1\"       #> psych             \"psych\"             \"2.4.12\"      #> purrr             \"purrr\"             \"1.0.2\"       #> qgraph            \"qgraph\"            \"1.9.8\"       #> qpdf              \"qpdf\"              \"1.3.4\"       #> quadprog          \"quadprog\"          \"1.5-8\"       #> quantreg          \"quantreg\"          \"5.99.1\"      #> quarto            \"quarto\"            \"1.4.4\"       #> QuickJSR          \"QuickJSR\"          \"1.5.1\"       #> R.cache           \"R.cache\"           \"0.16.0\"      #> R.methodsS3       \"R.methodsS3\"       \"1.8.2\"       #> R.oo              \"R.oo\"              \"1.27.0\"      #> R.utils           \"R.utils\"           \"2.12.3\"      #> R6                \"R6\"                \"2.5.1\"       #> ragg              \"ragg\"              \"1.3.3\"       #> rainbow           \"rainbow\"           \"3.8\"         #> rappdirs          \"rappdirs\"          \"0.3.3\"       #> rbibutils         \"rbibutils\"         \"2.3\"         #> rcmdcheck         \"rcmdcheck\"         \"1.4.0\"       #> RColorBrewer      \"RColorBrewer\"      \"1.1-3\"       #> Rcpp              \"Rcpp\"              \"1.0.14\"      #> RcppArmadillo     \"RcppArmadillo\"     \"14.2.2-1\"    #> RcppEigen         \"RcppEigen\"         \"0.3.4.0.2\"   #> RcppGSL           \"RcppGSL\"           \"0.3.13\"      #> RcppParallel      \"RcppParallel\"      \"5.1.9\"       #> RcppTOML          \"RcppTOML\"          \"0.2.2\"       #> RCurl             \"RCurl\"             \"1.98-1.16\"   #> Rdpack            \"Rdpack\"            \"2.6.2\"       #> readr             \"readr\"             \"2.1.5\"       #> readxl            \"readxl\"            \"1.4.3\"       #> recipes           \"recipes\"           \"1.1.0\"       #> RefManageR        \"RefManageR\"        \"1.4.0\"       #> reformulas        \"reformulas\"        \"0.4.0\"       #> rematch           \"rematch\"           \"2.0.0\"       #> rematch2          \"rematch2\"          \"2.1.2\"       #> remotes           \"remotes\"           \"2.5.0\"       #> reprex            \"reprex\"            \"2.1.1\"       #> reshape2          \"reshape2\"          \"1.4.4\"       #> reticulate        \"reticulate\"        \"1.40.0\"      #> rex               \"rex\"               \"1.2.1\"       #> rhub              \"rhub\"              \"2.0.0\"       #> rjags             \"rjags\"             \"4-16\"        #> rlang             \"rlang\"             \"1.1.5\"       #> RMariaDB          \"RMariaDB\"          \"1.3.3\"       #> rmarkdown         \"rmarkdown\"         \"2.29\"        #> roxygen2          \"roxygen2\"          \"7.3.2\"       #> rpf               \"rpf\"               \"1.0.14\"      #> RPostgres         \"RPostgres\"         \"1.4.7\"       #> rProject          \"rProject\"          \"0.0.17\"      #> rprojroot         \"rprojroot\"         \"2.0.4\"       #> rsample           \"rsample\"           \"1.2.1\"       #> RSQLite           \"RSQLite\"           \"2.3.9\"       #> rstan             \"rstan\"             \"2.32.6\"      #> rstantools        \"rstantools\"        \"2.4.0\"       #> rstudioapi        \"rstudioapi\"        \"0.17.1\"      #> rversions         \"rversions\"         \"2.1.2\"       #> rvest             \"rvest\"             \"1.0.4\"       #> Ryacas            \"Ryacas\"            \"1.1.5\"       #> sass              \"sass\"              \"0.4.9\"       #> scales            \"scales\"            \"1.3.0\"       #> selectr           \"selectr\"           \"0.4-2\"       #> semlbci           \"semlbci\"           \"0.11.2\"      #> semmcci           \"semmcci\"           \"1.1.5\"       #> sessioninfo       \"sessioninfo\"       \"1.2.2\"       #> sfd               \"sfd\"               \"0.1.0\"       #> shape             \"shape\"             \"1.4.6.1\"     #> shiny             \"shiny\"             \"1.10.0\"      #> simStateSpace     \"simStateSpace\"     \"1.2.8\"       #> slider            \"slider\"            \"0.3.2\"       #> snow              \"snow\"              \"0.4-4\"       #> snowfall          \"snowfall\"          \"1.84-6.3\"    #> sourcetools       \"sourcetools\"       \"0.1.7-1\"     #> SparseM           \"SparseM\"           \"1.84-2\"      #> SQUAREM           \"SQUAREM\"           \"2021.1\"      #> StanHeaders       \"StanHeaders\"       \"2.32.10\"     #> statmod           \"statmod\"           \"1.5.0\"       #> stringi           \"stringi\"           \"1.8.4\"       #> stringr           \"stringr\"           \"1.5.1\"       #> styler            \"styler\"            \"1.10.3\"      #> symSEM            \"symSEM\"            \"0.4\"         #> sys               \"sys\"               \"3.4.3\"       #> systemfonts       \"systemfonts\"       \"1.2.0\"       #> tensorA           \"tensorA\"           \"0.36.2.1\"    #> testthat          \"testthat\"          \"3.2.3\"       #> texreg            \"texreg\"            \"1.39.4\"      #> textshaping       \"textshaping\"       \"0.4.1\"       #> tibble            \"tibble\"            \"3.2.1\"       #> tidymodels        \"tidymodels\"        \"1.2.0\"       #> tidyr             \"tidyr\"             \"1.3.1\"       #> tidyselect        \"tidyselect\"        \"1.2.1\"       #> tidyverse         \"tidyverse\"         \"2.0.0\"       #> timechange        \"timechange\"        \"0.3.0\"       #> timeDate          \"timeDate\"          \"4041.110\"    #> tinytex           \"tinytex\"           \"0.54.1\"      #> tune              \"tune\"              \"1.2.1\"       #> tzdb              \"tzdb\"              \"0.4.0\"       #> ucminf            \"ucminf\"            \"1.2.2\"       #> unigd             \"unigd\"             \"0.1.2\"       #> urlchecker        \"urlchecker\"        \"1.0.1\"       #> usethis           \"usethis\"           \"3.1.0\"       #> utf8              \"utf8\"              \"1.2.4\"       #> uuid              \"uuid\"              \"1.2-1\"       #> V8                \"V8\"                \"6.0.0\"       #> vctrs             \"vctrs\"             \"0.6.5\"       #> viridis           \"viridis\"           \"0.6.5\"       #> viridisLite       \"viridisLite\"       \"0.4.2\"       #> vroom             \"vroom\"             \"1.6.5\"       #> waldo             \"waldo\"             \"0.6.1\"       #> warp              \"warp\"              \"0.2.1\"       #> whisker           \"whisker\"           \"0.4.1\"       #> whoami            \"whoami\"            \"1.3.0\"       #> withr             \"withr\"             \"3.0.2\"       #> workflows         \"workflows\"         \"1.1.4\"       #> workflowsets      \"workflowsets\"      \"1.1.0\"       #> xfun              \"xfun\"              \"0.50\"        #> xml2              \"xml2\"              \"1.3.6\"       #> xmlparsedata      \"xmlparsedata\"      \"1.0.5\"       #> xopen             \"xopen\"             \"1.0.1\"       #> xtable            \"xtable\"            \"1.8-4\"       #> yaml              \"yaml\"              \"2.3.10\"      #> yardstick         \"yardstick\"         \"1.3.1\"       #> zip               \"zip\"               \"2.3.1\"       #> base              \"base\"              \"4.4.2\"       #> boot              \"boot\"              \"1.3-31\"      #> class             \"class\"             \"7.3-22\"      #> cluster           \"cluster\"           \"2.1.6\"       #> codetools         \"codetools\"         \"0.2-20\"      #> compiler          \"compiler\"          \"4.4.2\"       #> datasets          \"datasets\"          \"4.4.2\"       #> foreign           \"foreign\"           \"0.8-87\"      #> graphics          \"graphics\"          \"4.4.2\"       #> grDevices         \"grDevices\"         \"4.4.2\"       #> grid              \"grid\"              \"4.4.2\"       #> KernSmooth        \"KernSmooth\"        \"2.23-24\"     #> lattice           \"lattice\"           \"0.22-6\"      #> MASS              \"MASS\"              \"7.3-61\"      #> Matrix            \"Matrix\"            \"1.7-1\"       #> methods           \"methods\"           \"4.4.2\"       #> mgcv              \"mgcv\"              \"1.9-1\"       #> nlme              \"nlme\"              \"3.1-166\"     #> nnet              \"nnet\"              \"7.3-19\"      #> parallel          \"parallel\"          \"4.4.2\"       #> rpart             \"rpart\"             \"4.1.23\"      #> spatial           \"spatial\"           \"7.3-17\"      #> splines           \"splines\"           \"4.4.2\"       #> stats             \"stats\"             \"4.4.2\"       #> stats4            \"stats4\"            \"4.4.2\"       #> survival          \"survival\"          \"3.7-0\"       #> tcltk             \"tcltk\"             \"4.4.2\"       #> tools             \"tools\"             \"4.4.2\"       #> utils             \"utils\"             \"4.4.2\""},{"path":"https://github.com/jeksterslab/simStateSpace/articles/session.html","id":"cpu","dir":"Articles","previous_headings":"","what":"CPU","title":"simStateSpace: Session","text":"","code":"#> Architecture:                         x86_64 #> CPU op-mode(s):                       32-bit, 64-bit #> Address sizes:                        46 bits physical, 48 bits virtual #> Byte Order:                           Little Endian #> CPU(s):                               24 #> On-line CPU(s) list:                  0-23 #> Vendor ID:                            GenuineIntel #> Model name:                           Intel(R) Xeon(R) CPU E5-2680 v3 @ 2.50GHz #> CPU family:                           6 #> Model:                                63 #> Thread(s) per core:                   1 #> Core(s) per socket:                   12 #> Socket(s):                            2 #> Stepping:                             2 #> CPU(s) scaling MHz:                   73% #> CPU max MHz:                          3300.0000 #> CPU min MHz:                          1200.0000 #> BogoMIPS:                             4988.94 #> Flags:                                fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm cpuid_fault epb invpcid_single pti ssbd ibrs ibpb stibp fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm xsaveopt cqm_llc cqm_occup_llc dtherm ida arat pln pts md_clear flush_l1d #> L1d cache:                            768 KiB (24 instances) #> L1i cache:                            768 KiB (24 instances) #> L2 cache:                             6 MiB (24 instances) #> L3 cache:                             60 MiB (2 instances) #> NUMA node(s):                         2 #> NUMA node0 CPU(s):                    0,2,4,6,8,10,12,14,16,18,20,22 #> NUMA node1 CPU(s):                    1,3,5,7,9,11,13,15,17,19,21,23 #> Vulnerability Gather data sampling:   Not affected #> Vulnerability Itlb multihit:          KVM: Mitigation: VMX unsupported #> Vulnerability L1tf:                   Mitigation; PTE Inversion #> Vulnerability Mds:                    Mitigation; Clear CPU buffers; SMT disabled #> Vulnerability Meltdown:               Mitigation; PTI #> Vulnerability Mmio stale data:        Mitigation; Clear CPU buffers; SMT disabled #> Vulnerability Reg file data sampling: Not affected #> Vulnerability Retbleed:               Not affected #> Vulnerability Spec rstack overflow:   Not affected #> Vulnerability Spec store bypass:      Mitigation; Speculative Store Bypass disabled via prctl #> Vulnerability Spectre v1:             Mitigation; usercopy/swapgs barriers and __user pointer sanitization #> Vulnerability Spectre v2:             Mitigation; Retpolines; IBPB conditional; IBRS_FW; RSB filling; PBRSB-eIBRS Not affected; BHI Not affected #> Vulnerability Srbds:                  Not affected #> Vulnerability Tsx async abort:        Not affected"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/session.html","id":"memory","dir":"Articles","previous_headings":"","what":"Memory","title":"simStateSpace: Session","text":"","code":"#>                total        used        free      shared  buff/cache   available #> Mem:           251Gi        10Gi       204Gi       5.2Gi        43Gi       241Gi #> Swap:             0B          0B          0B #> Total:         251Gi        10Gi       204Gi"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/simStateSpace.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"simStateSpace: Simulate Data from State Space Models","text":"Provides streamlined user-friendly framework simulating data state space models, particularly number subjects/units (nn) exceeds one, scenario commonly encountered social behavioral sciences. introduction state space models social behavioral sciences, refer Chow, Ho, Hamaker, Dolan (2010: https://doi.org/10.1080/10705511003661553).","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/articles/simStateSpace.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"simStateSpace: Simulate Data from State Space Models","text":"can install CRAN release simStateSpace : can install development version simStateSpace GitHub :","code":"install.packages(\"simStateSpace\") if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"jeksterslab/simStateSpace\")"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/simStateSpace.html","id":"more-information","dir":"Articles","previous_headings":"","what":"More Information","title":"simStateSpace: Simulate Data from State Space Models","text":"See GitHub Pages package documentation.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/articles/ssm.html","id":"model","dir":"Articles","previous_headings":"","what":"Model","title":"The State Space Model","text":"measurement model given 𝐲i,t=𝛎+𝚲𝛈i,t+𝛆i,t,with𝛆i,t∼𝒩(𝟎,𝚯)\\begin{equation}   \\mathbf{y}_{, t}   =   \\boldsymbol{\\nu}   +   \\boldsymbol{\\Lambda}   \\boldsymbol{\\eta}_{, t}   +   \\boldsymbol{\\varepsilon}_{, t},   \\quad   \\mathrm{}   \\quad   \\boldsymbol{\\varepsilon}_{, t}   \\sim   \\mathcal{N}   \\left(   \\mathbf{0},   \\boldsymbol{\\Theta}   \\right) \\end{equation} 𝐲i,t\\mathbf{y}_{, t}, 𝛈i,t\\boldsymbol{\\eta}_{, t}, 𝛆i,t\\boldsymbol{\\varepsilon}_{, t} random variables 𝛎\\boldsymbol{\\nu}, 𝚲\\boldsymbol{\\Lambda}, 𝚯\\boldsymbol{\\Theta} model parameters. 𝐲i,t\\mathbf{y}_{, t} represents vector observed random variables, 𝛈i,t\\boldsymbol{\\eta}_{, t} vector latent random variables, 𝛆i,t\\boldsymbol{\\varepsilon}_{, t} vector random measurement errors, time tt individual ii. 𝛎\\boldsymbol{\\nu} denotes vector intercepts, 𝚲\\boldsymbol{\\Lambda} matrix factor loadings, 𝚯\\boldsymbol{\\Theta} covariance matrix 𝛆\\boldsymbol{\\varepsilon}. alternative representation measurement error given 𝛆i,t=𝚯12𝐳i,t,with𝐳i,t∼𝒩(𝟎,𝐈)\\begin{equation}   \\boldsymbol{\\varepsilon}_{, t}   =   \\boldsymbol{\\Theta}^{\\frac{1}{2}}   \\mathbf{z}_{, t},   \\quad   \\mathrm{}   \\quad   \\mathbf{z}_{, t}   \\sim   \\mathcal{N}   \\left(   \\mathbf{0},   \\mathbf{}   \\right) \\end{equation} 𝐳i,t\\mathbf{z}_{, t} vector independent standard normal random variables (𝚯12)(𝚯12)′=𝚯\\left( \\boldsymbol{\\Theta}^{\\frac{1}{2}} \\right) \\left( \\boldsymbol{\\Theta}^{\\frac{1}{2}} \\right)^{\\prime} = \\boldsymbol{\\Theta} . dynamic structure given 𝛈i,t=𝛂+𝛃𝛈i,t−1+𝛇i,t,with𝛇i,t∼𝒩(𝟎,𝚿)\\begin{equation}   \\boldsymbol{\\eta}_{, t}   =   \\boldsymbol{\\alpha}   +   \\boldsymbol{\\beta}   \\boldsymbol{\\eta}_{, t - 1}   +   \\boldsymbol{\\zeta}_{, t},   \\quad   \\mathrm{}   \\quad   \\boldsymbol{\\zeta}_{, t}   \\sim   \\mathcal{N}   \\left(   \\mathbf{0},   \\boldsymbol{\\Psi}   \\right) \\end{equation} 𝛈i,t\\boldsymbol{\\eta}_{, t}, 𝛈i,t−1\\boldsymbol{\\eta}_{, t - 1}, 𝛇i,t\\boldsymbol{\\zeta}_{, t} random variables, 𝛂\\boldsymbol{\\alpha}, 𝛃\\boldsymbol{\\beta}, 𝚿\\boldsymbol{\\Psi} model parameters. , 𝛈i,t\\boldsymbol{\\eta}_{, t} vector latent variables time tt individual ii, 𝛈i,t−1\\boldsymbol{\\eta}_{, t - 1} represents vector latent variables time t−1t - 1 individual ii, 𝛇i,t\\boldsymbol{\\zeta}_{, t} represents vector dynamic noise time tt individual ii. 𝛂\\boldsymbol{\\alpha} denotes vector intercepts, 𝛃\\boldsymbol{\\beta} matrix autoregression cross regression coefficients, 𝚿\\boldsymbol{\\Psi} covariance matrix 𝛇i,t\\boldsymbol{\\zeta}_{, t}. alternative representation dynamic noise given 𝛇i,t=𝚿12𝐳i,t,with𝐳i,t∼𝒩(𝟎,𝐈)\\begin{equation}   \\boldsymbol{\\zeta}_{, t}   =   \\boldsymbol{\\Psi}^{\\frac{1}{2}}   \\mathbf{z}_{, t},   \\quad   \\mathrm{}   \\quad   \\mathbf{z}_{, t}   \\sim   \\mathcal{N}   \\left(   \\mathbf{0},   \\mathbf{}   \\right) \\end{equation} (𝚿12)(𝚿12)′=𝚿\\left( \\boldsymbol{\\Psi}^{\\frac{1}{2}} \\right) \\left( \\boldsymbol{\\Psi}^{\\frac{1}{2}} \\right)^{\\prime} = \\boldsymbol{\\Psi} .","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/articles/ssm.html","id":"notation","dir":"Articles","previous_headings":"Data Generation","what":"Notation","title":"The State Space Model","text":"Let t=1000t = 1000 number time points n=200n = 200 number individuals. Let measurement model intecept vector 𝛎\\boldsymbol{\\nu} given 𝛎=(000).\\begin{equation} \\boldsymbol{\\nu} = \\left( \\begin{array}{c}   0 \\\\   0 \\\\   0 \\\\ \\end{array} \\right) . \\end{equation} Let factor loadings matrix 𝚲\\boldsymbol{\\Lambda} given 𝚲=(100010001).\\begin{equation} \\boldsymbol{\\Lambda} = \\left( \\begin{array}{ccc}   1 & 0 & 0 \\\\   0 & 1 & 0 \\\\   0 & 0 & 1 \\\\ \\end{array} \\right) . \\end{equation} Let measurement error covariance matrix 𝚯\\boldsymbol{\\Theta} given 𝚯=(0.20000.20000.2).\\begin{equation} \\boldsymbol{\\Theta} = \\left( \\begin{array}{ccc}   0.2 & 0 & 0 \\\\   0 & 0.2 & 0 \\\\   0 & 0 & 0.2 \\\\ \\end{array} \\right) . \\end{equation} Let initial condition 𝛈0\\boldsymbol{\\eta}_{0} given 𝛈0∼𝒩(𝛍𝛈∣0,𝚺𝛈∣0)\\begin{equation} \\boldsymbol{\\eta}_{0} \\sim \\mathcal{N} \\left( \\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0}, \\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0} \\right) \\end{equation} 𝛍𝛈∣0=(000)\\begin{equation} \\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0} = \\left( \\begin{array}{c}   0 \\\\   0 \\\\   0 \\\\ \\end{array} \\right) \\end{equation} 𝚺𝛈∣0=(10.20.20.210.20.20.21).\\begin{equation} \\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0} = \\left( \\begin{array}{ccc}   1 & 0.2 & 0.2 \\\\   0.2 & 1 & 0.2 \\\\   0.2 & 0.2 & 1 \\\\ \\end{array} \\right) . \\end{equation} Let constant vector 𝛂\\boldsymbol{\\alpha} given 𝛂=(000).\\begin{equation} \\boldsymbol{\\alpha} = \\left( \\begin{array}{c}   0 \\\\   0 \\\\   0 \\\\ \\end{array} \\right) . \\end{equation} Let transition matrix 𝛃\\boldsymbol{\\beta} given 𝛃=(0.7000.50.60−0.10.40.5).\\begin{equation} \\boldsymbol{\\beta} = \\left( \\begin{array}{ccc}   0.7 & 0 & 0 \\\\   0.5 & 0.6 & 0 \\\\   -0.1 & 0.4 & 0.5 \\\\ \\end{array} \\right) . \\end{equation} Let dynamic process noise 𝚿\\boldsymbol{\\Psi} given 𝚿=(0.10000.10000.1).\\begin{equation} \\boldsymbol{\\Psi} = \\left( \\begin{array}{ccc}   0.1 & 0 & 0 \\\\   0 & 0.1 & 0 \\\\   0 & 0 & 0.1 \\\\ \\end{array} \\right) . \\end{equation}","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/articles/ssm.html","id":"r-function-arguments","dir":"Articles","previous_headings":"Data Generation","what":"R Function Arguments","title":"The State Space Model","text":"","code":"n #> [1] 200 time #> [1] 1000 mu0 #> [1] 0 0 0 sigma0 #>      [,1] [,2] [,3] #> [1,]  1.0  0.2  0.2 #> [2,]  0.2  1.0  0.2 #> [3,]  0.2  0.2  1.0 sigma0_l # sigma0_l <- t(chol(sigma0)) #>      [,1]      [,2]      [,3] #> [1,]  1.0 0.0000000 0.0000000 #> [2,]  0.2 0.9797959 0.0000000 #> [3,]  0.2 0.1632993 0.9660918 alpha #> [1] 0 0 0 beta #>      [,1] [,2] [,3] #> [1,]  0.7  0.0  0.0 #> [2,]  0.5  0.6  0.0 #> [3,] -0.1  0.4  0.5 psi #>      [,1] [,2] [,3] #> [1,]  0.1  0.0  0.0 #> [2,]  0.0  0.1  0.0 #> [3,]  0.0  0.0  0.1 psi_l # psi_l <- t(chol(psi)) #>           [,1]      [,2]      [,3] #> [1,] 0.3162278 0.0000000 0.0000000 #> [2,] 0.0000000 0.3162278 0.0000000 #> [3,] 0.0000000 0.0000000 0.3162278 nu #> [1] 0 0 0 lambda #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 theta #>      [,1] [,2] [,3] #> [1,]  0.2  0.0  0.0 #> [2,]  0.0  0.2  0.0 #> [3,]  0.0  0.0  0.2 theta_l # theta_l <- t(chol(theta)) #>           [,1]      [,2]      [,3] #> [1,] 0.4472136 0.0000000 0.0000000 #> [2,] 0.0000000 0.4472136 0.0000000 #> [3,] 0.0000000 0.0000000 0.4472136"},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/articles/ssm.html","id":"using-the-simssmfixed-function-from-the-simstatespace-package-to-simulate-data","dir":"Articles","previous_headings":"Data Generation","what":"Using the SimSSMFixed Function from the simStateSpace Package to Simulate Data","title":"The State Space Model","text":"","code":"library(simStateSpace) sim <- SimSSMFixed(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 0 ) data <- as.data.frame(sim) head(data) #>   id time          y1          y2         y3 #> 1  1    0 -0.68686529 -0.23269186  0.5864176 #> 2  1    1 -0.24266216 -0.01684359 -0.2646096 #> 3  1    2  0.92818305 -0.05859969 -1.0290302 #> 4  1    3  0.03836036  0.57871750 -0.2909122 #> 5  1    4  0.14986876  0.76497073  0.8038175 #> 6  1    5 -0.10242480  0.63283996  0.2144810 summary(data) #>        id              time             y1                  y2            #>  Min.   :  1.00   Min.   :  0.0   Min.   :-3.573703   Min.   :-3.702841   #>  1st Qu.: 50.75   1st Qu.:249.8   1st Qu.:-0.421745   1st Qu.:-0.493703   #>  Median :100.50   Median :499.5   Median : 0.001250   Median : 0.006033   #>  Mean   :100.50   Mean   :499.5   Mean   : 0.002369   Mean   : 0.005798   #>  3rd Qu.:150.25   3rd Qu.:749.2   3rd Qu.: 0.426438   3rd Qu.: 0.505410   #>  Max.   :200.00   Max.   :999.0   Max.   : 3.149803   Max.   : 3.752081   #>        y3            #>  Min.   :-3.029883   #>  1st Qu.:-0.455284   #>  Median : 0.006444   #>  Mean   : 0.005704   #>  3rd Qu.: 0.467663   #>  Max.   : 3.119023 plot(sim)"},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/articles/ssm.html","id":"prepare-data","dir":"Articles","previous_headings":"Model Fitting","what":"Prepare Data","title":"The State Space Model","text":"","code":"dynr_data <- dynr::dynr.data(   data = data,   id = \"id\",   time = \"time\",   observed = c(\"y1\", \"y2\", \"y3\") )"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/ssm.html","id":"prepare-initial-condition","dir":"Articles","previous_headings":"Model Fitting","what":"Prepare Initial Condition","title":"The State Space Model","text":"","code":"dynr_initial <- dynr::prep.initial(   values.inistate = mu0,   params.inistate = c(\"mu0_1_1\", \"mu0_2_1\", \"mu0_3_1\"),   values.inicov = sigma0,   params.inicov = matrix(     data = c(       \"sigma0_1_1\", \"sigma0_2_1\", \"sigma0_3_1\",       \"sigma0_2_1\", \"sigma0_2_2\", \"sigma0_3_2\",       \"sigma0_3_1\", \"sigma0_3_2\", \"sigma0_3_3\"     ),     nrow = 3   ) )"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/ssm.html","id":"prepare-measurement-model","dir":"Articles","previous_headings":"Model Fitting","what":"Prepare Measurement Model","title":"The State Space Model","text":"","code":"dynr_measurement <- dynr::prep.measurement(   values.load = diag(3),   params.load = matrix(data = \"fixed\", nrow = 3, ncol = 3),   state.names = c(\"eta_1\", \"eta_2\", \"eta_3\"),   obs.names = c(\"y1\", \"y2\", \"y3\") )"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/ssm.html","id":"prepare-dynamic-process","dir":"Articles","previous_headings":"Model Fitting","what":"Prepare Dynamic Process","title":"The State Space Model","text":"","code":"dynr_dynamics <- dynr::prep.formulaDynamics(   formula = list(     eta_1 ~ alpha_1_1 * 1 + beta_1_1 * eta_1 + beta_1_2 * eta_2 + beta_1_3 * eta_3,     eta_2 ~ alpha_2_1 * 1 + beta_2_1 * eta_1 + beta_2_2 * eta_2 + beta_2_3 * eta_3,     eta_3 ~ alpha_3_1 * 1 + beta_3_1 * eta_1 + beta_3_2 * eta_2 + beta_3_3 * eta_3   ),   startval = c(     alpha_1_1 = alpha[1], alpha_2_1 = alpha[2], alpha_3_1 = alpha[3],     beta_1_1 = beta[1, 1], beta_1_2 = beta[1, 2], beta_1_3 = beta[1, 3],     beta_2_1 = beta[2, 1], beta_2_2 = beta[2, 2], beta_2_3 = beta[2, 3],     beta_3_1 = beta[3, 1], beta_3_2 = beta[3, 2], beta_3_3 = beta[3, 3]   ),   isContinuousTime = FALSE )"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/ssm.html","id":"prepare-process-noise","dir":"Articles","previous_headings":"Model Fitting","what":"Prepare Process Noise","title":"The State Space Model","text":"","code":"dynr_noise <- dynr::prep.noise(   values.latent = psi,   params.latent = matrix(     data = c(       \"psi_1_1\", \"psi_2_1\", \"psi_3_1\",       \"psi_2_1\", \"psi_2_2\", \"psi_3_2\",       \"psi_3_1\", \"psi_3_2\", \"psi_3_3\"     ),     nrow = 3   ),   values.observed = theta,   params.observed = matrix(     data = c(       \"theta_1_1\", \"fixed\", \"fixed\",       \"fixed\", \"theta_2_2\", \"fixed\",       \"fixed\", \"fixed\", \"theta_3_3\"     ),     nrow = 3   ) )"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/ssm.html","id":"prepare-the-model","dir":"Articles","previous_headings":"Model Fitting","what":"Prepare the Model","title":"The State Space Model","text":"","code":"model <- dynr::dynr.model(   data = dynr_data,   initial = dynr_initial,   measurement = dynr_measurement,   dynamics = dynr_dynamics,   noise = dynr_noise,   outfile = \"ssm.c\" )"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/ssm.html","id":"fit-the-model","dir":"Articles","previous_headings":"Model Fitting","what":"Fit the Model","title":"The State Space Model","text":"","code":"results <- dynr::dynr.cook(   model,   debug_flag = TRUE,   verbose = FALSE ) #> [1] \"Get ready!!!!\" #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ #> Optimization function called. #> Starting Hessian calculation ... #> Finished Hessian calculation. #> Original exit flag:  3  #> Modified exit flag:  3  #> Optimization terminated successfully: ftol_rel or ftol_abs was reached.  #> Original fitted parameters:  0.0005961664 0.001359957 0.0007051336 0.7027191  #> 0.0001217893 0.0002798859 0.4949196 0.6022024 0.003459674 -0.09928468 0.3995945  #> 0.5004467 -2.308275 0.00497675 -0.005562762 -2.30205 -0.01169773 -2.30829  #> -1.612265 -1.609942 -1.609617 0.09832407 -0.2133118 0.03969491 -0.001008316  #> 0.2859454 0.2056593 -0.04789157 0.09867105 -0.005941175  #>  #> Transformed fitted parameters:  0.0005961664 0.001359957 0.0007051336 0.7027191  #> 0.0001217893 0.0002798859 0.4949196 0.6022024 0.003459674 -0.09928468 0.3995945  #> 0.5004467 0.09943265 0.0004948514 -0.0005531202 0.100056 -0.001173151  #> 0.09944788 0.1994355 0.1998993 0.1999642 0.09832407 -0.2133118 0.03969491  #> 0.9989922 0.2856572 0.205452 1.034919 0.152805 1.04561  #>  #> Doing end processing #> Successful trial #> Total Time: 3.057054  #> Backend Time: 3.056905"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/ssm.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"The State Space Model","text":"","code":"summary(results) #> Coefficients: #>              Estimate Std. Error t value   ci.lower   ci.upper Pr(>|t|)     #> alpha_1_1   0.0005962  0.0007660   0.778 -0.0009051  0.0020974   0.2182     #> alpha_2_1   0.0013600  0.0009510   1.430 -0.0005041  0.0032240   0.0764 .   #> alpha_3_1   0.0007051  0.0009581   0.736 -0.0011727  0.0025830   0.2309     #> beta_1_1    0.7027191  0.0066034 106.418  0.6897766  0.7156615   <2e-16 *** #> beta_1_2    0.0001218  0.0041432   0.029 -0.0079988  0.0082424   0.4883     #> beta_1_3    0.0002799  0.0030687   0.091 -0.0057346  0.0062944   0.4637     #> beta_2_1    0.4949196  0.0069454  71.259  0.4813069  0.5085323   <2e-16 *** #> beta_2_2    0.6022024  0.0053928 111.668  0.5916328  0.6127721   <2e-16 *** #> beta_2_3    0.0034597  0.0038536   0.898 -0.0040933  0.0110127   0.1847     #> beta_3_1   -0.0992847  0.0051148 -19.411 -0.1093095 -0.0892599   <2e-16 *** #> beta_3_2    0.3995945  0.0049998  79.923  0.3897951  0.4093938   <2e-16 *** #> beta_3_3    0.5004467  0.0047843 104.602  0.4910697  0.5098237   <2e-16 *** #> psi_1_1     0.0994326  0.0021366  46.538  0.0952450  0.1036203   <2e-16 *** #> psi_2_1     0.0004949  0.0007802   0.634 -0.0010343  0.0020240   0.2630     #> psi_3_1    -0.0005531  0.0007292  -0.759 -0.0019823  0.0008761   0.2241     #> psi_2_2     0.1000560  0.0017428  57.412  0.0966402  0.1034717   <2e-16 *** #> psi_3_2    -0.0011732  0.0007334  -1.600 -0.0026106  0.0002643   0.0549 .   #> psi_3_3     0.0994479  0.0020975  47.413  0.0953369  0.1035589   <2e-16 *** #> theta_1_1   0.1994355  0.0018052 110.477  0.1958973  0.2029736   <2e-16 *** #> theta_2_2   0.1998993  0.0017203 116.198  0.1965275  0.2032711   <2e-16 *** #> theta_3_3   0.1999642  0.0021133  94.623  0.1958223  0.2041062   <2e-16 *** #> mu0_1_1     0.0983241  0.0749975   1.311 -0.0486684  0.2453165   0.0949 .   #> mu0_2_1    -0.2133118  0.0777988  -2.742 -0.3657947 -0.0608290   0.0031 **  #> mu0_3_1     0.0396949  0.0777962   0.510 -0.1127829  0.1921727   0.3049     #> sigma0_1_1  0.9989922  0.1091707   9.151  0.7850215  1.2129629   <2e-16 *** #> sigma0_2_1  0.2856572  0.0823113   3.470  0.1243300  0.4469844   0.0003 *** #> sigma0_3_1  0.2054520  0.0831208   2.472  0.0425383  0.3683657   0.0067 **  #> sigma0_2_2  1.0349195  0.1191749   8.684  0.8013410  1.2684980   <2e-16 *** #> sigma0_3_2  0.1528050  0.0868278   1.760 -0.0173745  0.3229844   0.0392 *   #> sigma0_3_3  1.0456102  0.1222865   8.550  0.8059330  1.2852874   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> -2 log-likelihood value at convergence = 1061138.89 #> AIC = 1061198.89 #> BIC = 1061505.07"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/ssm.html","id":"parameter-estimates","dir":"Articles","previous_headings":"Summary","what":"Parameter Estimates","title":"The State Space Model","text":"","code":"alpha_hat #> [1] 0.0005961664 0.0013599569 0.0007051336 beta_hat #>             [,1]         [,2]         [,3] #> [1,]  0.70271908 0.0001217893 0.0002798859 #> [2,]  0.49491960 0.6022024374 0.0034596745 #> [3,] -0.09928468 0.3995944725 0.5004466726 psi_hat #>               [,1]          [,2]          [,3] #> [1,]  0.0994326477  0.0004948514 -0.0005531202 #> [2,]  0.0004948514  0.1000559558 -0.0011731510 #> [3,] -0.0005531202 -0.0011731510  0.0994478783 theta_hat #>           [,1]      [,2]      [,3] #> [1,] 0.1994355 0.0000000 0.0000000 #> [2,] 0.0000000 0.1998993 0.0000000 #> [3,] 0.0000000 0.0000000 0.1999642 mu0_hat #> [1]  0.09832407 -0.21331183  0.03969491 sigma0_hat #>           [,1]      [,2]     [,3] #> [1,] 0.9989922 0.2856572 0.205452 #> [2,] 0.2856572 1.0349195 0.152805 #> [3,] 0.2054520 0.1528050 1.045610"},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/articles/var.html","id":"model","dir":"Articles","previous_headings":"","what":"Model","title":"The Vector Autoregressive Model","text":"measurement model given 𝐲i,t=𝛈i,t\\begin{equation}   \\mathbf{y}_{, t}   =   \\boldsymbol{\\eta}_{, t} \\end{equation} 𝐲i,t\\mathbf{y}_{, t} represents vector observed variables 𝛈i,t\\boldsymbol{\\eta}_{, t} vector latent variables individual ii time tt. Since observed latent variables equal, generate data dynamic structure. dynamic structure given 𝛈i,t=𝛂+𝛃𝛈i,t−1+𝛇i,t,with𝛇i,t∼𝒩(𝟎,𝚿)\\begin{equation}   \\boldsymbol{\\eta}_{, t}   =   \\boldsymbol{\\alpha}   +   \\boldsymbol{\\beta}   \\boldsymbol{\\eta}_{, t - 1}   +   \\boldsymbol{\\zeta}_{, t},   \\quad   \\mathrm{}   \\quad   \\boldsymbol{\\zeta}_{, t}   \\sim   \\mathcal{N}   \\left(   \\mathbf{0},   \\boldsymbol{\\Psi}   \\right) \\end{equation} 𝛈i,t\\boldsymbol{\\eta}_{, t}, 𝛈i,t−1\\boldsymbol{\\eta}_{, t - 1}, 𝛇i,t\\boldsymbol{\\zeta}_{, t} random variables, 𝛂\\boldsymbol{\\alpha}, 𝛃\\boldsymbol{\\beta}, 𝚿\\boldsymbol{\\Psi} model parameters. , 𝛈i,t\\boldsymbol{\\eta}_{, t} vector latent variables time tt individual ii, 𝛈i,t−1\\boldsymbol{\\eta}_{, t - 1} represents vector latent variables time t−1t - 1 individual ii, 𝛇i,t\\boldsymbol{\\zeta}_{, t} represents vector dynamic noise time tt individual ii. 𝛂\\boldsymbol{\\alpha} denotes vector intercepts, 𝛃\\boldsymbol{\\beta} matrix autoregression cross regression coefficients, 𝚿\\boldsymbol{\\Psi} covariance matrix 𝛇i,t\\boldsymbol{\\zeta}_{, t}. alternative representation dynamic noise given 𝛇i,t=𝚿12𝐳i,t,with𝐳i,t∼𝒩(𝟎,𝐈)\\begin{equation}   \\boldsymbol{\\zeta}_{, t}   =   \\boldsymbol{\\Psi}^{\\frac{1}{2}}   \\mathbf{z}_{, t},   \\quad   \\mathrm{}   \\quad   \\mathbf{z}_{, t}   \\sim   \\mathcal{N}   \\left(   \\mathbf{0},   \\mathbf{}   \\right) \\end{equation} (𝚿12)(𝚿12)′=𝚿\\left( \\boldsymbol{\\Psi}^{\\frac{1}{2}} \\right) \\left( \\boldsymbol{\\Psi}^{\\frac{1}{2}} \\right)^{\\prime} = \\boldsymbol{\\Psi} .","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/articles/var.html","id":"notation","dir":"Articles","previous_headings":"Data Generation","what":"Notation","title":"The Vector Autoregressive Model","text":"Let t=1000t = 1000 number time points n=200n = 200 number individuals. Let initial condition 𝛈0\\boldsymbol{\\eta}_{0} given 𝛈0∼𝒩(𝛍𝛈∣0,𝚺𝛈∣0)\\begin{equation} \\boldsymbol{\\eta}_{0} \\sim \\mathcal{N} \\left( \\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0}, \\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0} \\right) \\end{equation} 𝛍𝛈∣0=(000)\\begin{equation} \\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0} = \\left( \\begin{array}{c}   0 \\\\   0 \\\\   0 \\\\ \\end{array} \\right) \\end{equation} 𝚺𝛈∣0=(10.20.20.210.20.20.21).\\begin{equation} \\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0} = \\left( \\begin{array}{ccc}   1 & 0.2 & 0.2 \\\\   0.2 & 1 & 0.2 \\\\   0.2 & 0.2 & 1 \\\\ \\end{array} \\right) . \\end{equation} Let constant vector 𝛂\\boldsymbol{\\alpha} given 𝛂=(000).\\begin{equation} \\boldsymbol{\\alpha} = \\left( \\begin{array}{c}   0 \\\\   0 \\\\   0 \\\\ \\end{array} \\right) . \\end{equation} Let transition matrix 𝛃\\boldsymbol{\\beta} given 𝛃=(0.7000.50.60−0.10.40.5).\\begin{equation} \\boldsymbol{\\beta} = \\left( \\begin{array}{ccc}   0.7 & 0 & 0 \\\\   0.5 & 0.6 & 0 \\\\   -0.1 & 0.4 & 0.5 \\\\ \\end{array} \\right) . \\end{equation} Let dynamic process noise 𝚿\\boldsymbol{\\Psi} given 𝚿=(0.10000.10000.1).\\begin{equation} \\boldsymbol{\\Psi} = \\left( \\begin{array}{ccc}   0.1 & 0 & 0 \\\\   0 & 0.1 & 0 \\\\   0 & 0 & 0.1 \\\\ \\end{array} \\right) . \\end{equation}","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/articles/var.html","id":"r-function-arguments","dir":"Articles","previous_headings":"Data Generation","what":"R Function Arguments","title":"The Vector Autoregressive Model","text":"","code":"n #> [1] 200 time #> [1] 1000 mu0 #> [1] 0 0 0 sigma0 #>      [,1] [,2] [,3] #> [1,]  1.0  0.2  0.2 #> [2,]  0.2  1.0  0.2 #> [3,]  0.2  0.2  1.0 sigma0_l # sigma0_l <- t(chol(sigma0)) #>      [,1]      [,2]      [,3] #> [1,]  1.0 0.0000000 0.0000000 #> [2,]  0.2 0.9797959 0.0000000 #> [3,]  0.2 0.1632993 0.9660918 alpha #> [1] 0 0 0 beta #>      [,1] [,2] [,3] #> [1,]  0.7  0.0  0.0 #> [2,]  0.5  0.6  0.0 #> [3,] -0.1  0.4  0.5 psi #>      [,1] [,2] [,3] #> [1,]  0.1  0.0  0.0 #> [2,]  0.0  0.1  0.0 #> [3,]  0.0  0.0  0.1 psi_l # psi_l <- t(chol(psi)) #>           [,1]      [,2]      [,3] #> [1,] 0.3162278 0.0000000 0.0000000 #> [2,] 0.0000000 0.3162278 0.0000000 #> [3,] 0.0000000 0.0000000 0.3162278"},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/articles/var.html","id":"using-the-simssmvarfixed-function-from-the-simstatespace-package-to-simulate-data","dir":"Articles","previous_headings":"Data Generation","what":"Using the SimSSMVARFixed Function from the simStateSpace Package to Simulate Data","title":"The Vector Autoregressive Model","text":"","code":"library(simStateSpace) sim <- SimSSMVARFixed(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l ) data <- as.data.frame(sim) head(data) #>   id time          y1         y2         y3 #> 1  1    0 -1.84569501  0.5815402  0.8057225 #> 2  1    1 -1.34252674 -1.1219724  0.9873906 #> 3  1    2 -0.57123433 -1.1591679  0.1280274 #> 4  1    3 -0.44448720 -0.9783200 -0.3028425 #> 5  1    4 -0.28796224 -1.2222325 -0.3807219 #> 6  1    5  0.01622801 -1.2362032 -1.0056038 summary(data) #>        id              time             y1                   y2             #>  Min.   :  1.00   Min.   :  0.0   Min.   :-2.4895987   Min.   :-3.0920279   #>  1st Qu.: 50.75   1st Qu.:249.8   1st Qu.:-0.2986483   1st Qu.:-0.3959327   #>  Median :100.50   Median :499.5   Median :-0.0014409   Median :-0.0016598   #>  Mean   :100.50   Mean   :499.5   Mean   :-0.0008995   Mean   :-0.0008663   #>  3rd Qu.:150.25   3rd Qu.:749.2   3rd Qu.: 0.2960796   3rd Qu.: 0.3954324   #>  Max.   :200.00   Max.   :999.0   Max.   : 2.3690715   Max.   : 2.8357211   #>        y3            #>  Min.   :-2.261273   #>  1st Qu.:-0.345883   #>  Median : 0.000642   #>  Mean   : 0.001574   #>  3rd Qu.: 0.350501   #>  Max.   : 2.532053 plot(sim)"},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/articles/var.html","id":"prepare-data","dir":"Articles","previous_headings":"Model Fitting","what":"Prepare Data","title":"The Vector Autoregressive Model","text":"","code":"dynr_data <- dynr::dynr.data(   data = data,   id = \"id\",   time = \"time\",   observed = c(\"y1\", \"y2\", \"y3\") )"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/var.html","id":"prepare-initial-condition","dir":"Articles","previous_headings":"Model Fitting","what":"Prepare Initial Condition","title":"The Vector Autoregressive Model","text":"","code":"dynr_initial <- dynr::prep.initial(   values.inistate = mu0,   params.inistate = c(\"mu0_1_1\", \"mu0_2_1\", \"mu0_3_1\"),   values.inicov = sigma0,   params.inicov = matrix(     data = c(       \"sigma0_1_1\", \"sigma0_2_1\", \"sigma0_3_1\",       \"sigma0_2_1\", \"sigma0_2_2\", \"sigma0_3_2\",       \"sigma0_3_1\", \"sigma0_3_2\", \"sigma0_3_3\"     ),     nrow = 3   ) )"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/var.html","id":"prepare-measurement-model","dir":"Articles","previous_headings":"Model Fitting","what":"Prepare Measurement Model","title":"The Vector Autoregressive Model","text":"","code":"dynr_measurement <- dynr::prep.measurement(   values.load = diag(3),   params.load = matrix(data = \"fixed\", nrow = 3, ncol = 3),   state.names = c(\"eta_1\", \"eta_2\", \"eta_3\"),   obs.names = c(\"y1\", \"y2\", \"y3\") )"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/var.html","id":"prepare-dynamic-process","dir":"Articles","previous_headings":"Model Fitting","what":"Prepare Dynamic Process","title":"The Vector Autoregressive Model","text":"","code":"dynr_dynamics <- dynr::prep.formulaDynamics(   formula = list(     eta_1 ~ alpha_1_1 * 1 + beta_1_1 * eta_1 + beta_1_2 * eta_2 + beta_1_3 * eta_3,     eta_2 ~ alpha_2_1 * 1 + beta_2_1 * eta_1 + beta_2_2 * eta_2 + beta_2_3 * eta_3,     eta_3 ~ alpha_3_1 * 1 + beta_3_1 * eta_1 + beta_3_2 * eta_2 + beta_3_3 * eta_3   ),   startval = c(     alpha_1_1 = alpha[1], alpha_2_1 = alpha[2], alpha_3_1 = alpha[3],     beta_1_1 = beta[1, 1], beta_1_2 = beta[1, 2], beta_1_3 = beta[1, 3],     beta_2_1 = beta[2, 1], beta_2_2 = beta[2, 2], beta_2_3 = beta[2, 3],     beta_3_1 = beta[3, 1], beta_3_2 = beta[3, 2], beta_3_3 = beta[3, 3]   ),   isContinuousTime = FALSE )"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/var.html","id":"prepare-process-noise","dir":"Articles","previous_headings":"Model Fitting","what":"Prepare Process Noise","title":"The Vector Autoregressive Model","text":"","code":"dynr_noise <- dynr::prep.noise(   values.latent = psi,   params.latent = matrix(     data = c(       \"psi_1_1\", \"psi_2_1\", \"psi_3_1\",       \"psi_2_1\", \"psi_2_2\", \"psi_3_2\",       \"psi_3_1\", \"psi_3_2\", \"psi_3_3\"     ),     nrow = 3   ),   values.observed = matrix(data = 0, nrow = 3, ncol = 3),   params.observed = matrix(data = \"fixed\", nrow = 3, ncol = 3) )"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/var.html","id":"prepare-the-model","dir":"Articles","previous_headings":"Model Fitting","what":"Prepare the Model","title":"The Vector Autoregressive Model","text":"","code":"model <- dynr::dynr.model(   data = dynr_data,   initial = dynr_initial,   measurement = dynr_measurement,   dynamics = dynr_dynamics,   noise = dynr_noise,   outfile = \"var.c\" )"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/var.html","id":"fit-the-model","dir":"Articles","previous_headings":"Model Fitting","what":"Fit the Model","title":"The Vector Autoregressive Model","text":"","code":"results <- dynr::dynr.cook(   model,   debug_flag = TRUE,   verbose = FALSE ) #> [1] \"Get ready!!!!\" #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ #> Optimization function called. #> Starting Hessian calculation ... #> Finished Hessian calculation. #> Original exit flag:  3  #> Modified exit flag:  3  #> Optimization terminated successfully: ftol_rel or ftol_abs was reached.  #> Original fitted parameters:  -0.0001823909 -3.228313e-05 0.0009990529 0.6976606  #> 7.511598e-05 0.0032111 0.4983705 0.601261 -0.002564339 -0.1010207 0.4020545  #> 0.4980676 -2.307025 -0.0002516695 -0.0005780331 -2.301228 -0.00201067 -2.303063  #> -0.1669457 0.06793472 0.00486967 0.1539518 0.1949021 0.1100314 -0.02659891  #> 0.1927183 -0.01260537  #>  #> Transformed fitted parameters:  -0.0001823909 -3.228313e-05 0.0009990529  #> 0.6976606 7.511598e-05 0.0032111 0.4983705 0.601261 -0.002564339 -0.1010207  #> 0.4020545 0.4980676 0.09955699 -2.505546e-05 -5.754724e-05 0.1001358  #> -0.0002013256 0.09995271 -0.1669457 0.06793472 0.00486967 1.166435 0.2273405  #> 0.1283444 1.018061 0.2126744 1.037761  #>  #> Doing end processing #> Successful trial #> Total Time: 2.500154  #> Backend Time: 2.500009"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/var.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"The Vector Autoregressive Model","text":"","code":"summary(results) #> Coefficients: #>              Estimate Std. Error t value   ci.lower   ci.upper Pr(>|t|)     #> alpha_1_1  -1.824e-04  7.059e-04  -0.258 -1.566e-03  1.201e-03   0.3981     #> alpha_2_1  -3.228e-05  7.080e-04  -0.046 -1.420e-03  1.355e-03   0.4818     #> alpha_3_1   9.991e-04  7.073e-04   1.412 -3.872e-04  2.385e-03   0.0789 .   #> beta_1_1    6.977e-01  1.797e-03 388.277  6.941e-01  7.012e-01   <2e-16 *** #> beta_1_2    7.512e-05  1.510e-03   0.050 -2.885e-03  3.035e-03   0.4802     #> beta_1_3    3.211e-03  1.540e-03   2.085  1.925e-04  6.230e-03   0.0185 *   #> beta_2_1    4.984e-01  1.802e-03 276.512  4.948e-01  5.019e-01   <2e-16 *** #> beta_2_2    6.013e-01  1.515e-03 396.968  5.983e-01  6.042e-01   <2e-16 *** #> beta_2_3   -2.564e-03  1.545e-03  -1.660 -5.592e-03  4.631e-04   0.0484 *   #> beta_3_1   -1.010e-01  1.801e-03 -56.106 -1.045e-01 -9.749e-02   <2e-16 *** #> beta_3_2    4.021e-01  1.513e-03 265.695  3.991e-01  4.050e-01   <2e-16 *** #> beta_3_3    4.981e-01  1.543e-03 322.742  4.950e-01  5.011e-01   <2e-16 *** #> psi_1_1     9.956e-02  3.150e-04 316.065  9.894e-02  1.002e-01   <2e-16 *** #> psi_2_1    -2.506e-05  2.234e-04  -0.112 -4.629e-04  4.128e-04   0.4553     #> psi_3_1    -5.755e-05  2.232e-04  -0.258 -4.949e-04  3.798e-04   0.3982     #> psi_2_2     1.001e-01  3.168e-04 316.074  9.951e-02  1.008e-01   <2e-16 *** #> psi_3_2    -2.013e-04  2.238e-04  -0.899 -6.400e-04  2.373e-04   0.1842     #> psi_3_3     9.995e-02  3.162e-04 316.061  9.933e-02  1.006e-01   <2e-16 *** #> mu0_1_1    -1.669e-01  7.623e-02  -2.190 -3.163e-01 -1.755e-02   0.0143 *   #> mu0_2_1     6.793e-02  7.158e-02   0.949 -7.236e-02  2.082e-01   0.1713     #> mu0_3_1     4.870e-03  7.211e-02   0.068 -1.365e-01  1.462e-01   0.4731     #> sigma0_1_1  1.166e+00  1.165e-01  10.015  9.382e-01  1.395e+00   <2e-16 *** #> sigma0_2_1  2.273e-01  7.898e-02   2.878  7.254e-02  3.821e-01   0.0020 **  #> sigma0_3_1  1.283e-01  7.837e-02   1.638 -2.526e-02  2.819e-01   0.0507 .   #> sigma0_2_2  1.018e+00  1.023e-01   9.956  8.176e-01  1.218e+00   <2e-16 *** #> sigma0_3_2  2.127e-01  7.416e-02   2.868  6.732e-02  3.580e-01   0.0021 **  #> sigma0_3_3  1.038e+00  1.039e-01   9.987  8.341e-01  1.241e+00   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> -2 log-likelihood value at convergence = 321906.63 #> AIC = 321960.63 #> BIC = 322236.20"},{"path":"https://github.com/jeksterslab/simStateSpace/articles/var.html","id":"parameter-estimates","dir":"Articles","previous_headings":"Summary","what":"Parameter Estimates","title":"The Vector Autoregressive Model","text":"","code":"alpha_hat #> [1] -1.823909e-04 -3.228313e-05  9.990529e-04 beta_hat #>            [,1]         [,2]         [,3] #> [1,]  0.6976606 7.511598e-05  0.003211100 #> [2,]  0.4983705 6.012610e-01 -0.002564339 #> [3,] -0.1010207 4.020545e-01  0.498067640 psi_hat #>               [,1]          [,2]          [,3] #> [1,]  9.955699e-02 -2.505546e-05 -5.754724e-05 #> [2,] -2.505546e-05  1.001358e-01 -2.013256e-04 #> [3,] -5.754724e-05 -2.013256e-04  9.995271e-02 mu0_hat #> [1] -0.16694573  0.06793472  0.00486967 sigma0_hat #>           [,1]      [,2]      [,3] #> [1,] 1.1664346 0.2273405 0.1283444 #> [2,] 0.2273405 1.0180609 0.2126744 #> [3,] 0.1283444 0.2126744 1.0377611"},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ivan Jacob Agaloos Pesigan. Author, maintainer, copyright holder.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pesigan, . J. . (2024). simStateSpace: Simulate Data State Space Models. R package version 1.2.8.9000. https://github.com/jeksterslab/simStateSpace","code":"@Manual{,   author = {Ivan Jacob Agaloos Pesigan},   title = {simStateSpace: Simulate Data from State Space Models},   year = {2024},   note = {R package version 1.2.8.9000}, }"},{"path":"https://github.com/jeksterslab/simStateSpace/index.html","id":"simstatespace","dir":"","previous_headings":"","what":"Simulate Data from State Space Models","title":"Simulate Data from State Space Models","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Simulate Data from State Space Models","text":"Provides streamlined user-friendly framework simulating data state space models, particularly number subjects/units (nn) exceeds one, scenario commonly encountered social behavioral sciences. introduction state space models social behavioral sciences, refer Chow, Ho, Hamaker, Dolan (2010: https://doi.org/10.1080/10705511003661553).","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Simulate Data from State Space Models","text":"can install CRAN release simStateSpace : can install development version simStateSpace GitHub :","code":"install.packages(\"simStateSpace\") if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"jeksterslab/simStateSpace\")"},{"path":"https://github.com/jeksterslab/simStateSpace/index.html","id":"more-information","dir":"","previous_headings":"","what":"More Information","title":"Simulate Data from State Space Models","text":"See GitHub Pages package documentation.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/reference/LinSDE2SSM.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Parameters from the Linear Stochastic Differential Equation Model to State Space Model Parameterization — LinSDE2SSM","title":"Convert Parameters from the Linear Stochastic Differential Equation Model to State Space Model Parameterization — LinSDE2SSM","text":"function converts parameters linear stochastic differential equation model state space model parameterization.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/LinSDE2SSM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Parameters from the Linear Stochastic Differential Equation Model to State Space Model Parameterization — LinSDE2SSM","text":"","code":"LinSDE2SSM(iota, phi, sigma_l, delta_t)"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/LinSDE2SSM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Parameters from the Linear Stochastic Differential Equation Model to State Space Model Parameterization — LinSDE2SSM","text":"iota Numeric vector. unobserved term constant time (\\(\\boldsymbol{\\iota}\\)). phi Numeric matrix. drift matrix represents rate change solution absence random fluctuations (\\(\\boldsymbol{\\Phi}\\)). sigma_l Numeric matrix. Cholesky factorization (t(chol(sigma))) covariance matrix volatility randomness process (\\(\\boldsymbol{\\Sigma}\\)). delta_t Numeric. Time interval (\\(\\Delta_t\\)).","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/LinSDE2SSM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Parameters from the Linear Stochastic Differential Equation Model to State Space Model Parameterization — LinSDE2SSM","text":"Returns list state space parameters: alpha: Numeric vector. Vector constant values dynamic model (\\(\\boldsymbol{\\alpha}\\)). beta: Numeric matrix. Transition matrix relating values latent variables previous time point current time point. (\\(\\boldsymbol{\\beta}\\)). psi_l: Numeric matrix. Cholesky factorization (t(chol(psi))) process noise covariance matrix \\(\\boldsymbol{\\Psi}\\).","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/LinSDE2SSM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert Parameters from the Linear Stochastic Differential Equation Model to State Space Model Parameterization — LinSDE2SSM","text":"Let linear stochastic equation model given $$     \\mathrm{d}     \\boldsymbol{\\eta}_{, t}     =     \\left(       \\boldsymbol{\\iota}       +       \\boldsymbol{\\Phi}       \\boldsymbol{\\eta}_{, t}     \\right)     \\mathrm{d} t     +     \\boldsymbol{\\Sigma}^{\\frac{1}{2}}     \\mathrm{d}     \\mathbf{W}_{, t}   $$ individual \\(\\) time \\(t\\). discrete-time state space model given represents discrete-time solution linear stochastic differential equation. $$     \\boldsymbol{\\eta}_{, t_{{l_{}}}}     =     \\boldsymbol{\\alpha}_{\\Delta t_{{l_{}}}}     +     \\boldsymbol{\\beta}_{\\Delta t_{{l_{}}}}     \\boldsymbol{\\eta}_{, t_{l_{} - 1}}     +     \\boldsymbol{\\zeta}_{, t_{{l_{}}}},     \\quad     \\mathrm{}     \\quad     \\boldsymbol{\\zeta}_{, t_{{l_{}}}}     \\sim     \\mathcal{N}     \\left(     \\mathbf{0},     \\boldsymbol{\\Psi}_{\\Delta t_{{l_{}}}}     \\right)   $$ $$       \\boldsymbol{\\beta}_{\\Delta t_{{l_{}}}}       =       \\exp{         \\left(           \\Delta t           \\boldsymbol{\\Phi}         \\right)       },   $$ $$       \\boldsymbol{\\alpha}_{\\Delta t_{{l_{}}}}       =       \\boldsymbol{\\Phi}^{-1}       \\left(         \\boldsymbol{\\beta} - \\mathbf{}_{p}       \\right)       \\boldsymbol{\\iota}, \\quad \\mathrm{}   $$ $$       \\mathrm{vec}       \\left(         \\boldsymbol{\\Psi}_{\\Delta t_{{l_{}}}}       \\right)       =       \\left[         \\left(           \\boldsymbol{\\Phi} \\otimes \\mathbf{}_{p}         \\right)         +         \\left(           \\mathbf{}_{p} \\otimes \\boldsymbol{\\Phi}         \\right)       \\right]       \\left[         \\exp         \\left(           \\left[             \\left(               \\boldsymbol{\\Phi} \\otimes \\mathbf{}_{p}             \\right)             +             \\left(               \\mathbf{}_{p} \\otimes \\boldsymbol{\\Phi}             \\right)           \\right]           \\Delta t         \\right)         -         \\mathbf{}_{p \\times p}       \\right]       \\mathrm{vec}       \\left(         \\boldsymbol{\\Sigma}       \\right)   $$ \\(t\\) denotes continuous-time processes can defined arbitrary time point, \\(t_{l_{}}\\) \\(l^\\mathrm{th}\\) observed measurement occassion individual \\(\\), \\(p\\) number latent variables \\(\\Delta t\\) time interval.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/LinSDE2SSM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert Parameters from the Linear Stochastic Differential Equation Model to State Space Model Parameterization — LinSDE2SSM","text":"Harvey, . C. (1990). Forecasting, structural time series models Kalman filter. Cambridge University Press. doi:10.1017/cbo9781107049994","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/reference/LinSDE2SSM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert Parameters from the Linear Stochastic Differential Equation Model to State Space Model Parameterization — LinSDE2SSM","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/LinSDE2SSM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Parameters from the Linear Stochastic Differential Equation Model to State Space Model Parameterization — LinSDE2SSM","text":"","code":"p <- 2 iota <- c(0.317, 0.230) phi <- matrix(   data = c(    -0.10,    0.05,    0.05,    -0.10  ),  nrow = p ) sigma <- matrix(   data = c(     2.79,     0.06,     0.06,     3.27   ),   nrow = p ) sigma_l <- t(chol(sigma)) delta_t <- 0.10  LinSDE2SSM(   iota = iota,   phi = phi,   sigma_l = sigma_l,   delta_t = delta_t ) #> $alpha #>            [,1] #> [1,] 0.03159928 #> [2,] 0.02296420 #>  #> $beta #>            [,1]       [,2] #> [1,] 0.99006221 0.00495027 #> [2,] 0.00495027 0.99006221 #>  #> $psi_l #>            [,1]      [,2] #> [1,] 0.52560735 0.0000000 #> [2,] 0.01414641 0.5688463 #>"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimBetaN.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Transition Matrices from the Multivariate Normal Distribution — SimBetaN","title":"Simulate Transition Matrices from the Multivariate Normal Distribution — SimBetaN","text":"function simulates random transition matrices multivariate normal distribution. function ensures generated transition matrices stationary using TestStationarity().","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimBetaN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Transition Matrices from the Multivariate Normal Distribution — SimBetaN","text":"","code":"SimBetaN(n, beta, vcov_beta_vec_l)"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimBetaN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Transition Matrices from the Multivariate Normal Distribution — SimBetaN","text":"n Positive integer. Number replications. beta Numeric matrix. transition matrix (\\(\\boldsymbol{\\beta}\\)). vcov_beta_vec_l Numeric matrix. Cholesky factorization (t(chol(vcov_beta_vec))) sampling variance-covariance matrix \\(\\mathrm{vec} \\left( \\boldsymbol{\\beta} \\right)\\).","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimBetaN.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate Transition Matrices from the Multivariate Normal Distribution — SimBetaN","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimBetaN.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Transition Matrices from the Multivariate Normal Distribution — SimBetaN","text":"","code":"n <- 10 beta <- matrix(   data = c(     0.7, 0.5, -0.1,     0.0, 0.6, 0.4,     0, 0, 0.5   ),   nrow = 3 ) vcov_beta_vec_l <- t(chol(0.001 * diag(9))) SimBetaN(n = n, beta = beta, vcov_beta_vec_l = vcov_beta_vec_l) #> [[1]] #>            [,1]          [,2]       [,3] #> [1,]  0.7103395 -0.0004829737 0.02370148 #> [2,]  0.4648248  0.5993776821 0.02773577 #> [3,] -0.1070794  0.3411360851 0.50429558 #>  #> [[2]] #>            [,1]        [,2]         [,3] #> [1,]  0.6976265 -0.04028349 -0.002208314 #> [2,]  0.4990847  0.59542436  0.009435501 #> [3,] -0.1129286  0.37930240  0.462791572 #>  #> [[3]] #>            [,1]        [,2]        [,3] #> [1,]  0.7198422 0.001385859 -0.04451615 #> [2,]  0.4743631 0.635564236  0.03050132 #> [3,] -0.1205753 0.434244293  0.47389458 #>  #> [[4]] #>            [,1]        [,2]       [,3] #> [1,]  0.7029540 -0.01665823 0.03859427 #> [2,]  0.5064191  0.66389629 0.04366238 #> [3,] -0.1188096  0.39959059 0.49030928 #>  #> [[5]] #>            [,1]        [,2]         [,3] #> [1,]  0.7113137 -0.06108355 -0.001098922 #> [2,]  0.4973354  0.55895700  0.048238135 #> [3,] -0.1128323  0.40398333  0.471195115 #>  #> [[6]] #>             [,1]        [,2]        [,3] #> [1,]  0.68236604 -0.01742727  0.01244699 #> [2,]  0.49408692  0.62516893 -0.03988741 #> [3,] -0.07494344  0.34096968  0.52048583 #>  #> [[7]] #>            [,1]        [,2]         [,3] #> [1,]  0.7111349 -0.06607776 -0.001751393 #> [2,]  0.4447285  0.58518340 -0.007643585 #> [3,] -0.1274092  0.39893216  0.435273121 #>  #> [[8]] #>             [,1]       [,2]         [,3] #> [1,]  0.73225375 0.07626581 -0.001247313 #> [2,]  0.48959538 0.56803899  0.026292756 #> [3,] -0.07884372 0.37188012  0.485384475 #>  #> [[9]] #>             [,1]       [,2]        [,3] #> [1,]  0.70533896 0.03822759 0.005504865 #> [2,]  0.48628058 0.62547649 0.039177440 #> [3,] -0.09795049 0.36980611 0.485140003 #>  #> [[10]] #>            [,1]        [,2]        [,3] #> [1,]  0.7160153 -0.04312751 0.003212323 #> [2,]  0.5164538  0.57274293 0.067334232 #> [3,] -0.1147178  0.45638168 0.501401591 #>"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimPhiN.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Random Drift Matrices from the Multivariate Normal Distribution — SimPhiN","title":"Simulate Random Drift Matrices from the Multivariate Normal Distribution — SimPhiN","text":"function simulates random drift matrices multivariate normal distribution. function ensures generated drift matrices stable using TestPhi().","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimPhiN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Random Drift Matrices from the Multivariate Normal Distribution — SimPhiN","text":"","code":"SimPhiN(n, phi, vcov_phi_vec_l)"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimPhiN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Random Drift Matrices from the Multivariate Normal Distribution — SimPhiN","text":"n Positive integer. Number replications. phi Numeric matrix. drift matrix (\\(\\boldsymbol{\\Phi}\\)). vcov_phi_vec_l Numeric matrix. Cholesky factorization (t(chol(vcov_phi_vec))) sampling variance-covariance matrix \\(\\mathrm{vec} \\left( \\boldsymbol{\\Phi} \\right)\\).","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimPhiN.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate Random Drift Matrices from the Multivariate Normal Distribution — SimPhiN","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimPhiN.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Random Drift Matrices from the Multivariate Normal Distribution — SimPhiN","text":"","code":"n <- 10 phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) vcov_phi_vec_l <- t(chol(0.001 * diag(9))) SimPhiN(n = n, phi = phi, vcov_phi_vec_l = vcov_phi_vec_l) #> [[1]] #>            [,1]          [,2]        [,3] #> [1,] -0.3448957  2.089554e-06  0.03616728 #> [2,]  0.7926950 -5.310285e-01  0.05736071 #> [3,] -0.4445841  7.680411e-01 -0.65809866 #>  #> [[2]] #>            [,1]        [,2]         [,3] #> [1,] -0.3623718 -0.01217511 -0.007735489 #> [2,]  0.7801082 -0.52698944 -0.006206552 #> [3,] -0.4322138  0.77339135 -0.723781543 #>  #> [[3]] #>            [,1]       [,2]        [,3] #> [1,] -0.3109196 -0.0344481  0.01618050 #> [2,]  0.8388004 -0.4985958 -0.04549078 #> [3,] -0.4247055  0.6926874 -0.67053191 #>  #> [[4]] #>            [,1]        [,2]         [,3] #> [1,] -0.3345771 -0.06306017 -0.002279254 #> [2,]  0.7431753 -0.49728195  0.026453144 #> [3,] -0.4665079  0.67926889 -0.665562726 #>  #> [[5]] #>            [,1]        [,2]        [,3] #> [1,] -0.3349482  0.03249946 -0.01232484 #> [2,]  0.7412043 -0.49434942  0.04992734 #> [3,] -0.4805185  0.71712133 -0.63865777 #>  #> [[6]] #>            [,1]        [,2]        [,3] #> [1,] -0.3824591 -0.01985415  0.01570994 #> [2,]  0.8117500 -0.51413047 -0.02832438 #> [3,] -0.4421361  0.67692962 -0.68330201 #>  #> [[7]] #>            [,1]         [,2]        [,3] #> [1,] -0.3663760  0.005225181 -0.02010547 #> [2,]  0.7972541 -0.515845431 -0.02030443 #> [3,] -0.4422205  0.743382456 -0.71530688 #>  #> [[8]] #>            [,1]        [,2]        [,3] #> [1,] -0.3689781  0.04630413 -0.00768968 #> [2,]  0.7922316 -0.49115487 -0.03364059 #> [3,] -0.4339486  0.74451940 -0.71279424 #>  #> [[9]] #>            [,1]        [,2]         [,3] #> [1,] -0.3228484  0.02122083 -0.015559204 #> [2,]  0.8235633 -0.46047980  0.004007384 #> [3,] -0.4377454  0.69508981 -0.640505961 #>  #> [[10]] #>            [,1]        [,2]        [,3] #> [1,] -0.3206057 -0.03453232  0.02412758 #> [2,]  0.7727958 -0.49298905  0.03740576 #> [3,] -0.4034720  0.73666860 -0.68481022 #>"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMFixed.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data from a State Space Model (Fixed Parameters) — SimSSMFixed","title":"Simulate Data from a State Space Model (Fixed Parameters) — SimSSMFixed","text":"function simulates data using state space model. assumes parameters remain constant across individuals time.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMFixed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data from a State Space Model (Fixed Parameters) — SimSSMFixed","text":"","code":"SimSSMFixed(   n,   time,   delta_t = 1,   mu0,   sigma0_l,   alpha,   beta,   psi_l,   nu,   lambda,   theta_l,   type = 0,   x = NULL,   gamma = NULL,   kappa = NULL )"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMFixed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data from a State Space Model (Fixed Parameters) — SimSSMFixed","text":"n Positive integer. Number individuals. time Positive integer. Number time points. delta_t Numeric. Time interval. default value 1.0 option use numeric value discretized state space model parameterization linear stochastic differential equation model. mu0 Numeric vector. Mean initial latent variable values (\\(\\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0}\\)). sigma0_l Numeric matrix. Cholesky factorization (t(chol(sigma0))) covariance matrix initial latent variable values (\\(\\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0}\\)). alpha Numeric vector. Vector constant values dynamic model (\\(\\boldsymbol{\\alpha}\\)). beta Numeric matrix. Transition matrix relating values latent variables previous current time point (\\(\\boldsymbol{\\beta}\\)). psi_l Numeric matrix. Cholesky factorization (t(chol(psi))) covariance matrix process noise (\\(\\boldsymbol{\\Psi}\\)). nu Numeric vector. Vector intercept values measurement model (\\(\\boldsymbol{\\nu}\\)). lambda Numeric matrix. Factor loading matrix linking latent variables observed variables (\\(\\boldsymbol{\\Lambda}\\)). theta_l Numeric matrix. Cholesky factorization (t(chol(theta))) covariance matrix measurement error (\\(\\boldsymbol{\\Theta}\\)). type Integer. State space model type. See Details information. x List. element list matrix covariates individual n. number columns matrix equal time. gamma Numeric matrix. Matrix linking covariates latent variables current time point (\\(\\boldsymbol{\\Gamma}\\)). kappa Numeric matrix. Matrix linking covariates observed variables current time point (\\(\\boldsymbol{\\kappa}\\)).","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMFixed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data from a State Space Model (Fixed Parameters) — SimSSMFixed","text":"Returns object class simstatespace list following elements: call: Function call. args: Function arguments. data: Generated data list length n. element data list following elements: id: vector ID numbers length l, l value function argument time. time: vector time points length l. y: l k matrix values manifest variables. eta: l p matrix values latent variables. x: l j matrix values covariates (covariates included). fun: Function used.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMFixed.html","id":"type-","dir":"Reference","previous_headings":"","what":"Type 0","title":"Simulate Data from a State Space Model (Fixed Parameters) — SimSSMFixed","text":"measurement model given $$     \\mathbf{y}_{, t}     =     \\boldsymbol{\\nu}     +     \\boldsymbol{\\Lambda}     \\boldsymbol{\\eta}_{, t}     +     \\boldsymbol{\\varepsilon}_{, t},     \\quad     \\mathrm{}     \\quad     \\boldsymbol{\\varepsilon}_{, t}     \\sim     \\mathcal{N}     \\left(     \\mathbf{0},     \\boldsymbol{\\Theta}     \\right)   $$ \\(\\mathbf{y}_{, t}\\), \\(\\boldsymbol{\\eta}_{, t}\\), \\(\\boldsymbol{\\varepsilon}_{, t}\\) random variables \\(\\boldsymbol{\\nu}\\), \\(\\boldsymbol{\\Lambda}\\), \\(\\boldsymbol{\\Theta}\\) model parameters. \\(\\mathbf{y}_{, t}\\) represents vector observed random variables, \\(\\boldsymbol{\\eta}_{, t}\\) vector latent random variables, \\(\\boldsymbol{\\varepsilon}_{, t}\\) vector random measurement errors, time \\(t\\) individual \\(\\). \\(\\boldsymbol{\\nu}\\) denotes vector intercepts, \\(\\boldsymbol{\\Lambda}\\) matrix factor loadings, \\(\\boldsymbol{\\Theta}\\) covariance matrix \\(\\boldsymbol{\\varepsilon}\\). alternative representation measurement error given $$     \\boldsymbol{\\varepsilon}_{, t}     =     \\boldsymbol{\\Theta}^{\\frac{1}{2}}     \\mathbf{z}_{, t},     \\quad     \\mathrm{}     \\quad     \\mathbf{z}_{, t}     \\sim     \\mathcal{N}     \\left(     \\mathbf{0},     \\mathbf{}     \\right)   $$ \\(\\mathbf{z}_{, t}\\) vector independent standard normal random variables \\(     \\left( \\boldsymbol{\\Theta}^{\\frac{1}{2}} \\right)     \\left( \\boldsymbol{\\Theta}^{\\frac{1}{2}} \\right)^{\\prime}     =     \\boldsymbol{\\Theta} .   \\) dynamic structure given $$     \\boldsymbol{\\eta}_{, t}     =     \\boldsymbol{\\alpha}     +     \\boldsymbol{\\beta}     \\boldsymbol{\\eta}_{, t - 1}     +     \\boldsymbol{\\zeta}_{, t},     \\quad     \\mathrm{}     \\quad     \\boldsymbol{\\zeta}_{, t}     \\sim     \\mathcal{N}     \\left(     \\mathbf{0},     \\boldsymbol{\\Psi}     \\right)   $$ \\(\\boldsymbol{\\eta}_{, t}\\), \\(\\boldsymbol{\\eta}_{, t - 1}\\), \\(\\boldsymbol{\\zeta}_{, t}\\) random variables, \\(\\boldsymbol{\\alpha}\\), \\(\\boldsymbol{\\beta}\\), \\(\\boldsymbol{\\Psi}\\) model parameters. , \\(\\boldsymbol{\\eta}_{, t}\\) vector latent variables time \\(t\\) individual \\(\\), \\(\\boldsymbol{\\eta}_{, t - 1}\\) represents vector latent variables time \\(t - 1\\) individual \\(\\), \\(\\boldsymbol{\\zeta}_{, t}\\) represents vector dynamic noise time \\(t\\) individual \\(\\). \\(\\boldsymbol{\\alpha}\\) denotes vector intercepts, \\(\\boldsymbol{\\beta}\\) matrix autoregression cross regression coefficients, \\(\\boldsymbol{\\Psi}\\) covariance matrix \\(\\boldsymbol{\\zeta}_{, t}\\). alternative representation dynamic noise given $$     \\boldsymbol{\\zeta}_{, t}     =     \\boldsymbol{\\Psi}^{\\frac{1}{2}}     \\mathbf{z}_{, t},     \\quad     \\mathrm{}     \\quad     \\mathbf{z}_{, t}     \\sim     \\mathcal{N}     \\left(     \\mathbf{0},     \\mathbf{}     \\right)   $$ \\(     \\left( \\boldsymbol{\\Psi}^{\\frac{1}{2}} \\right)     \\left( \\boldsymbol{\\Psi}^{\\frac{1}{2}} \\right)^{\\prime}     =     \\boldsymbol{\\Psi} .   \\)","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMFixed.html","id":"type--1","dir":"Reference","previous_headings":"","what":"Type 1","title":"Simulate Data from a State Space Model (Fixed Parameters) — SimSSMFixed","text":"measurement model given $$     \\mathbf{y}_{, t}     =     \\boldsymbol{\\nu}     +     \\boldsymbol{\\Lambda}     \\boldsymbol{\\eta}_{, t}     +     \\boldsymbol{\\varepsilon}_{, t},     \\quad     \\mathrm{}     \\quad     \\boldsymbol{\\varepsilon}_{, t}     \\sim     \\mathcal{N}     \\left(     \\mathbf{0},     \\boldsymbol{\\Theta}     \\right) .   $$ dynamic structure given $$     \\boldsymbol{\\eta}_{, t}     =     \\boldsymbol{\\alpha}     +     \\boldsymbol{\\beta}     \\boldsymbol{\\eta}_{, t - 1}     +     \\boldsymbol{\\Gamma}     \\mathbf{x}_{, t}     +     \\boldsymbol{\\zeta}_{, t},     \\quad     \\mathrm{}     \\quad     \\boldsymbol{\\zeta}_{, t}     \\sim     \\mathcal{N}     \\left(     \\mathbf{0},     \\boldsymbol{\\Psi}     \\right)   $$ \\(\\mathbf{x}_{, t}\\) represents vector covariates time \\(t\\) individual \\(\\), \\(\\boldsymbol{\\Gamma}\\) coefficient matrix linking covariates latent variables.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMFixed.html","id":"type--2","dir":"Reference","previous_headings":"","what":"Type 2","title":"Simulate Data from a State Space Model (Fixed Parameters) — SimSSMFixed","text":"measurement model given $$     \\mathbf{y}_{, t}     =     \\boldsymbol{\\nu}     +     \\boldsymbol{\\Lambda}     \\boldsymbol{\\eta}_{, t}     +     \\boldsymbol{\\kappa}     \\mathbf{x}_{, t}     +     \\boldsymbol{\\varepsilon}_{, t},     \\quad     \\mathrm{}     \\quad     \\boldsymbol{\\varepsilon}_{, t}     \\sim     \\mathcal{N}     \\left(     \\mathbf{0},     \\boldsymbol{\\Theta}     \\right)   $$ \\(\\boldsymbol{\\kappa}\\) represents coefficient matrix linking covariates observed variables. dynamic structure given $$     \\boldsymbol{\\eta}_{, t}     =     \\boldsymbol{\\alpha}     +     \\boldsymbol{\\beta}     \\boldsymbol{\\eta}_{, t - 1}     +     \\boldsymbol{\\Gamma}     \\mathbf{x}_{, t}     +     \\boldsymbol{\\zeta}_{, t},     \\quad     \\mathrm{}     \\quad     \\boldsymbol{\\zeta}_{, t}     \\sim     \\mathcal{N}     \\left(     \\mathbf{0},     \\boldsymbol{\\Psi}     \\right) .   $$","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMFixed.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate Data from a State Space Model (Fixed Parameters) — SimSSMFixed","text":"Chow, S.-M., Ho, M. R., Hamaker, E. L., & Dolan, C. V. (2010). Equivalence differences structural equation modeling state-space modeling techniques. Structural Equation Modeling: Multidisciplinary Journal, 17(2), 303–332. doi:10.1080/10705511003661553","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMFixed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate Data from a State Space Model (Fixed Parameters) — SimSSMFixed","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMFixed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Data from a State Space Model (Fixed Parameters) — SimSSMFixed","text":"","code":"# prepare parameters set.seed(42) ## number of individuals n <- 5 ## time points time <- 50 ## dynamic structure p <- 3 mu0 <- rep(x = 0, times = p) sigma0 <- 0.001 * diag(p) sigma0_l <- t(chol(sigma0)) alpha <- rep(x = 0, times = p) beta <- 0.50 * diag(p) psi <- 0.001 * diag(p) psi_l <- t(chol(psi)) ## measurement model k <- 3 nu <- rep(x = 0, times = k) lambda <- diag(k) theta <- 0.001 * diag(k) theta_l <- t(chol(theta)) ## covariates j <- 2 x <- lapply(   X = seq_len(n),   FUN = function(i) {     matrix(       data = stats::rnorm(n = time * j),       nrow = j,       ncol = time     )   } ) gamma <- diag(x = 0.10, nrow = p, ncol = j) kappa <- diag(x = 0.10, nrow = k, ncol = j)  # Type 0 ssm <- SimSSMFixed(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 0 )  plot(ssm)     # Type 1 ssm <- SimSSMFixed(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 1,   x = x,   gamma = gamma )  plot(ssm)     # Type 2 ssm <- SimSSMFixed(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 2,   x = x,   gamma = gamma,   kappa = kappa )  plot(ssm)"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMIVary.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data from a State Space Model (Individual-Varying Parameters) — SimSSMIVary","title":"Simulate Data from a State Space Model (Individual-Varying Parameters) — SimSSMIVary","text":"function simulates data using state space model. assumes parameters can vary across individuals.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMIVary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data from a State Space Model (Individual-Varying Parameters) — SimSSMIVary","text":"","code":"SimSSMIVary(   n,   time,   delta_t = 1,   mu0,   sigma0_l,   alpha,   beta,   psi_l,   nu,   lambda,   theta_l,   type = 0,   x = NULL,   gamma = NULL,   kappa = NULL )"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMIVary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data from a State Space Model (Individual-Varying Parameters) — SimSSMIVary","text":"n Positive integer. Number individuals. time Positive integer. Number time points. delta_t Numeric. Time interval. default value 1.0 option use numeric value discretized state space model parameterization linear stochastic differential equation model. mu0 List numeric vectors. element list mean initial latent variable values (\\(\\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0}\\)). sigma0_l List numeric matrices. element list Cholesky factorization (t(chol(sigma0))) covariance matrix initial latent variable values (\\(\\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0}\\)). alpha List numeric vectors. element list vector constant values dynamic model (\\(\\boldsymbol{\\alpha}\\)). beta List numeric matrices. element list transition matrix relating values latent variables previous current time point (\\(\\boldsymbol{\\beta}\\)). psi_l List numeric matrices. element list Cholesky factorization (t(chol(psi))) covariance matrix process noise (\\(\\boldsymbol{\\Psi}\\)). nu List numeric vectors. element list vector intercept values measurement model (\\(\\boldsymbol{\\nu}\\)). lambda List numeric matrices. element list factor loading matrix linking latent variables observed variables (\\(\\boldsymbol{\\Lambda}\\)). theta_l List numeric matrices. element list Cholesky factorization (t(chol(theta))) covariance matrix measurement error (\\(\\boldsymbol{\\Theta}\\)). type Integer. State space model type. See Details SimSSMFixed() information. x List. element list matrix covariates individual n. number columns matrix equal time. gamma List numeric matrices. element list matrix linking covariates latent variables current time point (\\(\\boldsymbol{\\Gamma}\\)). kappa List numeric matrices. element list matrix linking covariates observed variables current time point (\\(\\boldsymbol{\\kappa}\\)).","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMIVary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data from a State Space Model (Individual-Varying Parameters) — SimSSMIVary","text":"Returns object class simstatespace list following elements: call: Function call. args: Function arguments. data: Generated data list length n. element data list following elements: id: vector ID numbers length l, l value function argument time. time: vector time points length l. y: l k matrix values manifest variables. eta: l p matrix values latent variables. x: l j matrix values covariates (covariates included). fun: Function used.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMIVary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Data from a State Space Model (Individual-Varying Parameters) — SimSSMIVary","text":"Parameters can vary across individuals providing list parameter values. length parameters (mu0, sigma0_l, alpha, beta, psi_l, nu, lambda, theta_l, gamma, kappa) less n, function cycle available values.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMIVary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate Data from a State Space Model (Individual-Varying Parameters) — SimSSMIVary","text":"Chow, S.-M., Ho, M. R., Hamaker, E. L., & Dolan, C. V. (2010). Equivalence differences structural equation modeling state-space modeling techniques. Structural Equation Modeling: Multidisciplinary Journal, 17(2), 303–332. doi:10.1080/10705511003661553","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMIVary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate Data from a State Space Model (Individual-Varying Parameters) — SimSSMIVary","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMIVary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Data from a State Space Model (Individual-Varying Parameters) — SimSSMIVary","text":"","code":"# prepare parameters # In this example, beta varies across individuals. set.seed(42) ## number of individuals n <- 5 ## time points time <- 50 ## dynamic structure p <- 3 mu0 <- list(   rep(x = 0, times = p) ) sigma0 <- 0.001 * diag(p) sigma0_l <- list(   t(chol(sigma0)) ) alpha <- list(   rep(x = 0, times = p) ) beta <- list(   0.1 * diag(p),   0.2 * diag(p),   0.3 * diag(p),   0.4 * diag(p),   0.5 * diag(p) ) psi <- 0.001 * diag(p) psi_l <- list(   t(chol(psi)) ) ## measurement model k <- 3 nu <- list(   rep(x = 0, times = k) ) lambda <- list(   diag(k) ) theta <- 0.001 * diag(k) theta_l <- list(   t(chol(theta)) ) ## covariates j <- 2 x <- lapply(   X = seq_len(n),   FUN = function(i) {     matrix(       data = stats::rnorm(n = time * j),       nrow = j,       ncol = time     )   } ) gamma <- list(   diag(x = 0.10, nrow = p, ncol = j) ) kappa <- list(   diag(x = 0.10, nrow = k, ncol = j) )  # Type 0 ssm <- SimSSMIVary(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 0 )  plot(ssm)     # Type 1 ssm <- SimSSMIVary(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 1,   x = x,   gamma = gamma )  plot(ssm)     # Type 2 ssm <- SimSSMIVary(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 2,   x = x,   gamma = gamma,   kappa = kappa )  plot(ssm)"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinGrowth.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data from the Linear Growth Curve Model — SimSSMLinGrowth","title":"Simulate Data from the Linear Growth Curve Model — SimSSMLinGrowth","text":"function simulates data linear growth curve model.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinGrowth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data from the Linear Growth Curve Model — SimSSMLinGrowth","text":"","code":"SimSSMLinGrowth(   n,   time,   mu0,   sigma0_l,   theta_l,   type = 0,   x = NULL,   gamma = NULL,   kappa = NULL )"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinGrowth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data from the Linear Growth Curve Model — SimSSMLinGrowth","text":"n Positive integer. Number individuals. time Positive integer. Number time points. mu0 Numeric vector. vector length two. first element mean intercept, second element mean slope. sigma0_l Numeric matrix. Cholesky factorization (t(chol(sigma0))) covariance matrix intercept slope. theta_l Numeric. Square root common measurement error variance. type Integer. State space model type. See Details information. x List. element list matrix covariates individual n. number columns matrix equal time. gamma Numeric matrix. Matrix linking covariates latent variables current time point (\\(\\boldsymbol{\\Gamma}\\)). kappa Numeric matrix. Matrix linking covariates observed variables current time point (\\(\\boldsymbol{\\kappa}\\)).","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinGrowth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data from the Linear Growth Curve Model — SimSSMLinGrowth","text":"Returns object class simstatespace list following elements: call: Function call. args: Function arguments. data: Generated data list length n. element data list following elements: id: vector ID numbers length l, l value function argument time. time: vector time points length l. y: l k matrix values manifest variables. eta: l p matrix values latent variables. x: l j matrix values covariates (covariates included). fun: Function used.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinGrowth.html","id":"type-","dir":"Reference","previous_headings":"","what":"Type 0","title":"Simulate Data from the Linear Growth Curve Model — SimSSMLinGrowth","text":"measurement model given $$     Y_{, t}     =     \\left(     \\begin{array}{cc}       1 & 0 \\\\     \\end{array}     \\right)     \\left(     \\begin{array}{c}       \\eta_{0_{, t}} \\\\       \\eta_{1_{, t}} \\\\     \\end{array}     \\right)     +     \\boldsymbol{\\varepsilon}_{, t},     \\quad     \\mathrm{}     \\quad     \\boldsymbol{\\varepsilon}_{, t}     \\sim     \\mathcal{N}     \\left(     0,     \\theta     \\right)   $$ \\(Y_{, t}\\), \\(\\eta_{0_{, t}}\\), \\(\\eta_{1_{, t}}\\), \\(\\boldsymbol{\\varepsilon}_{, t}\\) random variables \\(\\theta\\) model parameter. \\(Y_{, t}\\) observed random variable time \\(t\\) individual \\(\\), \\(\\eta_{0_{, t}}\\) (intercept) \\(\\eta_{1_{, t}}\\) (slope) form vector latent random variables time \\(t\\) individual \\(\\), \\(\\boldsymbol{\\varepsilon}_{, t}\\) vector random measurement errors time \\(t\\) individual \\(\\). \\(\\theta\\) variance \\(\\boldsymbol{\\varepsilon}\\). dynamic structure given $$     \\left(     \\begin{array}{c}     \\eta_{0_{, t}} \\\\     \\eta_{1_{, t}} \\\\     \\end{array}     \\right)     =     \\left(     \\begin{array}{cc}       1 & 1 \\\\       0 & 1 \\\\     \\end{array}     \\right)     \\left(     \\begin{array}{c}     \\eta_{0_{, t - 1}} \\\\     \\eta_{1_{, t - 1}} \\\\     \\end{array}     \\right) .   $$ mean vector covariance matrix intercept slope captured mean vector covariance matrix initial condition given $$     \\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0}     =     \\left(     \\begin{array}{c}       \\mu_{\\eta_{0}} \\\\       \\mu_{\\eta_{1}} \\\\     \\end{array}     \\right) \\quad \\mathrm{,}   $$ $$     \\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0}     =     \\left(     \\begin{array}{cc}       \\sigma^{2}_{\\eta_{0}} &       \\sigma_{\\eta_{0}, \\eta_{1}} \\\\       \\sigma_{\\eta_{1}, \\eta_{0}} &       \\sigma^{2}_{\\eta_{1}} \\\\     \\end{array}     \\right) .   $$","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinGrowth.html","id":"type--1","dir":"Reference","previous_headings":"","what":"Type 1","title":"Simulate Data from the Linear Growth Curve Model — SimSSMLinGrowth","text":"measurement model given $$     Y_{, t}     =     \\left(     \\begin{array}{cc}       1 & 0 \\\\     \\end{array}     \\right)     \\left(     \\begin{array}{c}       \\eta_{0_{, t}} \\\\       \\eta_{1_{, t}} \\\\     \\end{array}     \\right)     +     \\boldsymbol{\\varepsilon}_{, t},     \\quad     \\mathrm{}     \\quad     \\boldsymbol{\\varepsilon}_{, t}     \\sim     \\mathcal{N}     \\left(     0,     \\theta     \\right) .   $$ dynamic structure given $$     \\left(     \\begin{array}{c}     \\eta_{0_{, t}} \\\\     \\eta_{1_{, t}} \\\\     \\end{array}     \\right)     =     \\left(     \\begin{array}{cc}       1 & 1 \\\\       0 & 1 \\\\     \\end{array}     \\right)     \\left(     \\begin{array}{c}     \\eta_{0_{, t - 1}} \\\\     \\eta_{1_{, t - 1}} \\\\     \\end{array}     \\right)     +     \\boldsymbol{\\Gamma}     \\mathbf{x}_{, t}   $$ \\(\\mathbf{x}_{, t}\\) represents vector covariates time \\(t\\) individual \\(\\), \\(\\boldsymbol{\\Gamma}\\) coefficient matrix linking covariates latent variables.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinGrowth.html","id":"type--2","dir":"Reference","previous_headings":"","what":"Type 2","title":"Simulate Data from the Linear Growth Curve Model — SimSSMLinGrowth","text":"measurement model given $$     Y_{, t}     =     \\left(     \\begin{array}{cc}       1 & 0 \\\\     \\end{array}     \\right)     \\left(     \\begin{array}{c}       \\eta_{0_{, t}} \\\\       \\eta_{1_{, t}} \\\\     \\end{array}     \\right)     +     \\boldsymbol{\\kappa}     \\mathbf{x}_{, t}     +     \\boldsymbol{\\varepsilon}_{, t},     \\quad     \\mathrm{}     \\quad     \\boldsymbol{\\varepsilon}_{, t}     \\sim     \\mathcal{N}     \\left(     0,     \\theta     \\right)   $$ \\(\\boldsymbol{\\kappa}\\) represents coefficient matrix linking covariates observed variables. dynamic structure given $$     \\left(     \\begin{array}{c}     \\eta_{0_{, t}} \\\\     \\eta_{1_{, t}} \\\\     \\end{array}     \\right)     =     \\left(     \\begin{array}{cc}       1 & 1 \\\\       0 & 1 \\\\     \\end{array}     \\right)     \\left(     \\begin{array}{c}     \\eta_{0_{, t - 1}} \\\\     \\eta_{1_{, t - 1}} \\\\     \\end{array}     \\right)     +     \\boldsymbol{\\Gamma}     \\mathbf{x}_{, t} .   $$","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinGrowth.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate Data from the Linear Growth Curve Model — SimSSMLinGrowth","text":"Chow, S.-M., Ho, M. R., Hamaker, E. L., & Dolan, C. V. (2010). Equivalence differences structural equation modeling state-space modeling techniques. Structural Equation Modeling: Multidisciplinary Journal, 17(2), 303–332. doi:10.1080/10705511003661553","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinGrowth.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate Data from the Linear Growth Curve Model — SimSSMLinGrowth","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinGrowth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Data from the Linear Growth Curve Model — SimSSMLinGrowth","text":"","code":"# prepare parameters set.seed(42) ## number of individuals n <- 5 ## time points time <- 5 ## dynamic structure p <- 2 mu0 <- c(0.615, 1.006) sigma0 <- matrix(   data = c(     1.932,     0.618,     0.618,     0.587   ),   nrow = p ) sigma0_l <- t(chol(sigma0)) ## measurement model k <- 1 theta <- 0.50 theta_l <- sqrt(theta) ## covariates j <- 2 x <- lapply(   X = seq_len(n),   FUN = function(i) {     return(       matrix(         data = rnorm(n = j * time),         nrow = j       )     )   } ) gamma <- diag(x = 0.10, nrow = p, ncol = j) kappa <- diag(x = 0.10, nrow = k, ncol = j)  # Type 0 ssm <- SimSSMLinGrowth(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   theta_l = theta_l,   type = 0 )  plot(ssm)   # Type 1 ssm <- SimSSMLinGrowth(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   theta_l = theta_l,   type = 1,   x = x,   gamma = gamma )  plot(ssm)   # Type 2 ssm <- SimSSMLinGrowth(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   theta_l = theta_l,   type = 2,   x = x,   gamma = gamma,   kappa = kappa )  plot(ssm)"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinGrowthIVary.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data from the Linear Growth Curve Model (Individual-Varying Parameters) — SimSSMLinGrowthIVary","title":"Simulate Data from the Linear Growth Curve Model (Individual-Varying Parameters) — SimSSMLinGrowthIVary","text":"function simulates data linear growth curve model. assumes parameters can vary across individuals.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinGrowthIVary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data from the Linear Growth Curve Model (Individual-Varying Parameters) — SimSSMLinGrowthIVary","text":"","code":"SimSSMLinGrowthIVary(   n,   time,   mu0,   sigma0_l,   theta_l,   type = 0,   x = NULL,   gamma = NULL,   kappa = NULL )"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinGrowthIVary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data from the Linear Growth Curve Model (Individual-Varying Parameters) — SimSSMLinGrowthIVary","text":"n Positive integer. Number individuals. time Positive integer. Number time points. mu0 list numeric vectors. element list vector length two. first element mean intercept, second element mean slope. sigma0_l list numeric matrices. element list Cholesky factorization (t(chol(sigma0))) covariance matrix intercept slope. theta_l list numeric values. element list square root common measurement error variance. type Integer. State space model type. See Details SimSSMLinGrowth() information. x List. element list matrix covariates individual n. number columns matrix equal time. gamma List numeric matrices. element list matrix linking covariates latent variables current time point (\\(\\boldsymbol{\\Gamma}\\)). kappa List numeric matrices. element list matrix linking covariates observed variables current time point (\\(\\boldsymbol{\\kappa}\\)).","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinGrowthIVary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data from the Linear Growth Curve Model (Individual-Varying Parameters) — SimSSMLinGrowthIVary","text":"Returns object class simstatespace list following elements: call: Function call. args: Function arguments. data: Generated data list length n. element data list following elements: id: vector ID numbers length l, l value function argument time. time: vector time points length l. y: l k matrix values manifest variables. eta: l p matrix values latent variables. x: l j matrix values covariates (covariates included). fun: Function used.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinGrowthIVary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Data from the Linear Growth Curve Model (Individual-Varying Parameters) — SimSSMLinGrowthIVary","text":"Parameters can vary across individuals providing list parameter values. length parameters (mu0, sigma0, mu, theta_l, gamma, kappa) less n, function cycle available values.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinGrowthIVary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate Data from the Linear Growth Curve Model (Individual-Varying Parameters) — SimSSMLinGrowthIVary","text":"Chow, S.-M., Ho, M. R., Hamaker, E. L., & Dolan, C. V. (2010). Equivalence differences structural equation modeling state-space modeling techniques. Structural Equation Modeling: Multidisciplinary Journal, 17(2), 303–332. doi:10.1080/10705511003661553","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinGrowthIVary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate Data from the Linear Growth Curve Model (Individual-Varying Parameters) — SimSSMLinGrowthIVary","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinGrowthIVary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Data from the Linear Growth Curve Model (Individual-Varying Parameters) — SimSSMLinGrowthIVary","text":"","code":"# prepare parameters # In this example, the mean vector of the intercept and slope vary. # Specifically, # there are two sets of values representing two latent classes. set.seed(42) ## number of individuals n <- 10 ## time points time <- 5 ## dynamic structure p <- 2 mu0_1 <- c(0.615, 1.006) # lower starting point, higher growth mu0_2 <- c(1.000, 0.500) # higher starting point, lower growth mu0 <- list(mu0_1, mu0_2) sigma0 <- matrix(   data = c(     1.932,     0.618,     0.618,     0.587   ),   nrow = p ) sigma0_l <- list(t(chol(sigma0))) ## measurement model k <- 1 theta <- 0.50 theta_l <- list(sqrt(theta)) ## covariates j <- 2 x <- lapply(   X = seq_len(n),   FUN = function(i) {     matrix(       data = stats::rnorm(n = time * j),       nrow = j,       ncol = time     )   } ) gamma <- list(   diag(x = 0.10, nrow = p, ncol = j) ) kappa <- list(   diag(x = 0.10, nrow = k, ncol = j) )  # Type 0 ssm <- SimSSMLinGrowthIVary(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   theta_l = theta_l,   type = 0 )  plot(ssm)   # Type 1 ssm <- SimSSMLinGrowthIVary(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   theta_l = theta_l,   type = 1,   x = x,   gamma = gamma )  plot(ssm)   # Type 2 ssm <- SimSSMLinGrowthIVary(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   theta_l = theta_l,   type = 2,   x = x,   gamma = gamma,   kappa = kappa )  plot(ssm)"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinSDEFixed.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data from the Linear Stochastic Differential Equation Model using a State Space Model Parameterization (Fixed Parameters) — SimSSMLinSDEFixed","title":"Simulate Data from the Linear Stochastic Differential Equation Model using a State Space Model Parameterization (Fixed Parameters) — SimSSMLinSDEFixed","text":"function simulates data linear stochastic differential equation model using state space model parameterization. assumes parameters remain constant across individuals time.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinSDEFixed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data from the Linear Stochastic Differential Equation Model using a State Space Model Parameterization (Fixed Parameters) — SimSSMLinSDEFixed","text":"","code":"SimSSMLinSDEFixed(   n,   time,   delta_t = 1,   mu0,   sigma0_l,   iota,   phi,   sigma_l,   nu,   lambda,   theta_l,   type = 0,   x = NULL,   gamma = NULL,   kappa = NULL )"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinSDEFixed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data from the Linear Stochastic Differential Equation Model using a State Space Model Parameterization (Fixed Parameters) — SimSSMLinSDEFixed","text":"n Positive integer. Number individuals. time Positive integer. Number time points. delta_t Numeric. Time interval (\\(\\Delta_t\\)). mu0 Numeric vector. Mean initial latent variable values (\\(\\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0}\\)). sigma0_l Numeric matrix. Cholesky factorization (t(chol(sigma0))) covariance matrix initial latent variable values (\\(\\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0}\\)). iota Numeric vector. unobserved term constant time (\\(\\boldsymbol{\\iota}\\)). phi Numeric matrix. drift matrix represents rate change solution absence random fluctuations (\\(\\boldsymbol{\\Phi}\\)). sigma_l Numeric matrix. Cholesky factorization (t(chol(sigma))) covariance matrix volatility randomness process (\\(\\boldsymbol{\\Sigma}\\)). nu Numeric vector. Vector intercept values measurement model (\\(\\boldsymbol{\\nu}\\)). lambda Numeric matrix. Factor loading matrix linking latent variables observed variables (\\(\\boldsymbol{\\Lambda}\\)). theta_l Numeric matrix. Cholesky factorization (t(chol(theta))) covariance matrix measurement error (\\(\\boldsymbol{\\Theta}\\)). type Integer. State space model type. See Details information. x List. element list matrix covariates individual n. number columns matrix equal time. gamma Numeric matrix. Matrix linking covariates latent variables current time point (\\(\\boldsymbol{\\Gamma}\\)). kappa Numeric matrix. Matrix linking covariates observed variables current time point (\\(\\boldsymbol{\\kappa}\\)).","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinSDEFixed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data from the Linear Stochastic Differential Equation Model using a State Space Model Parameterization (Fixed Parameters) — SimSSMLinSDEFixed","text":"Returns object class simstatespace list following elements: call: Function call. args: Function arguments. data: Generated data list length n. element data list following elements: id: vector ID numbers length l, l value function argument time. time: vector time points length l. y: l k matrix values manifest variables. eta: l p matrix values latent variables. x: l j matrix values covariates (covariates included). fun: Function used.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinSDEFixed.html","id":"type-","dir":"Reference","previous_headings":"","what":"Type 0","title":"Simulate Data from the Linear Stochastic Differential Equation Model using a State Space Model Parameterization (Fixed Parameters) — SimSSMLinSDEFixed","text":"measurement model given $$     \\mathbf{y}_{, t}     =     \\boldsymbol{\\nu}     +     \\boldsymbol{\\Lambda}     \\boldsymbol{\\eta}_{, t}     +     \\boldsymbol{\\varepsilon}_{, t},     \\quad     \\mathrm{}     \\quad     \\boldsymbol{\\varepsilon}_{, t}     \\sim     \\mathcal{N}     \\left(     \\mathbf{0},     \\boldsymbol{\\Theta}     \\right)   $$ \\(\\mathbf{y}_{, t}\\), \\(\\boldsymbol{\\eta}_{, t}\\), \\(\\boldsymbol{\\varepsilon}_{, t}\\) random variables \\(\\boldsymbol{\\nu}\\), \\(\\boldsymbol{\\Lambda}\\), \\(\\boldsymbol{\\Theta}\\) model parameters. \\(\\mathbf{y}_{, t}\\) represents vector observed random variables, \\(\\boldsymbol{\\eta}_{, t}\\) vector latent random variables, \\(\\boldsymbol{\\varepsilon}_{, t}\\) vector random measurement errors, time \\(t\\) individual \\(\\). \\(\\boldsymbol{\\nu}\\) denotes vector intercepts, \\(\\boldsymbol{\\Lambda}\\) matrix factor loadings, \\(\\boldsymbol{\\Theta}\\) covariance matrix \\(\\boldsymbol{\\varepsilon}\\). alternative representation measurement error given $$     \\boldsymbol{\\varepsilon}_{, t}     =     \\boldsymbol{\\Theta}^{\\frac{1}{2}}     \\mathbf{z}_{, t},     \\quad     \\mathrm{}     \\quad     \\mathbf{z}_{, t}     \\sim     \\mathcal{N}     \\left(     \\mathbf{0},     \\mathbf{}     \\right)   $$ \\(\\mathbf{z}_{, t}\\) vector independent standard normal random variables \\(     \\left( \\boldsymbol{\\Theta}^{\\frac{1}{2}} \\right)     \\left( \\boldsymbol{\\Theta}^{\\frac{1}{2}} \\right)^{\\prime}     =     \\boldsymbol{\\Theta} .   \\) dynamic structure given $$     \\mathrm{d} \\boldsymbol{\\eta}_{, t}     =     \\left(     \\boldsymbol{\\iota}     +     \\boldsymbol{\\Phi}     \\boldsymbol{\\eta}_{, t}     \\right)     \\mathrm{d}t     +     \\boldsymbol{\\Sigma}^{\\frac{1}{2}}     \\mathrm{d}     \\mathbf{W}_{, t}   $$ \\(\\boldsymbol{\\iota}\\) term unobserved constant time, \\(\\boldsymbol{\\Phi}\\) drift matrix represents rate change solution absence random fluctuations, \\(\\boldsymbol{\\Sigma}\\) matrix volatility randomness process, \\(\\mathrm{d}\\boldsymbol{W}\\) Wiener process Brownian motion, represents random fluctuations.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinSDEFixed.html","id":"type--1","dir":"Reference","previous_headings":"","what":"Type 1","title":"Simulate Data from the Linear Stochastic Differential Equation Model using a State Space Model Parameterization (Fixed Parameters) — SimSSMLinSDEFixed","text":"measurement model given $$     \\mathbf{y}_{, t}     =     \\boldsymbol{\\nu}     +     \\boldsymbol{\\Lambda}     \\boldsymbol{\\eta}_{, t}     +     \\boldsymbol{\\varepsilon}_{, t},     \\quad     \\mathrm{}     \\quad     \\boldsymbol{\\varepsilon}_{, t}     \\sim     \\mathcal{N}     \\left(     \\mathbf{0},     \\boldsymbol{\\Theta}     \\right) .   $$ dynamic structure given $$     \\mathrm{d} \\boldsymbol{\\eta}_{, t}     =     \\left(     \\boldsymbol{\\iota}     +     \\boldsymbol{\\Phi}     \\boldsymbol{\\eta}_{, t}     \\right)     \\mathrm{d}t     +     \\boldsymbol{\\Gamma}     \\mathbf{x}_{, t}     +     \\boldsymbol{\\Sigma}^{\\frac{1}{2}}     \\mathrm{d}     \\mathbf{W}_{, t}   $$ \\(\\mathbf{x}_{, t}\\) represents vector covariates time \\(t\\) individual \\(\\), \\(\\boldsymbol{\\Gamma}\\) coefficient matrix linking covariates latent variables.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinSDEFixed.html","id":"type--2","dir":"Reference","previous_headings":"","what":"Type 2","title":"Simulate Data from the Linear Stochastic Differential Equation Model using a State Space Model Parameterization (Fixed Parameters) — SimSSMLinSDEFixed","text":"measurement model given $$     \\mathbf{y}_{, t}     =     \\boldsymbol{\\nu}     +     \\boldsymbol{\\Lambda}     \\boldsymbol{\\eta}_{, t}     +     \\boldsymbol{\\kappa}     \\mathbf{x}_{, t}     +     \\boldsymbol{\\varepsilon}_{, t},     \\quad     \\mathrm{}     \\quad     \\boldsymbol{\\varepsilon}_{, t}     \\sim     \\mathcal{N}     \\left(     \\mathbf{0},     \\boldsymbol{\\Theta}     \\right)   $$ \\(\\boldsymbol{\\kappa}\\) represents coefficient matrix linking covariates observed variables. dynamic structure given $$     \\mathrm{d} \\boldsymbol{\\eta}_{, t}     =     \\left(     \\boldsymbol{\\iota}     +     \\boldsymbol{\\Phi}     \\boldsymbol{\\eta}_{, t}     \\right)     \\mathrm{d}t     +     \\boldsymbol{\\Gamma}     \\mathbf{x}_{, t}     +     \\boldsymbol{\\Sigma}^{\\frac{1}{2}}     \\mathrm{d}     \\mathbf{W}_{, t} .   $$","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinSDEFixed.html","id":"state-space-parameterization","dir":"Reference","previous_headings":"","what":"State Space Parameterization","title":"Simulate Data from the Linear Stochastic Differential Equation Model using a State Space Model Parameterization (Fixed Parameters) — SimSSMLinSDEFixed","text":"state space parameters function linear stochastic differential equation model parameters given $$       \\boldsymbol{\\beta}_{\\Delta t_{{l_{}}}}       =       \\exp{         \\left(           \\Delta t           \\boldsymbol{\\Phi}         \\right)       }   $$ $$       \\boldsymbol{\\alpha}_{\\Delta t_{{l_{}}}}       =       \\boldsymbol{\\Phi}^{-1}       \\left(         \\boldsymbol{\\beta} - \\mathbf{}_{p}       \\right)       \\boldsymbol{\\iota}   $$ $$       \\mathrm{vec}       \\left(         \\boldsymbol{\\Psi}_{\\Delta t_{{l_{}}}}       \\right)       =       \\left[         \\left(           \\boldsymbol{\\Phi} \\otimes \\mathbf{}_{p}         \\right)         +         \\left(           \\mathbf{}_{p} \\otimes \\boldsymbol{\\Phi}         \\right)       \\right]       \\left[         \\exp         \\left(           \\left[             \\left(               \\boldsymbol{\\Phi} \\otimes \\mathbf{}_{p}             \\right)             +             \\left(               \\mathbf{}_{p} \\otimes \\boldsymbol{\\Phi}             \\right)           \\right]           \\Delta t         \\right)         -         \\mathbf{}_{p \\times p}       \\right]       \\mathrm{vec}       \\left(         \\boldsymbol{\\Sigma}       \\right)   $$ \\(p\\) number latent variables \\(\\Delta t\\) time interval.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinSDEFixed.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate Data from the Linear Stochastic Differential Equation Model using a State Space Model Parameterization (Fixed Parameters) — SimSSMLinSDEFixed","text":"Chow, S.-M., Ho, M. R., Hamaker, E. L., & Dolan, C. V. (2010). Equivalence differences structural equation modeling state-space modeling techniques. Structural Equation Modeling: Multidisciplinary Journal, 17(2), 303–332. doi:10.1080/10705511003661553 Chow, S.-M., Losardo, D., Park, J., & Molenaar, P. C. M. (2023). Continuous-time dynamic models: Connections structural equation models discrete-time models. R. H. Hoyle (Ed.), Handbook structural equation modeling (2nd ed.). Guilford Press. Harvey, . C. (1990). Forecasting, structural time series models Kalman filter. Cambridge University Press. doi:10.1017/cbo9781107049994","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinSDEFixed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate Data from the Linear Stochastic Differential Equation Model using a State Space Model Parameterization (Fixed Parameters) — SimSSMLinSDEFixed","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinSDEFixed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Data from the Linear Stochastic Differential Equation Model using a State Space Model Parameterization (Fixed Parameters) — SimSSMLinSDEFixed","text":"","code":"# prepare parameters set.seed(42) ## number of individuals n <- 5 ## time points time <- 50 delta_t <- 0.10 ## dynamic structure p <- 2 mu0 <- c(-3.0, 1.5) sigma0 <- 0.001 * diag(p) sigma0_l <- t(chol(sigma0)) iota <- c(0.317, 0.230) phi <- matrix(   data = c(     -0.10,     0.05,     0.05,     -0.10   ),   nrow = p ) sigma <- matrix(   data = c(     2.79,     0.06,     0.06,     3.27   ),   nrow = p ) sigma_l <- t(chol(sigma)) ## measurement model k <- 2 nu <- rep(x = 0, times = k) lambda <- diag(k) theta <- 0.001 * diag(k) theta_l <- t(chol(theta)) ## covariates j <- 2 x <- lapply(   X = seq_len(n),   FUN = function(i) {     matrix(       data = stats::rnorm(n = time * j),       nrow = j,       ncol = time     )   } ) gamma <- diag(x = 0.10, nrow = p, ncol = j) kappa <- diag(x = 0.10, nrow = k, ncol = j)  # Type 0 ssm <- SimSSMLinSDEFixed(   n = n,   time = time,   delta_t = delta_t,   mu0 = mu0,   sigma0_l = sigma0_l,   iota = iota,   phi = phi,   sigma_l = sigma_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 0 )  plot(ssm)    # Type 1 ssm <- SimSSMLinSDEFixed(   n = n,   time = time,   delta_t = delta_t,   mu0 = mu0,   sigma0_l = sigma0_l,   iota = iota,   phi = phi,   sigma_l = sigma_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 1,   x = x,   gamma = gamma )  plot(ssm)    # Type 2 ssm <- SimSSMLinSDEFixed(   n = n,   time = time,   delta_t = delta_t,   mu0 = mu0,   sigma0_l = sigma0_l,   iota = iota,   phi = phi,   sigma_l = sigma_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 2,   x = x,   gamma = gamma,   kappa = kappa )  plot(ssm)"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinSDEIVary.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data from the Linear Stochastic Differential Equation Model using a State Space Model Parameterization (Individual-Varying Parameters) — SimSSMLinSDEIVary","title":"Simulate Data from the Linear Stochastic Differential Equation Model using a State Space Model Parameterization (Individual-Varying Parameters) — SimSSMLinSDEIVary","text":"function simulates data linear stochastic differential equation model using state space model parameterization. assumes parameters can vary across individuals.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinSDEIVary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data from the Linear Stochastic Differential Equation Model using a State Space Model Parameterization (Individual-Varying Parameters) — SimSSMLinSDEIVary","text":"","code":"SimSSMLinSDEIVary(   n,   time,   delta_t = 1,   mu0,   sigma0_l,   iota,   phi,   sigma_l,   nu,   lambda,   theta_l,   type = 0,   x = NULL,   gamma = NULL,   kappa = NULL )"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinSDEIVary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data from the Linear Stochastic Differential Equation Model using a State Space Model Parameterization (Individual-Varying Parameters) — SimSSMLinSDEIVary","text":"n Positive integer. Number individuals. time Positive integer. Number time points. delta_t Numeric. Time interval. default value 1.0 option use numeric value discretized state space model parameterization linear stochastic differential equation model. mu0 List numeric vectors. element list mean initial latent variable values (\\(\\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0}\\)). sigma0_l List numeric matrices. element list Cholesky factorization (t(chol(sigma0))) covariance matrix initial latent variable values (\\(\\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0}\\)). iota List numeric vectors. element list unobserved term constant time (\\(\\boldsymbol{\\iota}\\)). phi List numeric matrix. element list drift matrix represents rate change solution absence random fluctuations (\\(\\boldsymbol{\\Phi}\\)). sigma_l List numeric matrix. element list Cholesky factorization (t(chol(sigma))) covariance matrix volatility randomness process \\(\\boldsymbol{\\Sigma}\\). nu List numeric vectors. element list vector intercept values measurement model (\\(\\boldsymbol{\\nu}\\)). lambda List numeric matrices. element list factor loading matrix linking latent variables observed variables (\\(\\boldsymbol{\\Lambda}\\)). theta_l List numeric matrices. element list Cholesky factorization (t(chol(theta))) covariance matrix measurement error (\\(\\boldsymbol{\\Theta}\\)). type Integer. State space model type. See Details SimSSMLinSDEFixed() information. x List. element list matrix covariates individual n. number columns matrix equal time. gamma List numeric matrices. element list matrix linking covariates latent variables current time point (\\(\\boldsymbol{\\Gamma}\\)). kappa List numeric matrices. element list matrix linking covariates observed variables current time point (\\(\\boldsymbol{\\kappa}\\)).","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinSDEIVary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data from the Linear Stochastic Differential Equation Model using a State Space Model Parameterization (Individual-Varying Parameters) — SimSSMLinSDEIVary","text":"Returns object class simstatespace list following elements: call: Function call. args: Function arguments. data: Generated data list length n. element data list following elements: id: vector ID numbers length l, l value function argument time. time: vector time points length l. y: l k matrix values manifest variables. eta: l p matrix values latent variables. x: l j matrix values covariates (covariates included). fun: Function used.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinSDEIVary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Data from the Linear Stochastic Differential Equation Model using a State Space Model Parameterization (Individual-Varying Parameters) — SimSSMLinSDEIVary","text":"Parameters can vary across individuals providing list parameter values. length parameters (mu0, sigma0_l, iota, phi, sigma_l, nu, lambda, theta_l, gamma, kappa) less n, function cycle available values.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinSDEIVary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate Data from the Linear Stochastic Differential Equation Model using a State Space Model Parameterization (Individual-Varying Parameters) — SimSSMLinSDEIVary","text":"Chow, S.-M., Ho, M. R., Hamaker, E. L., & Dolan, C. V. (2010). Equivalence differences structural equation modeling state-space modeling techniques. Structural Equation Modeling: Multidisciplinary Journal, 17(2), 303–332. doi:10.1080/10705511003661553 Chow, S.-M., Losardo, D., Park, J., & Molenaar, P. C. M. (2023). Continuous-time dynamic models: Connections structural equation models discrete-time models. R. H. Hoyle (Ed.), Handbook structural equation modeling (2nd ed.). Guilford Press. Harvey, . C. (1990). Forecasting, structural time series models Kalman filter. Cambridge University Press. doi:10.1017/cbo9781107049994","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinSDEIVary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate Data from the Linear Stochastic Differential Equation Model using a State Space Model Parameterization (Individual-Varying Parameters) — SimSSMLinSDEIVary","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMLinSDEIVary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Data from the Linear Stochastic Differential Equation Model using a State Space Model Parameterization (Individual-Varying Parameters) — SimSSMLinSDEIVary","text":"","code":"# prepare parameters # In this example, phi varies across individuals. set.seed(42) ## number of individuals n <- 5 ## time points time <- 50 delta_t <- 0.10 ## dynamic structure p <- 2 mu0 <- list(   c(-3.0, 1.5) ) sigma0 <- 0.001 * diag(p) sigma0_l <- list(   t(chol(sigma0)) ) iota <- list(   c(0.317, 0.230) ) phi <- list(   -0.1 * diag(p),   -0.2 * diag(p),   -0.3 * diag(p),   -0.4 * diag(p),   -0.5 * diag(p) ) sigma <- matrix(   data = c(     2.79,     0.06,     0.06,     3.27   ),   nrow = p ) sigma_l <- list(   t(chol(sigma)) ) ## measurement model k <- 2 nu <- list(   rep(x = 0, times = k) ) lambda <- list(   diag(k) ) theta <- 0.001 * diag(k) theta_l <- list(   t(chol(theta)) ) ## covariates j <- 2 x <- lapply(   X = seq_len(n),   FUN = function(i) {     matrix(       data = stats::rnorm(n = time * j),       nrow = j,       ncol = time     )   } ) gamma <- list(   diag(x = 0.10, nrow = p, ncol = j) ) kappa <- list(   diag(x = 0.10, nrow = k, ncol = j) )  # Type 0 ssm <- SimSSMLinSDEIVary(   n = n,   time = time,   delta_t = delta_t,   mu0 = mu0,   sigma0_l = sigma0_l,   iota = iota,   phi = phi,   sigma_l = sigma_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 0 )  plot(ssm)    # Type 1 ssm <- SimSSMLinSDEIVary(   n = n,   time = time,   delta_t = delta_t,   mu0 = mu0,   sigma0_l = sigma0_l,   iota = iota,   phi = phi,   sigma_l = sigma_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 1,   x = x,   gamma = gamma )  plot(ssm)    # Type 2 ssm <- SimSSMLinSDEIVary(   n = n,   time = time,   delta_t = delta_t,   mu0 = mu0,   sigma0_l = sigma0_l,   iota = iota,   phi = phi,   sigma_l = sigma_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 2,   x = x,   gamma = gamma,   kappa = kappa )  plot(ssm)"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMOUFixed.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data from the Ornstein–Uhlenbeck Model using a State Space Model Parameterization (Fixed Parameters) — SimSSMOUFixed","title":"Simulate Data from the Ornstein–Uhlenbeck Model using a State Space Model Parameterization (Fixed Parameters) — SimSSMOUFixed","text":"function simulates data Ornstein–Uhlenbeck (OU) model using state space model parameterization. assumes parameters remain constant across individuals time.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMOUFixed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data from the Ornstein–Uhlenbeck Model using a State Space Model Parameterization (Fixed Parameters) — SimSSMOUFixed","text":"","code":"SimSSMOUFixed(   n,   time,   delta_t = 1,   mu0,   sigma0_l,   mu,   phi,   sigma_l,   nu,   lambda,   theta_l,   type = 0,   x = NULL,   gamma = NULL,   kappa = NULL )"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMOUFixed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data from the Ornstein–Uhlenbeck Model using a State Space Model Parameterization (Fixed Parameters) — SimSSMOUFixed","text":"n Positive integer. Number individuals. time Positive integer. Number time points. delta_t Numeric. Time interval (\\(\\Delta_t\\)). mu0 Numeric vector. Mean initial latent variable values (\\(\\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0}\\)). sigma0_l Numeric matrix. Cholesky factorization (t(chol(sigma0))) covariance matrix initial latent variable values (\\(\\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0}\\)). mu Numeric vector. long-term mean equilibrium level (\\(\\boldsymbol{\\mu}\\)). phi Numeric matrix. drift matrix represents rate change solution absence random fluctuations (\\(\\boldsymbol{\\Phi}\\)). also represents rate mean reversion, determining quickly variable returns mean. sigma_l Numeric matrix. Cholesky factorization (t(chol(sigma))) covariance matrix volatility randomness process (\\(\\boldsymbol{\\Sigma}\\)). nu Numeric vector. Vector intercept values measurement model (\\(\\boldsymbol{\\nu}\\)). lambda Numeric matrix. Factor loading matrix linking latent variables observed variables (\\(\\boldsymbol{\\Lambda}\\)). theta_l Numeric matrix. Cholesky factorization (t(chol(theta))) covariance matrix measurement error (\\(\\boldsymbol{\\Theta}\\)). type Integer. State space model type. See Details information. x List. element list matrix covariates individual n. number columns matrix equal time. gamma Numeric matrix. Matrix linking covariates latent variables current time point (\\(\\boldsymbol{\\Gamma}\\)). kappa Numeric matrix. Matrix linking covariates observed variables current time point (\\(\\boldsymbol{\\kappa}\\)).","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMOUFixed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data from the Ornstein–Uhlenbeck Model using a State Space Model Parameterization (Fixed Parameters) — SimSSMOUFixed","text":"Returns object class simstatespace list following elements: call: Function call. args: Function arguments. data: Generated data list length n. element data list following elements: id: vector ID numbers length l, l value function argument time. time: vector time points length l. y: l k matrix values manifest variables. eta: l p matrix values latent variables. x: l j matrix values covariates (covariates included). fun: Function used.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMOUFixed.html","id":"type-","dir":"Reference","previous_headings":"","what":"Type 0","title":"Simulate Data from the Ornstein–Uhlenbeck Model using a State Space Model Parameterization (Fixed Parameters) — SimSSMOUFixed","text":"measurement model given $$     \\mathbf{y}_{, t}     =     \\boldsymbol{\\nu}     +     \\boldsymbol{\\Lambda}     \\boldsymbol{\\eta}_{, t}     +     \\boldsymbol{\\varepsilon}_{, t},     \\quad     \\mathrm{}     \\quad     \\boldsymbol{\\varepsilon}_{, t}     \\sim     \\mathcal{N}     \\left(     \\mathbf{0},     \\boldsymbol{\\Theta}     \\right)   $$ \\(\\mathbf{y}_{, t}\\), \\(\\boldsymbol{\\eta}_{, t}\\), \\(\\boldsymbol{\\varepsilon}_{, t}\\) random variables \\(\\boldsymbol{\\nu}\\), \\(\\boldsymbol{\\Lambda}\\), \\(\\boldsymbol{\\Theta}\\) model parameters. \\(\\mathbf{y}_{, t}\\) represents vector observed random variables, \\(\\boldsymbol{\\eta}_{, t}\\) vector latent random variables, \\(\\boldsymbol{\\varepsilon}_{, t}\\) vector random measurement errors, time \\(t\\) individual \\(\\). \\(\\boldsymbol{\\nu}\\) denotes vector intercepts, \\(\\boldsymbol{\\Lambda}\\) matrix factor loadings, \\(\\boldsymbol{\\Theta}\\) covariance matrix \\(\\boldsymbol{\\varepsilon}\\). alternative representation measurement error given $$     \\boldsymbol{\\varepsilon}_{, t}     =     \\boldsymbol{\\Theta}^{\\frac{1}{2}}     \\mathbf{z}_{, t},     \\quad     \\mathrm{}     \\quad     \\mathbf{z}_{, t}     \\sim     \\mathcal{N}     \\left(     \\mathbf{0},     \\mathbf{}     \\right)   $$ \\(\\mathbf{z}_{, t}\\) vector independent standard normal random variables \\(     \\left( \\boldsymbol{\\Theta}^{\\frac{1}{2}} \\right)     \\left( \\boldsymbol{\\Theta}^{\\frac{1}{2}} \\right)^{\\prime}     =     \\boldsymbol{\\Theta} .   \\) dynamic structure given $$     \\mathrm{d} \\boldsymbol{\\eta}_{, t}     =     \\boldsymbol{\\Phi}     \\left(     \\boldsymbol{\\eta}_{, t}     -     \\boldsymbol{\\mu}     \\right)     \\mathrm{d}t     +     \\boldsymbol{\\Sigma}^{\\frac{1}{2}}     \\mathrm{d}     \\mathbf{W}_{, t}   $$ \\(\\boldsymbol{\\mu}\\) long-term mean equilibrium level, \\(\\boldsymbol{\\Phi}\\) rate mean reversion, determining quickly variable returns mean, \\(\\boldsymbol{\\Sigma}\\) matrix volatility randomness process, \\(\\mathrm{d}\\boldsymbol{W}\\) Wiener process Brownian motion, represents random fluctuations.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMOUFixed.html","id":"type--1","dir":"Reference","previous_headings":"","what":"Type 1","title":"Simulate Data from the Ornstein–Uhlenbeck Model using a State Space Model Parameterization (Fixed Parameters) — SimSSMOUFixed","text":"measurement model given $$     \\mathbf{y}_{, t}     =     \\boldsymbol{\\nu}     +     \\boldsymbol{\\Lambda}     \\boldsymbol{\\eta}_{, t}     +     \\boldsymbol{\\varepsilon}_{, t},     \\quad     \\mathrm{}     \\quad     \\boldsymbol{\\varepsilon}_{, t}     \\sim     \\mathcal{N}     \\left(     \\mathbf{0},     \\boldsymbol{\\Theta}     \\right) .   $$ dynamic structure given $$     \\mathrm{d} \\boldsymbol{\\eta}_{, t}     =     \\boldsymbol{\\Phi}     \\left(     \\boldsymbol{\\eta}_{, t}     -     \\boldsymbol{\\mu}     \\right)     \\mathrm{d}t     +     \\boldsymbol{\\Gamma}     \\mathbf{x}_{, t}     +     \\boldsymbol{\\Sigma}^{\\frac{1}{2}}     \\mathrm{d}     \\mathbf{W}_{, t}   $$ \\(\\mathbf{x}_{, t}\\) represents vector covariates time \\(t\\) individual \\(\\), \\(\\boldsymbol{\\Gamma}\\) coefficient matrix linking covariates latent variables.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMOUFixed.html","id":"type--2","dir":"Reference","previous_headings":"","what":"Type 2","title":"Simulate Data from the Ornstein–Uhlenbeck Model using a State Space Model Parameterization (Fixed Parameters) — SimSSMOUFixed","text":"measurement model given $$     \\mathbf{y}_{, t}     =     \\boldsymbol{\\nu}     +     \\boldsymbol{\\Lambda}     \\boldsymbol{\\eta}_{, t}     +     \\boldsymbol{\\kappa}     \\mathbf{x}_{, t}     +     \\boldsymbol{\\varepsilon}_{, t},     \\quad     \\mathrm{}     \\quad     \\boldsymbol{\\varepsilon}_{, t}     \\sim     \\mathcal{N}     \\left(     \\mathbf{0},     \\boldsymbol{\\Theta}     \\right)   $$ \\(\\boldsymbol{\\kappa}\\) represents coefficient matrix linking covariates observed variables. dynamic structure given $$     \\mathrm{d} \\boldsymbol{\\eta}_{, t}     =     \\boldsymbol{\\Phi}     \\left(     \\boldsymbol{\\eta}_{, t}     -     \\boldsymbol{\\mu}     \\right)     \\mathrm{d}t     +     \\boldsymbol{\\Gamma}     \\mathbf{x}_{, t}     +     \\boldsymbol{\\Sigma}^{\\frac{1}{2}}     \\mathrm{d}     \\mathbf{W}_{, t} .   $$","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMOUFixed.html","id":"the-ou-model-as-a-linear-stochastic-differential-equation-model","dir":"Reference","previous_headings":"","what":"The OU model as a linear stochastic differential equation model","title":"Simulate Data from the Ornstein–Uhlenbeck Model using a State Space Model Parameterization (Fixed Parameters) — SimSSMOUFixed","text":"OU model first-order linear stochastic differential equation model form $$     \\mathrm{d} \\boldsymbol{\\eta}_{, t}     =     \\left(     \\boldsymbol{\\iota}     +     \\boldsymbol{\\Phi}     \\boldsymbol{\\eta}_{, t}     \\right)     \\mathrm{d}t     +     \\boldsymbol{\\Sigma}^{\\frac{1}{2}}     \\mathrm{d}     \\mathbf{W}_{, t}   $$ \\(\\boldsymbol{\\mu} = - \\boldsymbol{\\Phi}^{-1} \\boldsymbol{\\iota}\\) , equivalently \\(\\boldsymbol{\\iota} = - \\boldsymbol{\\Phi} \\boldsymbol{\\mu}\\).","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMOUFixed.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate Data from the Ornstein–Uhlenbeck Model using a State Space Model Parameterization (Fixed Parameters) — SimSSMOUFixed","text":"Chow, S.-M., Ho, M. R., Hamaker, E. L., & Dolan, C. V. (2010). Equivalence differences structural equation modeling state-space modeling techniques. Structural Equation Modeling: Multidisciplinary Journal, 17(2), 303–332. doi:10.1080/10705511003661553 Chow, S.-M., Losardo, D., Park, J., & Molenaar, P. C. M. (2023). Continuous-time dynamic models: Connections structural equation models discrete-time models. R. H. Hoyle (Ed.), Handbook structural equation modeling (2nd ed.). Guilford Press. Harvey, . C. (1990). Forecasting, structural time series models Kalman filter. Cambridge University Press. doi:10.1017/cbo9781107049994 Oravecz, Z., Tuerlinckx, F., & Vandekerckhove, J. (2011). hierarchical latent stochastic differential equation model affective dynamics. Psychological Methods, 16 (4), 468–490. doi:10.1037/a0024375 Uhlenbeck, G. E., & Ornstein, L. S. (1930). theory brownian motion. Physical Review, 36 (5), 823–841. doi:10.1103/physrev.36.823","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMOUFixed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate Data from the Ornstein–Uhlenbeck Model using a State Space Model Parameterization (Fixed Parameters) — SimSSMOUFixed","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMOUFixed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Data from the Ornstein–Uhlenbeck Model using a State Space Model Parameterization (Fixed Parameters) — SimSSMOUFixed","text":"","code":"# prepare parameters set.seed(42) ## number of individuals n <- 5 ## time points time <- 50 delta_t <- 0.10 ## dynamic structure p <- 2 mu0 <- c(-3.0, 1.5) sigma0 <- 0.001 * diag(p) sigma0_l <- t(chol(sigma0)) mu <- c(5.76, 5.18) phi <- matrix(   data = c(     -0.10,     0.05,     0.05,     -0.10   ),   nrow = p ) sigma <- matrix(   data = c(     2.79,     0.06,     0.06,     3.27   ),   nrow = p ) sigma_l <- t(chol(sigma)) ## measurement model k <- 2 nu <- rep(x = 0, times = k) lambda <- diag(k) theta <- 0.001 * diag(k) theta_l <- t(chol(theta)) ## covariates j <- 2 x <- lapply(   X = seq_len(n),   FUN = function(i) {     matrix(       data = stats::rnorm(n = time * j),       nrow = j,       ncol = time     )   } ) gamma <- diag(x = 0.10, nrow = p, ncol = j) kappa <- diag(x = 0.10, nrow = k, ncol = j)  # Type 0 ssm <- SimSSMOUFixed(   n = n,   time = time,   delta_t = delta_t,   mu0 = mu0,   sigma0_l = sigma0_l,   mu = mu,   phi = phi,   sigma_l = sigma_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 0 )  plot(ssm)    # Type 1 ssm <- SimSSMOUFixed(   n = n,   time = time,   delta_t = delta_t,   mu0 = mu0,   sigma0_l = sigma0_l,   mu = mu,   phi = phi,   sigma_l = sigma_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 1,   x = x,   gamma = gamma )  plot(ssm)    # Type 2 ssm <- SimSSMOUFixed(   n = n,   time = time,   delta_t = delta_t,   mu0 = mu0,   sigma0_l = sigma0_l,   mu = mu,   phi = phi,   sigma_l = sigma_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 2,   x = x,   gamma = gamma,   kappa = kappa )  plot(ssm)"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMOUIVary.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data from the Ornstein–Uhlenbeck Model using a State Space Model Parameterization (Individual-Varying Parameters) — SimSSMOUIVary","title":"Simulate Data from the Ornstein–Uhlenbeck Model using a State Space Model Parameterization (Individual-Varying Parameters) — SimSSMOUIVary","text":"function simulates data Ornstein–Uhlenbeck model using state space model parameterization. assumes parameters can vary across individuals.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMOUIVary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data from the Ornstein–Uhlenbeck Model using a State Space Model Parameterization (Individual-Varying Parameters) — SimSSMOUIVary","text":"","code":"SimSSMOUIVary(   n,   time,   delta_t = 1,   mu0,   sigma0_l,   mu,   phi,   sigma_l,   nu,   lambda,   theta_l,   type = 0,   x = NULL,   gamma = NULL,   kappa = NULL )"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMOUIVary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data from the Ornstein–Uhlenbeck Model using a State Space Model Parameterization (Individual-Varying Parameters) — SimSSMOUIVary","text":"n Positive integer. Number individuals. time Positive integer. Number time points. delta_t Numeric. Time interval. default value 1.0 option use numeric value discretized state space model parameterization linear stochastic differential equation model. mu0 List numeric vectors. element list mean initial latent variable values (\\(\\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0}\\)). sigma0_l List numeric matrices. element list Cholesky factorization (t(chol(sigma0))) covariance matrix initial latent variable values (\\(\\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0}\\)). mu List numeric vectors. element list long-term mean equilibrium level (\\(\\boldsymbol{\\mu}\\)). phi List numeric matrix. element list drift matrix represents rate change solution absence random fluctuations (\\(\\boldsymbol{\\Phi}\\)). also represents rate mean reversion, determining quickly variable returns mean. sigma_l List numeric matrix. element list Cholesky factorization (t(chol(sigma))) covariance matrix volatility randomness process \\(\\boldsymbol{\\Sigma}\\). nu List numeric vectors. element list vector intercept values measurement model (\\(\\boldsymbol{\\nu}\\)). lambda List numeric matrices. element list factor loading matrix linking latent variables observed variables (\\(\\boldsymbol{\\Lambda}\\)). theta_l List numeric matrices. element list Cholesky factorization (t(chol(theta))) covariance matrix measurement error (\\(\\boldsymbol{\\Theta}\\)). type Integer. State space model type. See Details SimSSMOUFixed() information. x List. element list matrix covariates individual n. number columns matrix equal time. gamma List numeric matrices. element list matrix linking covariates latent variables current time point (\\(\\boldsymbol{\\Gamma}\\)). kappa List numeric matrices. element list matrix linking covariates observed variables current time point (\\(\\boldsymbol{\\kappa}\\)).","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMOUIVary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data from the Ornstein–Uhlenbeck Model using a State Space Model Parameterization (Individual-Varying Parameters) — SimSSMOUIVary","text":"Returns object class simstatespace list following elements: call: Function call. args: Function arguments. data: Generated data list length n. element data list following elements: id: vector ID numbers length l, l value function argument time. time: vector time points length l. y: l k matrix values manifest variables. eta: l p matrix values latent variables. x: l j matrix values covariates (covariates included). fun: Function used.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMOUIVary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Data from the Ornstein–Uhlenbeck Model using a State Space Model Parameterization (Individual-Varying Parameters) — SimSSMOUIVary","text":"Parameters can vary across individuals providing list parameter values. length parameters (mu0, sigma0_l, mu, phi, sigma_l, nu, lambda, theta_l, gamma, kappa) less n, function cycle available values.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMOUIVary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate Data from the Ornstein–Uhlenbeck Model using a State Space Model Parameterization (Individual-Varying Parameters) — SimSSMOUIVary","text":"Chow, S.-M., Ho, M. R., Hamaker, E. L., & Dolan, C. V. (2010). Equivalence differences structural equation modeling state-space modeling techniques. Structural Equation Modeling: Multidisciplinary Journal, 17(2), 303–332. doi:10.1080/10705511003661553 Chow, S.-M., Losardo, D., Park, J., & Molenaar, P. C. M. (2023). Continuous-time dynamic models: Connections structural equation models discrete-time models. R. H. Hoyle (Ed.), Handbook structural equation modeling (2nd ed.). Guilford Press. Harvey, . C. (1990). Forecasting, structural time series models Kalman filter. Cambridge University Press. doi:10.1017/cbo9781107049994 Oravecz, Z., Tuerlinckx, F., & Vandekerckhove, J. (2011). hierarchical latent stochastic differential equation model affective dynamics. Psychological Methods, 16 (4), 468–490. doi:10.1037/a0024375 Uhlenbeck, G. E., & Ornstein, L. S. (1930). theory brownian motion. Physical Review, 36 (5), 823–841. doi:10.1103/physrev.36.823","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMOUIVary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate Data from the Ornstein–Uhlenbeck Model using a State Space Model Parameterization (Individual-Varying Parameters) — SimSSMOUIVary","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMOUIVary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Data from the Ornstein–Uhlenbeck Model using a State Space Model Parameterization (Individual-Varying Parameters) — SimSSMOUIVary","text":"","code":"# prepare parameters # In this example, phi varies across individuals. set.seed(42) ## number of individuals n <- 5 ## time points time <- 50 delta_t <- 0.10 ## dynamic structure p <- 2 mu0 <- list(   c(-3.0, 1.5) ) sigma0 <- 0.001 * diag(p) sigma0_l <- list(   t(chol(sigma0)) ) mu <- list(   c(5.76, 5.18) ) phi <- list(   -0.1 * diag(p),   -0.2 * diag(p),   -0.3 * diag(p),   -0.4 * diag(p),   -0.5 * diag(p) ) sigma <- matrix(   data = c(     2.79,     0.06,     0.06,     3.27   ),   nrow = p ) sigma_l <- list(   t(chol(sigma)) ) ## measurement model k <- 2 nu <- list(   rep(x = 0, times = k) ) lambda <- list(   diag(k) ) theta <- 0.001 * diag(k) theta_l <- list(   t(chol(theta)) ) ## covariates j <- 2 x <- lapply(   X = seq_len(n),   FUN = function(i) {     matrix(       data = stats::rnorm(n = time * j),       nrow = j,       ncol = time     )   } ) gamma <- list(   diag(x = 0.10, nrow = p, ncol = j) ) kappa <- list(   diag(x = 0.10, nrow = k, ncol = j) )  # Type 0 ssm <- SimSSMOUIVary(   n = n,   time = time,   delta_t = delta_t,   mu0 = mu0,   sigma0_l = sigma0_l,   mu = mu,   phi = phi,   sigma_l = sigma_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 0 )  plot(ssm)    # Type 1 ssm <- SimSSMOUIVary(   n = n,   time = time,   delta_t = delta_t,   mu0 = mu0,   sigma0_l = sigma0_l,   mu = mu,   phi = phi,   sigma_l = sigma_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 1,   x = x,   gamma = gamma )  plot(ssm)    # Type 2 ssm <- SimSSMOUIVary(   n = n,   time = time,   delta_t = delta_t,   mu0 = mu0,   sigma0_l = sigma0_l,   mu = mu,   phi = phi,   sigma_l = sigma_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 2,   x = x,   gamma = gamma,   kappa = kappa )  plot(ssm)"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMVARFixed.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data from the Vector Autoregressive Model (Fixed Parameters) — SimSSMVARFixed","title":"Simulate Data from the Vector Autoregressive Model (Fixed Parameters) — SimSSMVARFixed","text":"function simulates data vector autoregressive model using state space model parameterization. assumes parameters remain constant across individuals time.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMVARFixed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data from the Vector Autoregressive Model (Fixed Parameters) — SimSSMVARFixed","text":"","code":"SimSSMVARFixed(   n,   time,   mu0,   sigma0_l,   alpha,   beta,   psi_l,   type = 0,   x = NULL,   gamma = NULL )"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMVARFixed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data from the Vector Autoregressive Model (Fixed Parameters) — SimSSMVARFixed","text":"n Positive integer. Number individuals. time Positive integer. Number time points. mu0 Numeric vector. Mean initial latent variable values (\\(\\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0}\\)). sigma0_l Numeric matrix. Cholesky factorization (t(chol(sigma0))) covariance matrix initial latent variable values (\\(\\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0}\\)). alpha Numeric vector. Vector constant values dynamic model (\\(\\boldsymbol{\\alpha}\\)). beta Numeric matrix. Transition matrix relating values latent variables previous current time point (\\(\\boldsymbol{\\beta}\\)). psi_l Numeric matrix. Cholesky factorization (t(chol(psi))) covariance matrix process noise (\\(\\boldsymbol{\\Psi}\\)). type Integer. State space model type. See Details information. x List. element list matrix covariates individual n. number columns matrix equal time. gamma Numeric matrix. Matrix linking covariates latent variables current time point (\\(\\boldsymbol{\\Gamma}\\)).","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMVARFixed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data from the Vector Autoregressive Model (Fixed Parameters) — SimSSMVARFixed","text":"Returns object class simstatespace list following elements: call: Function call. args: Function arguments. data: Generated data list length n. element data list following elements: id: vector ID numbers length l, l value function argument time. time: vector time points length l. y: l k matrix values manifest variables. eta: l p matrix values latent variables. x: l j matrix values covariates (covariates included). fun: Function used.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMVARFixed.html","id":"type-","dir":"Reference","previous_headings":"","what":"Type 0","title":"Simulate Data from the Vector Autoregressive Model (Fixed Parameters) — SimSSMVARFixed","text":"measurement model given $$     \\mathbf{y}_{, t}     =     \\boldsymbol{\\eta}_{, t}   $$ \\(\\mathbf{y}_{, t}\\) represents vector observed variables \\(\\boldsymbol{\\eta}_{, t}\\) vector latent variables individual \\(\\) time \\(t\\). Since observed latent variables equal, generate data dynamic structure. dynamic structure given $$     \\boldsymbol{\\eta}_{, t}     =     \\boldsymbol{\\alpha}     +     \\boldsymbol{\\beta}     \\boldsymbol{\\eta}_{, t - 1}     +     \\boldsymbol{\\zeta}_{, t},     \\quad     \\mathrm{}     \\quad     \\boldsymbol{\\zeta}_{, t}     \\sim     \\mathcal{N}     \\left(     \\mathbf{0},     \\boldsymbol{\\Psi}     \\right)   $$ \\(\\boldsymbol{\\eta}_{, t}\\), \\(\\boldsymbol{\\eta}_{, t - 1}\\), \\(\\boldsymbol{\\zeta}_{, t}\\) random variables, \\(\\boldsymbol{\\alpha}\\), \\(\\boldsymbol{\\beta}\\), \\(\\boldsymbol{\\Psi}\\) model parameters. , \\(\\boldsymbol{\\eta}_{, t}\\) vector latent variables time \\(t\\) individual \\(\\), \\(\\boldsymbol{\\eta}_{, t - 1}\\) represents vector latent variables time \\(t - 1\\) individual \\(\\), \\(\\boldsymbol{\\zeta}_{, t}\\) represents vector dynamic noise time \\(t\\) individual \\(\\). \\(\\boldsymbol{\\alpha}\\) denotes vector intercepts, \\(\\boldsymbol{\\beta}\\) matrix autoregression cross regression coefficients, \\(\\boldsymbol{\\Psi}\\) covariance matrix \\(\\boldsymbol{\\zeta}_{, t}\\). alternative representation dynamic noise given $$     \\boldsymbol{\\zeta}_{, t}     =     \\boldsymbol{\\Psi}^{\\frac{1}{2}}     \\mathbf{z}_{, t},     \\quad     \\mathrm{}     \\quad     \\mathbf{z}_{, t}     \\sim     \\mathcal{N}     \\left(     \\mathbf{0},     \\mathbf{}     \\right)   $$ \\(     \\left( \\boldsymbol{\\Psi}^{\\frac{1}{2}} \\right)     \\left( \\boldsymbol{\\Psi}^{\\frac{1}{2}} \\right)^{\\prime}     =     \\boldsymbol{\\Psi} .   \\)","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMVARFixed.html","id":"type--1","dir":"Reference","previous_headings":"","what":"Type 1","title":"Simulate Data from the Vector Autoregressive Model (Fixed Parameters) — SimSSMVARFixed","text":"measurement model given $$     \\mathbf{y}_{, t}     =     \\boldsymbol{\\eta}_{, t} .   $$ dynamic structure given $$     \\boldsymbol{\\eta}_{, t}     =     \\boldsymbol{\\alpha}     +     \\boldsymbol{\\beta}     \\boldsymbol{\\eta}_{, t - 1}     +     \\boldsymbol{\\Gamma}     \\mathbf{x}_{, t}     +     \\boldsymbol{\\zeta}_{, t},     \\quad     \\mathrm{}     \\quad     \\boldsymbol{\\zeta}_{, t}     \\sim     \\mathcal{N}     \\left(     \\mathbf{0},     \\boldsymbol{\\Psi}     \\right)   $$ \\(\\mathbf{x}_{, t}\\) represents vector covariates time \\(t\\) individual \\(\\), \\(\\boldsymbol{\\Gamma}\\) coefficient matrix linking covariates latent variables.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMVARFixed.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate Data from the Vector Autoregressive Model (Fixed Parameters) — SimSSMVARFixed","text":"Chow, S.-M., Ho, M. R., Hamaker, E. L., & Dolan, C. V. (2010). Equivalence differences structural equation modeling state-space modeling techniques. Structural Equation Modeling: Multidisciplinary Journal, 17(2), 303–332. doi:10.1080/10705511003661553","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMVARFixed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate Data from the Vector Autoregressive Model (Fixed Parameters) — SimSSMVARFixed","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMVARFixed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Data from the Vector Autoregressive Model (Fixed Parameters) — SimSSMVARFixed","text":"","code":"# prepare parameters set.seed(42) ## number of individuals n <- 5 ## time points time <- 50 ## dynamic structure p <- 3 mu0 <- rep(x = 0, times = p) sigma0 <- 0.001 * diag(p) sigma0_l <- t(chol(sigma0)) alpha <- rep(x = 0, times = p) beta <- 0.50 * diag(p) psi <- 0.001 * diag(p) psi_l <- t(chol(psi)) ## covariates j <- 2 x <- lapply(   X = seq_len(n),   FUN = function(i) {     matrix(       data = stats::rnorm(n = time * j),       nrow = j,       ncol = time     )   } ) gamma <- diag(x = 0.10, nrow = p, ncol = j)  # Type 0 ssm <- SimSSMVARFixed(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l,   type = 0 )  plot(ssm)     # Type 1 ssm <- SimSSMVARFixed(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l,   type = 1,   x = x,   gamma = gamma )  plot(ssm)"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMVARIVary.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data from the Vector Autoregressive Model (Individual-Varying Parameters) — SimSSMVARIVary","title":"Simulate Data from the Vector Autoregressive Model (Individual-Varying Parameters) — SimSSMVARIVary","text":"function simulates data vector autoregressive model using state space model parameterization. assumes parameters can vary across individuals.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMVARIVary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data from the Vector Autoregressive Model (Individual-Varying Parameters) — SimSSMVARIVary","text":"","code":"SimSSMVARIVary(   n,   time,   mu0,   sigma0_l,   alpha,   beta,   psi_l,   type = 0,   x = NULL,   gamma = NULL )"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMVARIVary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data from the Vector Autoregressive Model (Individual-Varying Parameters) — SimSSMVARIVary","text":"n Positive integer. Number individuals. time Positive integer. Number time points. mu0 List numeric vectors. element list mean initial latent variable values (\\(\\boldsymbol{\\mu}_{\\boldsymbol{\\eta} \\mid 0}\\)). sigma0_l List numeric matrices. element list Cholesky factorization (t(chol(sigma0))) covariance matrix initial latent variable values (\\(\\boldsymbol{\\Sigma}_{\\boldsymbol{\\eta} \\mid 0}\\)). alpha List numeric vectors. element list vector constant values dynamic model (\\(\\boldsymbol{\\alpha}\\)). beta List numeric matrices. element list transition matrix relating values latent variables previous current time point (\\(\\boldsymbol{\\beta}\\)). psi_l List numeric matrices. element list Cholesky factorization (t(chol(psi))) covariance matrix process noise (\\(\\boldsymbol{\\Psi}\\)). type Integer. State space model type. See Details SimSSMVARFixed() information. x List. element list matrix covariates individual n. number columns matrix equal time. gamma List numeric matrices. element list matrix linking covariates latent variables current time point (\\(\\boldsymbol{\\Gamma}\\)).","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMVARIVary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data from the Vector Autoregressive Model (Individual-Varying Parameters) — SimSSMVARIVary","text":"Returns object class simstatespace list following elements: call: Function call. args: Function arguments. data: Generated data list length n. element data list following elements: id: vector ID numbers length l, l value function argument time. time: vector time points length l. y: l k matrix values manifest variables. eta: l p matrix values latent variables. x: l j matrix values covariates (covariates included). fun: Function used.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMVARIVary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Data from the Vector Autoregressive Model (Individual-Varying Parameters) — SimSSMVARIVary","text":"Parameters can vary across individuals providing list parameter values. length parameters (mu0, sigma0_l, alpha, beta, psi_l, gamma, kappa) less n, function cycle available values.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMVARIVary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate Data from the Vector Autoregressive Model (Individual-Varying Parameters) — SimSSMVARIVary","text":"Chow, S.-M., Ho, M. R., Hamaker, E. L., & Dolan, C. V. (2010). Equivalence differences structural equation modeling state-space modeling techniques. Structural Equation Modeling: Multidisciplinary Journal, 17(2), 303–332. doi:10.1080/10705511003661553","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMVARIVary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate Data from the Vector Autoregressive Model (Individual-Varying Parameters) — SimSSMVARIVary","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/SimSSMVARIVary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Data from the Vector Autoregressive Model (Individual-Varying Parameters) — SimSSMVARIVary","text":"","code":"# prepare parameters # In this example, beta varies across individuals. set.seed(42) ## number of individuals n <- 5 ## time points time <- 50 ## dynamic structure p <- 3 mu0 <- list(   rep(x = 0, times = p) ) sigma0 <- 0.001 * diag(p) sigma0_l <- list(   t(chol(sigma0)) ) alpha <- list(   rep(x = 0, times = p) ) beta <- list(   0.1 * diag(p),   0.2 * diag(p),   0.3 * diag(p),   0.4 * diag(p),   0.5 * diag(p) ) psi <- 0.001 * diag(p) psi_l <- list(   t(chol(psi)) ) ## covariates j <- 2 x <- lapply(   X = seq_len(n),   FUN = function(i) {     matrix(       data = stats::rnorm(n = time * j),       nrow = j,       ncol = time     )   } ) gamma <- list(   diag(x = 0.10, nrow = p, ncol = j) )  # Type 0 ssm <- SimSSMVARIVary(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l,   type = 0 )  plot(ssm)     # Type 1 ssm <- SimSSMVARIVary(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l,   type = 1,   x = x,   gamma = gamma )  plot(ssm)"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/TestPhi.html","id":null,"dir":"Reference","previous_headings":"","what":"Test the Drift Matrix — TestPhi","title":"Test the Drift Matrix — TestPhi","text":"true function return TRUE. Test real part eigenvalues \\(\\boldsymbol{\\Phi}\\) less zero. Test diagonal values \\(\\boldsymbol{\\Phi}\\) 0 negative inifinity.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/TestPhi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test the Drift Matrix — TestPhi","text":"","code":"TestPhi(phi)"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/TestPhi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test the Drift Matrix — TestPhi","text":"phi Numeric matrix. drift matrix (\\(\\boldsymbol{\\Phi}\\)).","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/reference/TestPhi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test the Drift Matrix — TestPhi","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/TestPhi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test the Drift Matrix — TestPhi","text":"","code":"phi <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) TestPhi(phi = phi) #> [1] TRUE"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/TestStability.html","id":null,"dir":"Reference","previous_headings":"","what":"Test Stability — TestStability","title":"Test Stability — TestStability","text":"function computes eigenvalues input matrix x. checks real part eigenvalues negative. eigenvalues negative real parts, system considered stable.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/TestStability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test Stability — TestStability","text":"","code":"TestStability(x)"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/TestStability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test Stability — TestStability","text":"x Numeric matrix.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/reference/TestStability.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test Stability — TestStability","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/TestStability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test Stability — TestStability","text":"","code":"x <- matrix(   data = c(     -0.357, 0.771, -0.450,     0.0, -0.511, 0.729,     0, 0, -0.693   ),   nrow = 3 ) TestStability(x) #> [1] TRUE"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/TestStationarity.html","id":null,"dir":"Reference","previous_headings":"","what":"Test Stationarity — TestStationarity","title":"Test Stationarity — TestStationarity","text":"function computes eigenvalues input matrix x. checks eigenvalues moduli less 1. eigenvalues moduli less 1, system considered stationary.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/TestStationarity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test Stationarity — TestStationarity","text":"","code":"TestStationarity(x)"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/TestStationarity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test Stationarity — TestStationarity","text":"x Numeric matrix.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/reference/TestStationarity.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test Stationarity — TestStationarity","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/TestStationarity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test Stationarity — TestStationarity","text":"","code":"x <- matrix(   data = c(0.5, 0.3, 0.2, 0.4),   nrow = 2 ) TestStationarity(x) #> [1] TRUE  x <- matrix(   data = c(0.9, -0.5, 0.8, 0.7),   nrow = 2 ) TestStationarity(x) #> [1] FALSE"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/as.data.frame.simstatespace.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an Object of Class simstatespace to a Data Frame — as.data.frame.simstatespace","title":"Coerce an Object of Class simstatespace to a Data Frame — as.data.frame.simstatespace","text":"Coerce Object Class simstatespace Data Frame","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/as.data.frame.simstatespace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an Object of Class simstatespace to a Data Frame — as.data.frame.simstatespace","text":"","code":"# S3 method for class 'simstatespace' as.data.frame(   x,   row.names = NULL,   optional = FALSE,   eta = FALSE,   long = TRUE,   ... )"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/as.data.frame.simstatespace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an Object of Class simstatespace to a Data Frame — as.data.frame.simstatespace","text":"x Object class simstatespace. row.names NULL character vector giving row names data frame. Missing values allowed. optional Logical. TRUE, setting row names converting column names optional. eta Logical. eta = TRUE, include eta. eta = FALSE, exclude eta. long Logical. long = TRUE, use long format. long = FALSE, use wide format. ... Additional arguments.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/as.data.frame.simstatespace.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Coerce an Object of Class simstatespace to a Data Frame — as.data.frame.simstatespace","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/as.data.frame.simstatespace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an Object of Class simstatespace to a Data Frame — as.data.frame.simstatespace","text":"","code":"# prepare parameters set.seed(42) ## number of individuals n <- 5 ## time points time <- 50 ## dynamic structure p <- 3 mu0 <- rep(x = 0, times = p) sigma0 <- diag(p) sigma0_l <- t(chol(sigma0)) alpha <- rep(x = 0, times = p) beta <- 0.50 * diag(p) psi <- diag(p) psi_l <- t(chol(psi)) ## measurement model k <- 3 nu <- rep(x = 0, times = k) lambda <- diag(k) theta <- 0.50 * diag(k) theta_l <- t(chol(theta)) ## covariates j <- 2 x <- lapply(   X = seq_len(n),   FUN = function(i) {     matrix(       data = stats::rnorm(n = time * j),       nrow = j,       ncol = time     )   } ) gamma <- diag(x = 0.10, nrow = p, ncol = j) kappa <- diag(x = 0.10, nrow = k, ncol = j)  # Type 0 ssm <- SimSSMFixed(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 0 )  head(as.data.frame(ssm)) #>   id time         y1          y2         y3 #> 1  1    0  1.6162534  1.38408950 -0.4111695 #> 2  1    1 -1.5232952  1.92627469 -0.7992414 #> 3  1    2 -0.3544375 -0.02220621 -1.3175714 #> 4  1    3 -1.9809839  0.16221765  0.2537055 #> 5  1    4 -2.2357532  2.58289080  0.9846965 #> 6  1    5 -0.3865249  1.52753010 -0.9550317 head(as.data.frame(ssm, long = FALSE)) #>   id        y1_0       y2_0       y3_0       y1_1       y2_1       y3_1 #> 1  1  1.61625337  1.3840895 -0.4111695 -1.5232952  1.9262747 -0.7992414 #> 2  2 -0.04475887 -2.0473263 -1.0995401  0.1899425 -0.8022084  1.0326053 #> 3  3 -0.35175450 -0.8620198 -0.4862692 -1.6063570  1.1059695  0.7106665 #> 4  4 -0.04919594  3.4244821 -0.2611621  0.9872575  1.7031256  2.2455017 #> 5  5 -2.32538496  0.9005817  0.3628444 -2.4199019 -0.7584027  1.0054983 #>         y1_2        y2_2        y3_2       y1_3       y2_3       y3_3 #> 1 -0.3544375 -0.02220621 -1.31757139 -1.9809839  0.1622177  0.2537055 #> 2  0.2011749  2.65001795  0.07700843 -0.5935679  1.2088950 -0.6923134 #> 3 -1.3413361  1.61786709  0.35637548  0.2187572  0.3953878  1.9271685 #> 4 -0.5799665  1.32218398  1.34751556 -0.8219741 -2.3408688 -0.8141161 #> 5 -0.9017397  3.27872010  0.32578948  1.4083978  2.6259266 -1.2293404 #>          y1_4      y2_4       y3_4        y1_5       y2_5       y3_5 #> 1 -2.23575323 2.5828908  0.9846965 -0.38652493  1.5275301 -0.9550317 #> 2 -1.60687060 0.5230821 -0.1737218 -0.22715129  1.9330535  1.3164819 #> 3 -0.04691762 0.6900648 -2.2786571 -2.39040982  0.8390154 -0.7203359 #> 4 -0.86146604 1.9597340  0.8576239 -0.41418366 -0.1887423  1.1741567 #> 5  1.15099319 0.4568205 -1.0356634  0.07745305  2.5743280 -0.3840216 #>          y1_6        y2_6       y3_6       y1_7       y2_7       y3_7 #> 1 -0.47791533 -0.05186306 -1.5771627 -1.9745206  1.9076700 -0.3836298 #> 2 -2.34672407  2.97237423  2.6146254 -1.6010079  0.1317900  1.6232148 #> 3  0.02758404  1.45522180 -1.7086169  3.5099721  1.2209718  1.3569414 #> 4  0.09920765 -1.00373952  1.3464648 -0.8458918 -2.9079858  0.1188553 #> 5  0.08823787  0.85463074 -0.1851625 -0.2603230  0.1072301  0.1982461 #>          y1_8       y2_8      y3_8       y1_9       y2_9       y3_9      y1_10 #> 1 -1.84909940  0.3162936  1.143882  0.6510890 -0.1876209 -0.5045624  2.3831996 #> 2 -0.54091538 -1.6836697  4.109281 -0.7970075 -0.2145923 -0.9984378  1.2757208 #> 3  1.50020639  0.7332345  3.294612 -0.1923136 -0.3978935  0.5829798 -0.2658483 #> 4  0.07987889 -1.7158004  1.050014 -0.9939521 -2.6680120  0.2642090  0.4325857 #> 5  1.01172797 -0.1018807 -2.841976 -2.0849596 -0.4872781  0.2992914 -1.2304391 #>        y2_10      y3_10       y1_11       y2_11      y3_11      y1_12 #> 1 -1.3758294  0.4845554  1.64979582 -1.11965602  0.8464700  0.2986962 #> 2  1.9613728  0.3016141  0.05475791  1.07159722 -0.9080502  0.4473381 #> 3  0.4920791  0.5569878  0.02408590 -2.04233004  0.4163683  0.6014075 #> 4 -0.7117496 -0.2928771 -0.75795600 -0.03295955 -1.8552625 -3.1205632 #> 5 -1.3019437  1.3926087 -2.27126241 -1.03470055  0.5592967 -1.0212046 #>        y2_12      y3_12      y1_13       y2_13      y3_13       y1_14 #> 1  3.4085424 -0.5178566 -2.3503508  1.02991334 -0.9227273 -0.70897783 #> 2 -0.6233495 -0.4735484 -0.2239352 -0.09317512  0.5644049 -1.05684353 #> 3  0.7830307  0.6959900 -1.0477854  1.85814585 -1.1128188 -1.68248836 #> 4  0.4237490  0.2180062 -0.3577689  0.54474564 -0.5772663 -0.06223421 #> 5 -0.4610074 -0.8906314 -0.5504551 -0.51539350 -2.5795614 -0.84613947 #>        y2_14       y3_14       y1_15       y2_15       y3_15      y1_16 #> 1  1.2279481 -2.88552243 -1.10910481 -0.49726091 -2.87605245 -1.2853619 #> 2 -2.2102637  0.66448570  0.58268562  0.28523090  0.04264334  0.9131296 #> 3  2.8175307 -0.01904589 -0.03977694 -0.08811798  0.63116514 -2.1860271 #> 4 -1.1343966 -1.03940884 -1.86969158 -3.15045449  1.22888055 -0.1971206 #> 5  0.4678982 -1.18607203 -0.84415745  0.67704173  0.68194793  0.6927647 #>        y2_16      y3_16       y1_17      y2_17       y3_17      y1_18 #> 1 -0.2842451 -1.0167008 -0.08604294  1.7148485 -2.69775499  0.5812529 #> 2 -0.9245131  0.1107793 -0.30960035 -1.9897506 -0.29548962 -1.0007548 #> 3 -1.1531789 -0.1925946 -1.08838493 -0.4985157  1.14312425 -1.2158110 #> 4 -1.9700271  1.4993960 -0.66114376  0.5260738 -0.63517024  0.5566757 #> 5  1.1351382  1.1490660 -0.72492632  3.9159707  0.07542342  0.6944526 #>        y2_18       y3_18       y1_19      y2_19      y3_19      y1_20 #> 1 -0.2369862 -2.49272996 -0.43617985 -0.5114359  0.5075110  1.4113725 #> 2 -1.9941789  0.21216641 -0.29439721 -0.5181764  2.4067212 -0.2731870 #> 3  2.5857987 -1.74920314 -0.03522969  0.5649820  1.9746364 -0.3068359 #> 4  1.2124295 -0.41332821  0.05630755  2.1318854 -0.5604419  0.8822642 #> 5 -0.2262339 -0.04938728 -1.16588456  0.3797271  1.4092183  1.7910299 #>        y2_20      y3_20      y1_21      y2_21      y3_21        y1_22     y2_22 #> 1 -0.2775884 -0.5805856  0.5153738 -0.5774842  1.3461776  3.596343553 -1.015069 #> 2 -0.2414759  1.7093432 -0.1880165  0.2443441  3.2912305 -0.607617672  3.498036 #> 3  2.1865472  1.2485908  0.7495193  1.8971623 -0.2436155  0.002613899  3.302662 #> 4  1.7698072  2.1359884  0.8281188  0.3965071  1.4140650 -1.121966830  1.835665 #> 5  0.5259533 -0.2166186  0.7415509  1.7855709  0.3856954 -2.360038750  1.374296 #>        y3_22      y1_23       y2_23      y3_23      y1_24      y2_24      y3_24 #> 1  0.0226050  2.5672517  1.35666661 -0.6335853  0.9607637  0.6095592  1.4023794 #> 2  0.4400620  0.1506179 -0.14861547 -1.6585065 -0.6433440 -1.1929799 -0.2311295 #> 3 -0.3179609  2.6725823  2.90101024  1.6888110  1.4395645  1.5184101 -1.1831673 #> 4 -0.9326660 -0.5671104  0.09194007  2.9121667 -1.2977790 -0.7019866  0.5626923 #> 5  1.1644061 -0.1364091  1.43208504  1.3060583 -1.2954587 -3.3133986  0.3565990 #>        y1_25      y2_25       y3_25      y1_26      y2_26      y3_26     y1_27 #> 1  1.9757187 -0.7188623 -1.08740006  0.5135102  1.1672849 -2.7907014 -2.147634 #> 2 -2.0777220 -1.0833064 -0.53497728  0.2295865 -1.5825029  2.7170672  1.482373 #> 3  0.2977171  1.9956090 -1.57492885  1.7142149  0.5874467 -1.5651869  1.362578 #> 4  0.8652171 -1.4067314  1.32993361  0.3349119 -2.8006450  0.8948044 -1.425575 #> 5  0.9956078 -1.7670528 -0.08862718 -2.4743535 -0.7087822 -0.1489025 -1.033740 #>        y2_27       y3_27      y1_28      y2_28      y3_28       y1_29 #> 1 -1.6352704  0.01636576  0.2899833  0.0791213 -0.4072794  1.45918868 #> 2 -0.4078197 -0.71209126  0.5164032  0.7878999  1.2607620 -0.02535035 #> 3  2.2117553 -0.82172855 -0.6972844 -1.1158735 -1.3716504  1.55399030 #> 4 -0.1066037 -1.18425988 -0.2862932 -2.2443239 -2.5856469  2.82294540 #> 5 -0.2955502 -0.73433686  0.3713890  1.1065388 -0.5803437  0.18063800 #>        y2_29      y3_29      y1_30      y2_30      y3_30       y1_31 #> 1 -2.1495539  1.3943432  0.8209480 -1.4734985 -0.4914223 -1.24810796 #> 2  0.4410402  1.9206276  2.1996889  3.4661757  1.1667738  0.80867357 #> 3 -1.7740351  0.3396966  0.9610677  0.8411052  0.2434068  1.07834520 #> 4  0.7514304 -0.2535041  1.0541691  2.9329244 -0.6659829 -0.33468009 #> 5 -0.2898897 -2.7944895 -0.2233469 -0.4254074 -1.7772095  0.09860742 #>         y2_31      y3_31      y1_32       y2_32      y3_32     y1_33 #> 1 -0.53574403  1.8486074  0.8113517 -0.46419208  2.2016191  3.415350 #> 2  1.30923202  0.2815890  1.5854441  2.42009251  0.8443721  2.234726 #> 3  0.12788082  0.2485631 -1.9480654 -1.12356865 -0.9089033 -2.148746 #> 4 -0.07606522 -1.1034329  1.3299005 -0.05077669  1.3509872  1.177275 #> 5  0.21793047  0.5524406  2.1090294 -1.58307664  1.6274305  1.307622 #>         y2_33     y3_33      y1_34      y2_34      y3_34       y1_35     y2_35 #> 1  3.79006196 1.5123009 -0.3304899  1.7468472  2.0719680 -0.74759469 1.4146564 #> 2  2.23747372 0.7440492  2.8031746  1.6726827  1.3227618  1.18430270 2.2366559 #> 3  0.01415462 1.3291999 -1.5777140  1.2882232 -0.2606539  0.07153844 2.8709768 #> 4 -2.20632144 1.3496753 -0.5338542  0.1748380 -1.1911688 -0.35455243 0.6370667 #> 5  0.41535689 1.6443757  0.2683620 -0.4900236  0.7308648  0.06128940 0.1717690 #>        y3_35      y1_36      y2_36      y3_36       y1_37     y2_37       y3_37 #> 1  1.0198628 -0.1944395  0.8854330 -0.4322774  0.07233919 -1.388633  0.05290312 #> 2  1.1742738 -0.4550634 -0.8409145  1.2436593 -1.25794738 -1.652569  0.90287860 #> 3 -0.5532294  1.8323151 -0.4501924  0.1842798  0.23564658  0.814098 -0.49638849 #> 4  0.3190500  1.2553414  0.2026020 -0.3143567  1.69260785 -1.309939 -0.33704338 #> 5  0.8057427 -0.2327205  1.3692313  0.0351231  0.74480078 -1.156616 -0.63663308 #>          y1_38      y2_38      y3_38      y1_39     y2_39       y3_39 #> 1  0.443147072 -1.7593746 -1.5113774  0.5297982 -1.917194 -0.87312929 #> 2 -0.781440030 -0.9407196  1.9675205  0.7363899 -2.988072  0.71798859 #> 3  0.695325057 -0.2591509 -0.3594548  0.6645011  0.551236  2.68977216 #> 4 -1.161582117 -1.4425935 -2.0659299 -1.7393826 -0.550202 -0.03785555 #> 5  0.005303157  0.7985164  0.1086735 -0.8871705  1.698271  0.40879492 #>        y1_40      y2_40      y3_40      y1_41      y2_41      y3_41      y1_42 #> 1 -0.1055503 -0.6508614 -1.7886765 -1.7211278 -1.7478217 -1.3823884 -3.1341750 #> 2  0.3463280 -1.1180259 -1.6974972  1.1024505 -0.6403250  0.1884423  1.7235042 #> 3 -1.3303646 -0.9439727  0.8470835  0.9670889 -1.0168700  1.4387706  0.2945571 #> 4  1.9451513 -1.1986014 -0.0677613 -0.8421198 -0.7832004 -0.9559934 -0.4534582 #> 5  0.6287751  0.9767175  0.9856875  0.2784196 -0.3577045 -3.0269869 -1.9687273 #>        y2_42       y3_42      y1_43      y2_43      y3_43       y1_44 #> 1 -2.4218606 -0.34383038 -2.1621986 -0.5874906 -0.9592735  0.07684553 #> 2 -2.1913185 -0.99739117 -0.2502237 -0.1004548 -0.2129836  0.38799381 #> 3 -3.8564551  2.45672208 -0.1084257 -1.6772485  0.7707791  0.33283223 #> 4  1.0494567  0.05230591  0.7511409  1.2285816  1.8865604 -0.16173517 #> 5 -0.5729698 -0.87992403 -1.5863713 -0.4946458  0.2917907 -0.27219374 #>        y2_44      y3_44      y1_45      y2_45      y3_45      y1_46      y2_46 #> 1  0.6498703 -2.0858223  0.1913725 -0.3984163  0.7564219 -0.1914062 -1.5603954 #> 2  0.3487298  1.1768471 -0.5165214 -0.6068654  0.1326481 -1.1978164  0.2747516 #> 3 -0.7693597 -1.0345149 -0.6230276 -1.5716891  0.7956358 -2.8786132 -0.4584111 #> 4  1.8282077 -0.4973262 -1.6866041  2.9826468 -1.5307716 -0.8588464  2.3200099 #> 5  0.6703838 -1.3712142  0.4966287 -0.3086405 -1.2083143 -0.1148448  0.8002702 #>        y3_46       y1_47      y2_47      y3_47      y1_48      y2_48      y3_48 #> 1  0.8761995 -0.26632228 -1.4031044  1.3346467 -0.2329856  1.0748771  0.7753996 #> 2 -0.1832172  0.08399896  1.3640486 -0.1636911 -1.2393437  0.1201421 -0.6573276 #> 3  0.9819970 -1.15587658  0.2381519  0.4382173 -2.4674501 -0.8868146 -0.2002175 #> 4 -0.3044024  2.72098966  1.1599923  0.6048861  1.2614324  0.2585708  2.4524881 #> 5 -1.0484130 -0.50487573  1.0964549 -4.1001085 -0.5997751  1.9156734 -1.0268122 #>         y1_49      y2_49      y3_49 #> 1  0.05097052  0.8516830 -0.8218398 #> 2 -1.72817957 -1.5878168  1.8028099 #> 3 -2.83662766  0.6451701  0.2810525 #> 4 -0.50741093  1.3275485  0.6990856 #> 5 -2.21734387  0.6382063 -1.3630000  # Type 1 ssm <- SimSSMFixed(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 1,   x = x,   gamma = gamma )  head(as.data.frame(ssm)) #>   id time         y1         y2         y3        x1          x2 #> 1  1    0 -1.3212950  1.3069112  0.2137389 1.3709584 -0.56469817 #> 2  1    1 -0.2229673 -1.1548953 -1.1297343 0.3631284  0.63286260 #> 3  1    2 -1.1754638  0.8212813 -1.4218078 0.4042683 -0.10612452 #> 4  1    3 -0.4145136  1.8191834  0.8619176 1.5115220 -0.09465904 #> 5  1    4 -0.3116308  0.8777874  2.3952392 2.0184237 -0.06271410 #> 6  1    5 -0.0741827  0.1952049  2.2593628 1.3048697  2.28664539 head(as.data.frame(ssm, long = FALSE)) #>   id        y1_0        y2_0       y3_0         x1_0       x2_0        y1_1 #> 1  1 -1.32129502  1.30691121  0.2137389  1.370958447 -0.5646982 -0.22296728 #> 2  2  0.06803976 -0.04990546  0.5051611  1.200965376  1.0447511 -0.27313571 #> 3  3 -1.29748492 -2.91033474 -2.1032602 -2.000929238  0.3337772  0.05172567 #> 4  4 -0.25584749 -0.25219544  1.3222454 -0.004620768  0.7602422 -0.96322916 #> 5  5  1.36620158  1.35333546 -0.6372020  1.334912585 -0.8692718  0.78256512 #>          y2_1        y3_1        x1_1       x2_1        y1_2       y2_2 #> 1 -1.15489529 -1.12973434  0.36312841 0.63286260 -1.17546383 0.82128133 #> 2  0.23540119 -0.05306924 -1.00320865 1.84848190 -1.09640628 0.66881405 #> 3  0.19611625 -0.90129537  1.17132513 2.05953924  1.12632688 0.08719612 #> 4 -0.02352759 -0.19357488  0.03899091 0.73507214  0.07984138 0.52840906 #> 5 -0.94363718  0.41208380  0.05548695 0.04906691 -1.21504746 0.43538045 #>         y3_2       x1_2        x2_2       y1_3      y2_3       y3_3        x1_3 #> 1 -1.4218078  0.4042683 -0.10612452 -0.4145136 1.8191834  0.8619176  1.51152200 #> 2 -1.3358199 -0.6667734  0.10551381 -0.7999442 0.7045620 -0.4957978 -0.42225588 #> 3 -1.1610320 -1.3768616 -1.15085557  2.2700874 2.7845463 -0.5357065 -0.70582139 #> 4  1.8357221 -0.1464726 -0.05788734  0.4556301 1.8346636  0.7831771  0.48236947 #> 5 -0.8136944 -0.5783557 -0.99873866 -0.7081730 0.8893509  3.6320074 -0.00243278 #>          x2_3          y1_4       y2_4       y3_4       x1_4        x2_4 #> 1 -0.09465904 -0.3116308457  0.8777874  2.3952392  2.0184237 -0.06271410 #> 2 -0.12235017  0.0003275326 -1.1810319 -0.0725149  0.1881930  0.11916096 #> 3 -1.05405578  0.0523547052  1.5919880  0.7848450 -0.6457437 -0.18537797 #> 4  0.99294364  1.0515491779  2.4426596  0.7943206 -1.2463955 -0.03348752 #> 5  0.65551188 -2.6143792827  1.2718223  2.8713631  1.4768423 -1.90915279 #>         y1_5       y2_5      y3_5        x1_5       x2_5       y1_6       y2_6 #> 1 -0.0741827  0.1952049 2.2593628  1.30486965  2.2866454 -0.4368443  2.0929767 #> 2 -1.3228055  0.3247527 1.9619418 -0.02509255  0.1080727 -0.4160145  0.0470476 #> 3 -0.4094134  0.6089027 0.2004189 -1.20122205  2.0369722 -3.1257716  0.9779773 #> 4  2.2540317 -0.3995432 1.6048742 -0.07096218 -0.7589207  1.3679994 -2.4941578 #> 5 -1.5389980  1.0286935 1.2371762 -0.70243947 -0.3114302  0.5103027  0.0342447 #>         y3_6       x1_6       x2_6       y1_7      y2_7       y3_7       x1_7 #> 1 -0.1627264 -1.3888607 -0.2787888 -0.9313803  2.423123  1.8765506 -0.1333213 #> 2  1.1472796 -0.4854352 -0.5042171 -1.4850458 -1.194179  0.1440756 -1.6610991 #> 3 -0.1317061  0.1077747 -0.0841081  0.6404262  2.360186  0.8461550  0.4956196 #> 4 -0.7912684 -1.0343594 -0.6307320 -0.6828575 -1.932106 -1.2325272  0.5868077 #> 5  2.1412550 -1.6631570 -0.7505334 -1.5170361 -1.277911  0.2377416 -0.7773518 #>          x2_7       y1_8       y2_8       y3_8       x1_8       x2_8 #> 1  0.63595040  1.3555973  0.2776942  0.3336033 -0.2842529 -2.6564554 #> 2 -0.38233373  0.1689121 -0.8308893  2.0655163 -0.5126503  2.7018910 #> 3  0.03741519 -0.6297808  2.3492915  0.8100695 -0.1320880  1.4767874 #> 4 -0.41632266  1.0278824 -3.0135325 -0.0690037 -0.7848878  0.1634163 #> 5 -0.72256970  0.4862914 -1.8894371 -0.2718721 -2.1888346  0.2134186 #>          y1_9       y2_9       y3_9       x1_9       x2_9      y1_10     y2_10 #> 1  0.44476374  2.0663970 -0.3115522 -2.4404669  1.3201133  1.0940299  1.551743 #> 2 -0.96189170 -0.4509793  1.9482290 -1.3621162  0.1372562 -1.8715290  1.768182 #> 3  0.80833110  0.2288769 -0.3313643 -0.2170302 -1.2836022 -1.3556844  2.128277 #> 4 -0.03444984 -0.7515914  0.7226250 -1.2367142  1.0458738  0.6706872 -1.726603 #> 5 -1.76555996 -2.2453781 -0.7889341 -0.6319229  1.5204912 -1.7029262 -1.546746 #>       y3_10      x1_10      x2_10      y1_11     y2_11      y3_11       x1_11 #> 1 -3.457191 -0.3066386 -1.7813084  1.6080070  1.341208 -0.7619126 -0.17191736 #> 2  1.680022 -1.4936251 -1.4704357  0.9153270  1.200346  1.3312963  0.12470239 #> 3  3.247484  0.3856679 -0.3515129 -0.7769676  1.198546  3.6750765 -0.52179609 #> 4  2.009070 -0.4845954  0.1891288  0.1231655 -1.289442  2.6975231  0.05100633 #> 5 -1.579077  0.7959559 -1.4535296 -1.9696088 -4.089331 -1.2921864  0.09839542 #>           x2_11     y1_12      y2_12       y3_12        x1_12       x2_12 #> 1  1.2146746992 1.9193308  2.0938548  2.17045341  1.895193461 -0.43046913 #> 2 -0.9966391349 1.6719831  1.5324441  0.69583843 -0.001822614 -0.42825888 #> 3 -1.0681312007 0.1247800  1.7248144  1.68928420  0.428365903 -0.17401823 #> 4 -0.0002406689 1.9714391 -2.2886164 -0.02502037  1.809382042 -0.82532796 #> 5 -0.5937709842 0.9537555  0.1167135 -0.55523419  0.888281169  0.05307042 #>       y1_13      y2_13       y3_13      x1_13       x2_13      y1_14      y2_14 #> 1  1.982597  1.0425821  0.03182284 -0.2572694 -1.76316309  1.1224173  0.9823196 #> 2 -1.064327  2.4528216 -0.86275293 -0.6136716 -2.02467785  0.3482144  1.9676994 #> 3 -3.914508 -0.3014104  0.56301961  0.5156677 -0.23436528 -2.6245766 -0.8698393 #> 4  1.957702 -0.7604525  0.34113488  1.1454705  0.03157319 -0.3332116 -0.9814938 #> 5 -1.773687 -1.1221734 -1.32431578 -0.5570236  0.43839704 -0.4898259 -1.7693607 #>        y3_14      x1_14       x2_14      y1_15      y2_15       y3_15 #> 1  0.6673541  0.4600974 -0.63999488 -0.6952325  1.0229887  1.66293082 #> 2 -0.4420744 -1.2247480  0.17951644  0.1102308  1.6923343 -0.07650175 #> 3 -1.7154935 -0.6585034  1.25023660 -2.2388038 -2.0003179 -0.47657878 #> 4  1.7911445 -0.8352058 -0.06876365  1.1053596 -0.2092331  0.93481928 #> 5  0.1158383  0.1526082 -0.16461758  0.6003556 -1.4797100 -2.04300966 #>        x1_15      x2_15       y1_16      y2_16      y3_16         x1_16 #> 1  0.4554501  0.7048373 -0.07084522 -0.5595938  0.2004234  1.035104e+00 #> 2  0.5676206 -0.4928774  0.59248600 -0.4661674 -0.1810490  6.288407e-05 #> 3 -0.2717637  0.9479520 -2.85135034 -0.4035567 -1.0487320 -1.201582e+00 #> 4  0.7467717 -0.4255187  1.99492931 -2.6126058  1.1768557 -7.720822e-01 #> 5  2.0198906 -0.5293859  1.16386902 -1.6207066  0.0318715 -4.707870e-01 #>        x2_16       y1_17       y2_17      y3_17       x1_17       x2_17 #> 1 -0.6089264 -1.43406576 -1.52341239  0.3344811  0.50495512 -1.71700868 #> 2  1.1228896  0.32089263  1.44632469 -0.8328417  1.43985574 -1.09711377 #> 3 -0.4661161  2.24942801  0.09748498 -1.2315448 -0.26935140 -0.39096541 #> 4  0.1527641  1.84507091 -1.04563662  1.9960705  0.98859685 -0.07345833 #> 5 -1.5459369  0.09640684 -0.78013019 -0.3272448 -0.04052672  0.89035631 #>        y1_18       y2_18      y3_18      x1_18      x2_18       y1_19 #> 1  0.2647052  0.37468039  2.6737476 -0.7844590 -0.8509076 -0.76282546 #> 2 -0.5119163 -0.03934419 -0.8031779 -0.1173196  1.2014984 -1.24289238 #> 3  2.0495729 -0.94087452 -1.5905452  1.3487070 -0.0227647 -1.23929468 #> 4  1.3493736 -0.03620265  1.3392054 -1.3870266 -1.3066759  0.01149444 #> 5  1.1458171  0.14204054 -2.5427818 -2.0713879 -0.2500651  0.27888846 #>         y2_19      y3_19      x1_19       x2_19       y1_20      y2_20 #> 1  0.06189121  2.8808639 -2.4142076  0.03612261 -0.71114553 -2.5089723 #> 2 -1.18786430  2.1575269 -0.4697296 -0.05246948  0.02807218  1.2439153 #> 3  0.19919403 -1.4852461  0.2442259 -0.94237171 -0.81764122  1.0367502 #> 4 -2.85293147  2.3386243 -0.7683953 -0.52710813  0.55518284  0.2245032 #> 5 -2.47708708  0.5582733 -1.1816504  1.44193727  0.09094230 -1.1840430 #>        y3_20       x1_20      x2_20      y1_21      y2_21      y3_21      x1_21 #> 1 -0.8309464  0.20599860 -0.3610573 -2.5260087 -1.3048137 -1.3981766  0.7581632 #> 2  1.4833495 -0.08610730 -0.8876790 -0.3199901  2.2064632  0.6489734 -0.4446840 #> 3 -0.8555348 -0.72921728  0.9980689  0.0996544 -0.4360866  0.6828378  1.2584817 #> 4  0.6364247 -0.02142707  0.6704981  1.2731180  0.4635977 -0.2848650 -0.4346170 #> 5  0.4087034  1.35789554  0.3345028  3.8716091  0.2527161  0.8965945  1.4293381 #>         x2_21      y1_22      y2_22       y3_22      x1_22      x2_22 #> 1 -0.72670483  0.3521247 -1.0971151  0.21790193 -1.3682810  0.4328180 #> 2 -0.02944488  0.6911039  1.1117158 -0.72756334 -0.4138688  1.1133860 #> 3  1.24886369 -1.9390432 -1.1699622  1.36893560 -1.3806370  2.0499607 #> 4 -1.11387978 -1.1151190  0.1135364  0.05691346  0.6071060  0.2754570 #> 5 -0.86731785  2.0364593 -1.9058403 -0.03871032  0.9506517 -0.5850115 #>        y1_23      y2_23      y3_23      x1_23       x2_23      y1_24 #> 1  1.3176657 -2.1642990 -0.6796242 -0.8113932  1.44410126  1.3391641 #> 2  1.4954691  0.7122494  0.3633060 -0.4809928 -0.43316903  1.0337595 #> 3 -1.7492765  1.3050955 -0.3266634  1.0168728 -0.02671746 -0.6841845 #> 4 -0.2646706  0.5000499  2.1818351  1.1573471 -1.68248086 -1.0163380 #> 5  1.2545266  0.3112625 -2.1339148  0.3209575 -0.29939602  0.2409194 #>         y2_24      y3_24       x1_24      x2_24      y1_25      y2_25 #> 1 -0.82130880 -0.0752571 -0.43144620  0.6556479  0.8216689 -1.8147205 #> 2 -0.06397518 -0.5531983  0.69686258 -1.0563684 -0.7541386 -2.1541924 #> 3  3.16868302  1.5155881  0.70360778 -0.9713852  0.1454184  0.3460727 #> 4 -0.42079016  3.0327701  0.08731909  1.3533619 -1.9542314  0.7789802 #> 5  0.18425062 -2.2777921 -0.27854308  0.5461152 -0.2883920 -1.8790973 #>        y3_25       x1_25       x2_25     y1_26      y2_26      y3_26      x1_26 #> 1  0.2288761  0.32192527 -0.78383894  1.479689  0.7835702 -0.4119303  1.5757275 #> 2  2.0231696 -0.04069848 -1.55154482 -1.204166 -0.4808715 -0.5025113  1.1671695 #> 3  0.2923802 -1.09615624  0.04905045  2.080418 -1.9194933  0.3897390 -1.1984959 #> 4  1.6673886  0.72417380 -0.83255283 -1.172532  1.1331902  2.3754289  0.7325285 #> 5 -1.3474831 -1.30382115 -0.25091447  1.368135 -2.2429527 -2.5437840  0.1710074 #>        x2_26       y1_27      y2_27     y3_27       x1_27      x2_27      y1_28 #> 1  0.6428993  1.91209020  1.5502746 -1.005937  0.08976065  0.2765507  2.2630026 #> 2 -0.2736457 -0.63264824  1.0368186 -1.620818 -0.46784532 -1.2382523  0.1246215 #> 3  0.1900190  0.51148147  0.0728170 -3.060578  1.29770590 -1.0338737  2.4021004 #> 4 -0.8719269 -0.37614524  2.4562279  3.266426 -0.45339751  1.1875343 -0.4664616 #> 5 -0.4034675  0.09799243 -0.4597594 -2.391649  0.10465944 -0.3188808  1.4656842 #>        y2_28      y3_28        x1_28       x2_28      y1_29      y2_29 #> 1  0.2672299 -1.9253959  0.679288816  0.08983289  0.5184740  1.3615360 #> 2 -0.5721696  0.6460846 -0.007762034 -0.80028218 -0.6565600 -0.8537611 #> 3 -0.5177981 -0.3705207 -0.738440754  0.04656394  0.5111742 -2.4207984 #> 4  1.4204688  3.5127039 -0.290145312  0.82854614  0.0876693 -0.3946798 #> 5 -0.6122942 -1.5410249  1.618343936  0.71418860  1.0471282 -0.7406853 #>        y3_29      x1_29      x2_29       y1_30       y2_30      y3_30 #> 1  1.4310673 -2.9930901  0.2848830  0.08042765 -0.53075827 -0.3826375 #> 2  0.8903193 -0.5334923  1.2876752 -0.21823923 -2.74552124  1.6616192 #> 3  1.4869472 -1.0175961 -0.3832840  1.01685499 -1.50281241  1.4140044 #> 4  2.4726918 -0.2912277 -1.5763624 -1.11657467  0.62752893  0.6372705 #> 5 -2.5462526  2.9658654 -0.7950776 -0.04829977 -0.05633085 -2.6124751 #>        x1_30      x2_30      y1_31      y2_31      y3_31      x1_31      x2_31 #> 1 -0.3672346  0.1852306 -0.7575300  1.0660180 -1.1937923  0.5818237  1.3997368 #> 2 -0.1755259 -1.0717824 -1.5893939 -0.9641858  1.4969122  0.1632069 -0.3627384 #> 3  0.8727554  0.9695450  2.8954413 -0.8172052  1.0713061  0.3838467 -1.8515557 #> 4 -0.8488157 -1.0885199 -0.5761493  0.6555097 -0.8429513 -0.4842906 -0.3363112 #> 5  0.8143659  2.0980308  2.2346414 -1.3267072  0.2265222  0.3009801 -1.0830751 #>        y1_32      y2_32      y3_32       x1_32       x2_32      y1_33     y2_33 #> 1 -0.8657861  1.1594111  1.5843125 -0.72729206  1.30254263 -1.7608815 0.7269482 #> 2 -0.3281431 -0.2782823 -2.7009377  0.59001355  1.43242193 -0.2476019 1.0308517 #> 3  1.9802173 -1.1335253 -1.4082145 -0.05399674  1.06477321 -2.0353089 1.5750707 #> 4  0.6702878  1.6342009  0.1738516 -0.15335789 -0.24324723  0.3690930 0.8654226 #> 5  0.6742349 -1.6456944  0.7162619 -1.00632250 -0.03541456 -1.2679077 0.5067678 #>         y3_33      x1_33      x2_33      y1_34      y2_34      y3_34 #> 1  1.89270783  0.3358481  1.0385061 -0.8768112  1.1036715  2.2148850 #> 2 -0.84104312 -0.9926925  0.4546503  1.8621741 -0.4604311 -0.1387278 #> 3 -0.03280635  0.8131950 -0.1908165 -0.4522141  0.2369424 -0.1114640 #> 4 -0.33863586  1.8922020 -1.3859983  0.6567835  1.9270995  0.6349295 #> 5  2.24073481  1.3091244  0.7504005 -2.1886602 -1.7674955  1.4045945 #>         x1_34       x2_34      y1_35      y2_35      y3_35        x1_35 #> 1  0.92072857  0.72087816  0.3397298  0.8155806 -0.3256500 -1.043118939 #> 2  0.08489806  0.89556558  0.7237191  0.2834713  0.5157692 -0.229778139 #> 3 -2.69992981  0.06096664 -0.3752383 -0.7829329 -0.8206978  0.573751697 #> 4 -0.41482430  0.34908153 -0.2851125  0.6157689 -3.8247503  1.628442266 #> 5 -2.13836833 -0.70035411 -1.8370658  1.0129193 -1.8720094 -0.009056475 #>         x2_35      y1_36      y2_36      y3_36      x1_36      x2_36      y1_37 #> 1 -0.09018639  2.0467294  0.1813455  1.6271317  0.6235182 -0.9535234  1.7177961 #> 2  0.83661907 -1.6404856  2.9320693  0.4389722 -1.7450559  1.6894589  1.1006471 #> 3  0.04580358  0.1458506  0.2831584 -0.0647262  0.1574125  0.4315654  2.8766446 #> 4  0.08852190  0.1730077  0.9797463  0.5413674  1.2391507 -1.6445555 -0.3845699 #> 5 -1.45813349 -1.8592593 -1.4851963 -2.2134587  0.6945296 -2.4613355 -1.1164536 #>         y2_37      y3_37      x1_37      x2_37      y1_38     y2_38     y3_38 #> 1  1.93999530  2.3291989 -0.5428288  0.5809965  0.5806455 0.5890687 0.9236375 #> 2  0.91649600 -0.5028793  0.8647780 -0.1507760 -1.5437966 0.7768215 0.0760361 #> 3  0.02653138  0.5382699 -0.3965497  1.3099782  0.3231083 1.0383649 0.2899639 #> 4 -0.40591425 -1.1825058  1.4463565 -0.6905602 -2.5216510 1.4791234 0.8107824 #> 5 -1.15210573 -0.6631066  0.1432898 -0.3912221  0.6531909 0.1385496 0.4259709 #>        x1_38      x2_38      y1_39      y2_39      y3_39      x1_39 #> 1  0.7681787  0.4637676  2.0052886 -0.3835412  2.5304392 -0.8857763 #> 2 -1.4490071  0.6430087  0.1418797  0.7309179 -1.0435802  0.4831939 #> 3  0.4703934 -1.2426703  1.3222493  0.1552634  1.0564194  1.3815755 #> 4 -0.2764311 -1.1094188 -2.8024327  1.1789045  0.5664178  0.1338693 #> 5 -0.4911641 -0.2836475 -2.9328006  1.4429639  0.5536245  0.3147948 #>          x2_39      y1_40       y2_40      y3_40      x1_40      x2_40 #> 1 -1.099780899 -0.2652305  1.50027725  0.9250186  1.5127070  0.2579214 #> 2 -0.006355626  0.5980214 -0.76641709  0.2154274  0.1514559 -0.5841090 #> 3  1.204458937  2.1905223  0.05355728 -0.7026008  0.8240740 -1.6626294 #> 4  1.785339052 -0.3865157  0.97305800  1.2350377  2.4221634 -1.0768289 #> 5  0.396326578  0.1574557 -0.98809480  0.8396418 -0.2256037 -1.9249504 #>        y1_41      y2_41       y3_41       x1_41      x2_41      y1_42 #> 1  0.1309740  0.8219069 -0.01472055  0.08844023 -0.1208965 -0.9430371 #> 2  1.2234728  2.1725154 -1.85474634  0.36880673  0.2946543  0.8238318 #> 3 -0.2257734 -0.4322122 -0.30076709 -0.56930634  0.6355138 -0.5528709 #> 4 -0.2699938  0.1163131  0.17479170  0.48594111  1.3885217 -0.7994950 #> 5 -2.4896525 -0.9838587 -0.19082061 -1.43922930 -1.4696578 -2.4903470 #>         y2_42      y3_42       x1_42      x2_42       y1_43      y2_43 #> 1 -0.96621247 -0.7748278 -1.19432890  0.6119969 -0.10121621  1.8060507 #> 2  0.65315701  0.8901553 -0.27925937 -1.3362367  0.61060692 -0.3885625 #> 3  0.40038204  1.3984393  0.04372201  0.3480123  0.45115331 -2.0828687 #> 4 -0.07212676 -0.3533231 -0.19565682 -0.2181748 -0.04885723 -1.0599949 #> 5 -0.71147283 -1.1043962  0.76186345 -0.2436150 -0.16237658 -0.2331553 #>        y3_43      x1_43      x2_43     y1_44     y2_44       y3_44      x1_44 #> 1  0.4460444 -0.2171398 -0.1827567 -1.457261 -0.702341 -0.02497946  0.9333463 #> 2 -1.0955178  0.7007488  0.5541966 -2.175534 -1.107481 -1.26217429 -0.8363066 #> 3  1.6863428  2.4595935 -0.8183803  1.952765 -2.492334  0.00432441 -2.1132001 #> 4  0.6701214 -0.3047780  0.5978327  2.512454 -2.018226  0.16243943  1.3974294 #> 5 -0.6697140  0.2696766 -1.5589275 -3.896427  2.019988 -0.04529128 -0.5355880 #>        x2_44      y1_45      y2_45      y3_45      x1_45      x2_45      y1_46 #> 1  0.8217731 -0.9831391  0.9994024  3.1503015  1.3921164 -0.4761739 -0.5168949 #> 2 -1.5945882  0.7340985 -0.7533449 -2.1924199  0.2049586 -0.3450880  1.5346657 #> 3  0.2736953  2.2299542  0.4874205  0.4514499 -0.6875968  0.4460411  1.4045247 #> 4  0.6876198  2.1679166 -1.5166678 -1.3601942  0.3201880 -0.3018699  3.2596240 #> 5  0.5624520  0.6531392  1.3666939  1.7850713 -0.1783261 -0.1151360  0.4616186 #>         y2_46       y3_46       x1_46      x2_46      y1_47       y2_47 #> 1  1.24877752 -0.49639914  0.65034856  1.3911105 -3.6370966  0.02088656 #> 2 -0.94852167 -0.02162973  0.25261170 -1.2940025  1.0756810  1.03974512 #> 3  1.45055467  0.35575850 -0.81238472  2.2120555 -0.0574027  0.91049398 #> 4  0.12775727 -0.38482344  0.49834869 -0.5495369  1.8684240 -0.15782705 #> 5 -0.06109306  1.49734976 -0.07206147  1.2109098  0.7463014 -1.45892392 #>        y3_47      x1_47      x2_47      y1_48       y2_48     y3_48      x1_48 #> 1  0.2411616 -1.1107889 -0.8607926  0.2395879 -0.06391602  1.908043 -1.1317387 #> 2 -0.5862474 -0.9591704  1.0857749  3.0474133  1.33874980  0.559258  0.4037749 #> 3  0.8101820 -0.1237060 -0.4773355  1.5218235 -0.50759186  1.018314 -0.1662615 #> 4 -1.6212787 -0.2792565  1.0965134  2.4411195  0.78024158 -2.333490  0.4420131 #> 5  0.3547960 -0.6148969  0.6761265 -0.6336531 -0.83164252 -2.093679  0.8985996 #>        x2_48      y1_49      y2_49       y3_49       x1_49       x2_49 #> 1 -1.4592140  0.3583062  1.3518190  1.55417479  0.07998255  0.65320434 #> 2  0.5864875  2.4212966 -0.3200761 -0.06399690  1.81522845  0.12882143 #> 3  0.8625634 -0.1229318 -3.3831398  0.51101047  0.09734049 -1.62561674 #> 4  0.2410163  0.9136470 -0.8633060 -0.22048714 -0.25560766  0.93103290 #> 5 -1.1893179 -0.1293048  0.4391199  0.06054169  0.12125885 -0.01122169  # Type 2 ssm <- SimSSMFixed(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 2,   x = x,   gamma = gamma,   kappa = kappa )  head(as.data.frame(ssm)) #>   id time         y1         y2        y3        x1          x2 #> 1  1    0 -2.2617108 -0.7667176 0.5340921 1.3709584 -0.56469817 #> 2  1    1  0.9759577  0.5206830 1.1328299 0.3631284  0.63286260 #> 3  1    2  1.4864513  1.5139406 0.7636724 0.4042683 -0.10612452 #> 4  1    3  0.6895916 -1.4110927 0.5326012 1.5115220 -0.09465904 #> 5  1    4 -2.0426250 -1.6092847 2.9555453 2.0184237 -0.06271410 #> 6  1    5  0.1554637 -0.2390945 0.7660269 1.3048697  2.28664539 head(as.data.frame(ssm, long = FALSE)) #>   id        y1_0       y2_0       y3_0         x1_0       x2_0        y1_1 #> 1  1 -2.26171084 -0.7667176  0.5340921  1.370958447 -0.5646982  0.97595771 #> 2  2 -0.01083935  1.2735290  2.1028202  1.200965376  1.0447511 -1.22065483 #> 3  3 -1.17628203  1.5504647 -0.4657054 -2.000929238  0.3337772 -0.16068750 #> 4  4 -1.09443990  0.7378863 -1.5560017 -0.004620768  0.7602422 -0.33062582 #> 5  5  2.91767302  0.2292802  1.1298055  1.334912585 -0.8692718  0.06649816 #>         y2_1       y3_1        x1_1       x2_1       y1_2       y2_2 #> 1  0.5206830  1.1328299  0.36312841 0.63286260  1.4864513  1.5139406 #> 2  2.3612218  1.1376440 -1.00320865 1.84848190 -0.4653553  0.5947964 #> 3  0.7164697 -0.5730460  1.17132513 2.05953924 -1.6635127  0.2287985 #> 4  0.5212429  0.9009251  0.03899091 0.73507214 -0.7938779 -0.3201251 #> 5 -1.0677271  2.2473308  0.05548695 0.04906691 -0.3308651 -0.5287427 #>          y3_2       x1_2        x2_2       y1_3       y2_3       y3_3 #> 1  0.76367243  0.4042683 -0.10612452  0.6895916 -1.4110927  0.5326012 #> 2 -0.44834655 -0.6667734  0.10551381 -0.7405792 -0.5751752  1.2894237 #> 3  0.10846422 -1.3768616 -1.15085557 -0.3987294 -2.2224797 -0.2573785 #> 4  0.09072877 -0.1464726 -0.05788734  1.2413697  2.0108480  1.0675637 #> 5 -0.39058089 -0.5783557 -0.99873866  0.4627781  0.7531802 -1.4845421 #>          x1_3        x2_3        y1_4       y2_4        y3_4       x1_4 #> 1  1.51152200 -0.09465904 -2.04262498 -1.6092847  2.95554532  2.0184237 #> 2 -0.42225588 -0.12235017  0.08938988 -2.1971766 -0.29360369  0.1881930 #> 3 -0.70582139 -1.05405578 -1.04567361 -2.2322137  0.94546923 -0.6457437 #> 4  0.48236947  0.99294364 -0.41209094 -0.6080460  2.11912321 -1.2463955 #> 5 -0.00243278  0.65551188 -0.16190873  0.9545628  0.09236095  1.4768423 #>          x2_4       y1_5       y2_5       y3_5        x1_5       x2_5 #> 1 -0.06271410  0.1554637 -0.2390945  0.7660269  1.30486965  2.2866454 #> 2  0.11916096 -0.3856124  1.0283889  0.4224272 -0.02509255  0.1080727 #> 3 -0.18537797 -1.1221677 -1.7405010  1.4310039 -1.20122205  2.0369722 #> 4 -0.03348752  1.6593916 -2.2213285  0.5968630 -0.07096218 -0.7589207 #> 5 -1.90915279 -1.1067060 -0.3530877 -0.1913458 -0.70243947 -0.3114302 #>         y1_6        y2_6      y3_6       x1_6       x2_6       y1_7       y2_7 #> 1 -0.3577100 -1.11826529 0.3574445 -1.3888607 -0.2787888 -0.9035040  1.6431612 #> 2 -0.2227387 -0.44385541 0.2499583 -0.4854352 -0.5042171  0.8001131 -0.3852358 #> 3 -0.7254209  0.34005317 1.5168391  0.1077747 -0.0841081 -1.8839166 -1.3832898 #> 4 -2.7752740 -1.45383703 0.8223615 -1.0343594 -0.6307320 -3.4695359 -0.2338029 #> 5  0.1157016  0.01079781 1.8961065 -1.6631570 -0.7505334  2.1013598 -0.3598088 #>         y3_7       x1_7        x2_7       y1_8       y2_8       y3_8       x1_8 #> 1 -0.5654410 -0.1333213  0.63595040 -0.3055039  0.5140589  1.3956298 -0.2842529 #> 2 -0.6260134 -1.6610991 -0.38233373  0.6097453  0.3018880 -0.2750748 -0.5126503 #> 3  0.8759856  0.4956196  0.03741519 -0.9261098  0.8598035  0.1280309 -0.1320880 #> 4 -2.2144320  0.5868077 -0.41632266 -3.0403706 -1.7676560 -0.5040090 -0.7848878 #> 5  0.8637659 -0.7773518 -0.72256970 -0.6761900 -0.3791144  1.4061523 -2.1888346 #>         x2_8       y1_9       y2_9       y3_9       x1_9       x2_9       y1_10 #> 1 -2.6564554  0.7170630  0.9319849  1.7523587 -2.4404669  1.3201133  0.61528870 #> 2  2.7018910  1.0110175  1.1011928 -2.1915604 -1.3621162  0.1372562  1.84601432 #> 3  1.4767874  0.1551347 -0.3676341  0.3566809 -0.2170302 -1.2836022 -0.85339502 #> 4  0.1634163 -1.6478691 -1.7046013 -0.8163977 -1.2367142  1.0458738  0.07623835 #> 5  0.2134186 -2.1447521  0.9616863  1.7582653 -0.6319229  1.5204912  0.44929767 #>         y2_10      y3_10      x1_10      x2_10      y1_11      y2_11      y3_11 #> 1  0.06595301  0.3283583 -0.3066386 -1.7813084 -0.6584546  1.1780206  2.2128578 #> 2  1.07596242 -1.1666866 -1.4936251 -1.4704357  1.3268751  1.4581645  1.6710793 #> 3 -0.02230328  1.9582845  0.3856679 -0.3515129 -2.3708827 -1.0934615 -2.3682302 #> 4 -2.27620204  0.2104809 -0.4845954  0.1891288 -1.4402695 -0.3698054 -1.1972837 #> 5  0.23189896  0.1892874  0.7959559 -1.4535296  0.5914779  2.3065489 -0.6066982 #>         x1_11         x2_11      y1_12      y2_12      y3_12        x1_12 #> 1 -0.17191736  1.2146746992 -1.6574764  1.8291666  0.2199046  1.895193461 #> 2  0.12470239 -0.9966391349  1.1932733 -0.1249057 -0.6931150 -0.001822614 #> 3 -0.52179609 -1.0681312007 -0.3379368 -0.1078337  1.3526176  0.428365903 #> 4  0.05100633 -0.0002406689  0.1015011 -0.7048022 -1.1787278  1.809382042 #> 5  0.09839542 -0.5937709842 -1.2065887  0.2941488 -1.7351641  0.888281169 #>         x2_12      y1_13       y2_13      y3_13      x1_13       x2_13 #> 1 -0.43046913 -2.2151404 -0.42539203 -1.8083666 -0.2572694 -1.76316309 #> 2 -0.42825888 -0.1552379 -0.06603291  0.7551181 -0.6136716 -2.02467785 #> 3 -0.17401823  1.1126262 -1.11051383 -0.3005570  0.5156677 -0.23436528 #> 4 -0.82532796  2.0640866 -1.93662451  1.5293285  1.1454705  0.03157319 #> 5  0.05307042 -0.4365304 -1.07341658  0.2023655 -0.5570236  0.43839704 #>         y1_14      y2_14      y3_14      x1_14       x2_14      y1_15 #> 1 -1.42026784 -0.5793268 -0.6061088  0.4600974 -0.63999488 -0.9428814 #> 2  1.33106571  0.2816104 -2.1650570 -1.2247480  0.17951644  1.0131716 #> 3 -1.18306966 -2.7370652 -0.1639112 -0.6585034  1.25023660 -0.2079178 #> 4  0.08559636  1.0091553  2.6040149 -0.8352058 -0.06876365 -0.3314998 #> 5  0.08712358 -1.4457050  0.3418526  0.1526082 -0.16461758 -0.7151986 #>         y2_15      y3_15      x1_15      x2_15      y1_16      y2_16 #> 1  0.59601820  2.1629074  0.4554501  0.7048373 -0.3427984  0.7387568 #> 2  0.03519945 -1.1499958  0.5676206 -0.4928774  0.6484758  0.7295049 #> 3 -0.26248612 -0.1580101 -0.2717637  0.9479520 -2.2845259  2.6062737 #> 4  0.24641057  3.5398440  0.7467717 -0.4255187  0.3390863 -0.4424833 #> 5  0.08833419  1.0854586  2.0198906 -0.5293859 -0.3580190 -0.8553143 #>         y3_16         x1_16      x2_16      y1_17      y2_17      y3_17 #> 1  1.10667527  1.035104e+00 -0.6089264  0.7831213  2.5436538 -1.9466145 #> 2 -0.91152816  6.288407e-05  1.1228896 -1.3577298 -1.2937834  0.9420950 #> 3 -0.16398670 -1.201582e+00 -0.4661161 -0.6930692  1.6987587 -1.3298241 #> 4  3.00894938 -7.720822e-01  0.1527641  2.0548933 -0.4498286 -1.3480820 #> 5 -0.06110253 -4.707870e-01 -1.5459369 -0.7032934 -0.3767284  0.4782274 #>         x1_17       x2_17      y1_18        y2_18      y3_18      x1_18 #> 1  0.50495512 -1.71700868 -0.1979541  0.934651116 -2.4605171 -0.7844590 #> 2  1.43985574 -1.09711377  1.0538112  0.482245291 -0.2161476 -0.1173196 #> 3 -0.26935140 -0.39096541 -0.1742509  0.002553713 -0.5221625  1.3487070 #> 4  0.98859685 -0.07345833 -0.2050521 -0.620461603 -0.2960910 -1.3870266 #> 5 -0.04052672  0.89035631  0.5126820 -0.990310060 -1.6786754 -2.0713879 #>        x2_18       y1_19      y2_19       y3_19      x1_19       x2_19 #> 1 -0.8509076  0.09501072 0.16565982 -2.67127807 -2.4142076  0.03612261 #> 2  1.2014984  0.55752311 1.63942582 -0.06732495 -0.4697296 -0.05246948 #> 3 -0.0227647 -2.30534138 1.66243142 -1.05916120  0.2442259 -0.94237171 #> 4 -1.3066759 -1.54067494 0.01575045  0.76033397 -0.7683953 -0.52710813 #> 5 -0.2500651 -1.24765403 0.38733170  0.73859327 -1.1816504  1.44193727 #>         y1_20      y2_20     y3_20       x1_20      x2_20      y1_21      y2_21 #> 1  0.06524747  0.1468387 -1.078771  0.20599860 -0.3610573 -1.2301772  0.5091490 #> 2  0.57675232 -0.2908006  1.491129 -0.08610730 -0.8876790 -0.2472754 -0.4192988 #> 3 -3.28260298  1.3880891 -1.116361 -0.72921728  0.9980689 -0.7938003 -0.1749302 #> 4 -0.62321824  0.9650449  2.117989 -0.02142707  0.6704981 -1.2653429  2.3447854 #> 5 -1.96697562  0.1014138 -1.252068  1.35789554  0.3345028  0.0408507 -2.1493766 #>         y3_21      x1_21       x2_21      y1_22      y2_22     y3_22      x1_22 #> 1  0.02231443  0.7581632 -0.72670483 -3.0469130  0.3743534 1.0232007 -1.3682810 #> 2 -1.41122249 -0.4446840 -0.02944488 -0.5645269 -0.9572478 0.7276238 -0.4138688 #> 3  1.51059438  1.2584817  1.24886369 -1.5603645 -0.1838495 0.7381851 -1.3806370 #> 4 -1.05513299 -0.4346170 -1.11387978 -0.4357499  1.1624015 0.2351577  0.6071060 #> 5  0.93601973  1.4293381 -0.86731785 -0.7831636 -1.6882271 1.8769630  0.9506517 #>        x2_22      y1_23      y2_23      y3_23      x1_23       x2_23      y1_24 #> 1  0.4328180 -1.8262502 -0.7376244 -0.3671736 -0.8113932  1.44410126 -0.7958582 #> 2  1.1133860 -0.1703043  0.2797799  1.5287615 -0.4809928 -0.43316903 -1.5288576 #> 3  2.0499607 -0.9550793  0.2786485 -1.3416689  1.0168728 -0.02671746 -0.4028647 #> 4  0.2754570 -0.3413122 -0.4190110 -1.2849335  1.1573471 -1.68248086 -0.7521130 #> 5 -0.5850115 -0.1491781 -0.7253244 -1.3660979  0.3209575 -0.29939602 -0.3675176 #>         y2_24       y3_24       x1_24      x2_24      y1_25      y2_25 #> 1  1.22671231 -0.46755175 -0.43144620  0.6556479  0.4792682 -0.6222010 #> 2 -1.18580336 -0.09326903  0.69686258 -1.0563684 -0.8426745  2.6837173 #> 3 -1.36256873  1.44578030  0.70360778 -0.9713852  1.5342963 -0.4870606 #> 4  1.65155850  0.37153081  0.08731909  1.3533619  1.6027442 -1.0151345 #> 5 -0.02479883 -0.90361727 -0.27854308  0.5461152 -0.4166378  2.3206512 #>        y3_25       x1_25       x2_25       y1_26      y2_26      y3_26 #> 1 -0.8141507  0.32192527 -0.78383894  1.49478044 -0.7011373  0.9654151 #> 2  0.3922965 -0.04069848 -1.55154482  0.06169944  1.4954911 -2.1184110 #> 3 -0.5943964 -1.09615624  0.04905045  0.72900810 -2.7314058  0.3839384 #> 4  1.7426810  0.72417380 -0.83255283 -0.06770521 -0.3768668 -0.2867897 #> 5 -0.1405577 -1.30382115 -0.25091447  0.10216523  0.5191222  0.3139478 #>        x1_26      x2_26      y1_27      y2_27      y3_27       x1_27      x2_27 #> 1  1.5757275  0.6428993 -1.1647060 -2.2184199  3.4363355  0.08976065  0.2765507 #> 2  1.1671695 -0.2736457  2.6494635  0.1662511  0.1836773 -0.46784532 -1.2382523 #> 3 -1.1984959  0.1900190 -0.4266472 -1.1554926 -1.1296515  1.29770590 -1.0338737 #> 4  0.7325285 -0.8719269  0.7947885 -2.3842952 -2.1643112 -0.45339751  1.1875343 #> 5  0.1710074 -0.4034675  1.9508978 -0.3848814 -3.0563611  0.10465944 -0.3188808 #>        y1_28      y2_28      y3_28        x1_28       x2_28      y1_29 #> 1 -1.1232442 -0.3386327  2.4856565  0.679288816  0.08983289 -0.2116782 #> 2  0.4372636  1.8478779 -1.3167820 -0.007762034 -0.80028218  0.6312305 #> 3 -0.9236442 -3.0363753  1.1332017 -0.738440754  0.04656394 -0.8130017 #> 4  1.6876901 -1.3855848 -1.1868768 -0.290145312  0.82854614  0.4826578 #> 5  1.5762711  2.9005160 -0.6647209  1.618343936  0.71418860  3.3908647 #>        y2_29      y3_29      x1_29      x2_29      y1_30      y2_30       y3_30 #> 1 -0.2639721  0.7380767 -2.9930901  0.2848830 -1.2035309 -0.3571279 -1.64509425 #> 2  2.1808281 -0.6859749 -0.5334923  1.2876752  2.0804276  0.2775435  0.06526954 #> 3 -1.9517001 -0.8381478 -1.0175961 -0.3832840 -1.0822334 -0.9186276  1.39868427 #> 4 -3.0943325 -0.9111990 -0.2912277 -1.5763624 -1.7304351 -2.5725873 -0.55611115 #> 5  2.3261089 -1.4026520  2.9658654 -0.7950776 -0.2029005  1.1005079 -1.85546589 #>        x1_30      x2_30       y1_31       y2_31       y3_31      x1_31 #> 1 -0.3672346  0.1852306  0.07109925 -2.24613575  1.99010583  0.5818237 #> 2 -0.1755259 -1.0717824  0.55629458  0.69940331 -0.97774634  0.1632069 #> 3  0.8727554  0.9695450 -0.46278148 -1.93447356  0.98093559  0.3838467 #> 4 -0.8488157 -1.0885199  1.36947093 -0.06717144 -0.09082801 -0.4842906 #> 5  0.8143659  2.0980308 -0.01129053  0.20335470 -3.45852622  0.3009801 #>        x2_31      y1_32       y2_32       y3_32       x1_32       x2_32 #> 1  1.3997368  3.7186580 -0.05208359 -0.56197007 -0.72729206  1.30254263 #> 2 -0.3627384 -0.5323864  2.47158612 -0.97034857  0.59001355  1.43242193 #> 3 -1.8515557 -0.9562222  1.44806587 -2.37649172 -0.05399674  1.06477321 #> 4 -0.3363112 -1.0024854 -0.90709147  0.06740686 -0.15335789 -0.24324723 #> 5 -1.0830751 -0.3644994 -1.24486220 -3.45887740 -1.00632250 -0.03541456 #>        y1_33      y2_33       y3_33      x1_33      x2_33      y1_34      y2_34 #> 1 -0.1160670  0.3101314  1.53358498  0.3358481  1.0385061 -0.4771736  1.9733541 #> 2  0.1011716 -0.1749360 -0.26398660 -0.9926925  0.4546503  3.5078962 -0.6752161 #> 3 -2.4240088  1.2592813 -0.08246484  0.8131950 -0.1908165  0.7883838  1.6639357 #> 4  1.2153747  0.1826516 -0.99893422  1.8922020 -1.3859983  0.4488331  1.4923626 #> 5  0.7289556 -1.5118393 -0.91846250  1.3091244  0.7504005 -0.3396360 -2.6796190 #>         y3_34       x1_34       x2_34      y1_35      y2_35      y3_35 #> 1 -0.06159458  0.92072857  0.72087816  0.1334822  0.6098394  0.9771480 #> 2 -0.09798790  0.08489806  0.89556558  0.7529208  0.2315859 -0.2440604 #> 3  1.78529327 -2.69992981  0.06096664  2.7238966 -0.4761221 -1.4859338 #> 4 -0.27997541 -0.41482430  0.34908153  1.2359666  0.7233830  1.4193523 #> 5  0.09732401 -2.13836833 -0.70035411 -1.3900866 -1.2572970  1.5649886 #>          x1_35       x2_35      y1_36      y2_36      y3_36      x1_36 #> 1 -1.043118939 -0.09018639 -2.1793162  0.7935969 -0.5925976  0.6235182 #> 2 -0.229778139  0.83661907  0.6036193  0.2024711  1.3342233 -1.7450559 #> 3  0.573751697  0.04580358  0.9637950 -0.8749543 -0.1194499  0.1574125 #> 4  1.628442266  0.08852190  1.6951209 -1.2556609  0.2163004  1.2391507 #> 5 -0.009056475 -1.45813349 -1.8757981 -0.6122068  1.5551625  0.6945296 #>        x2_36       y1_37      y2_37      y3_37      x1_37      x2_37      y1_38 #> 1 -0.9535234 -1.69080557 -0.3025021  1.7319803 -0.5428288  0.5809965 -2.6354214 #> 2  1.6894589 -0.09277337 -1.1021267  1.6043880  0.8647780 -0.1507760 -0.6308415 #> 3  0.4315654  0.94630702 -0.5591950 -0.8697912 -0.3965497  1.3099782  1.5346053 #> 4 -1.6445555  1.13743144 -2.4450389  1.0365605  1.4463565 -0.6905602  2.2584497 #> 5 -2.4613355 -0.87174442 -0.9280160 -0.8723213  0.1432898 -0.3912221  0.4400004 #>        y2_38      y3_38      x1_38      x2_38      y1_39      y2_39 #> 1 -0.7183577 -0.4737886  0.7681787  0.4637676 -2.8071935 -0.5614764 #> 2 -1.1112348  1.6758752 -1.4490071  0.6430087  0.3740888 -0.1523084 #> 3 -1.9888093 -0.2844570  0.4703934 -1.2426703  0.2343761  2.1184055 #> 4 -2.7826021 -1.3484993 -0.2764311 -1.1094188  0.4663693 -1.6985818 #> 5 -1.7603171 -0.9955418 -0.4911641 -0.2836475  1.4811656  0.8301803 #>          y3_39      x1_39        x2_39      y1_40      y2_40      y3_40 #> 1  0.881604859 -0.8857763 -1.099780899 -2.2040033  0.1882097 -0.1269184 #> 2 -0.006343342  0.4831939 -0.006355626  0.6789519  2.3019134  0.6939580 #> 3  0.795769292  1.3815755  1.204458937  0.4976630  1.2046355 -1.1505839 #> 4  0.626488740  0.1338693  1.785339052  1.3594825 -0.6741237  2.0404639 #> 5 -0.163071934  0.3147948  0.396326578  1.4834493  2.9148698 -0.2685219 #>        x1_40      x2_40       y1_41      y2_41      y3_41       x1_41 #> 1  1.5127070  0.2579214  0.57684619 -0.6899581  0.5429887  0.08844023 #> 2  0.1514559 -0.5841090 -0.08175649  0.6560388  2.2044339  0.36880673 #> 3  0.8240740 -1.6626294 -0.90625055 -0.2168597 -1.9086710 -0.56930634 #> 4  2.4221634 -1.0768289  0.92517233  0.0159189  0.5964618  0.48594111 #> 5 -0.2256037 -1.9249504 -1.51243420  0.4976952 -1.4491377 -1.43922930 #>        x2_41      y1_42       y2_42       y3_42       x1_42      x2_42 #> 1 -0.1208965 -0.9841455  1.95659308  0.10631121 -1.19432890  0.6119969 #> 2  0.2946543  1.6252713  1.40303796 -0.64688033 -0.27925937 -1.3362367 #> 3  0.6355138  0.5611223  0.09548179  0.02792649  0.04372201  0.3480123 #> 4  1.3885217 -1.8603537 -1.05576936 -1.43747523 -0.19565682 -0.2181748 #> 5 -1.4696578  0.7375841 -1.27621056 -0.28031657  0.76186345 -0.2436150 #>        y1_43       y2_43      y3_43      x1_43      x2_43      y1_44      y2_44 #> 1 -0.4172575 -0.03975722 -1.0649549 -0.2171398 -0.1827567 -0.6356891 -0.8823777 #> 2 -0.4323630  0.69400066 -0.4854508  0.7007488  0.5541966 -1.5815027  1.2093094 #> 3  0.6717540  0.59886248 -1.4107830  2.4595935 -0.8183803 -1.5925834  0.2028067 #> 4 -0.1999509 -0.27958137 -0.1115583 -0.3047780  0.5978327 -1.3860432  0.8088848 #> 5  1.5568158 -0.60905958 -2.4224375  0.2696766 -1.5589275 -2.1225482  0.3167143 #>        y3_44      x1_44      x2_44      y1_45      y2_45      y3_45      x1_45 #> 1  1.0255378  0.9333463  0.8217731  1.4168399 -1.2529312 -0.0138464  1.3921164 #> 2  0.1015089 -0.8363066 -1.5945882  1.0726562 -0.3726381 -3.8113788  0.2049586 #> 3  2.1139917 -2.1132001  0.2736953  0.7580356 -1.1751165 -0.1074872 -0.6875968 #> 4  1.2056015  1.3974294  0.6876198 -1.8356432  1.1946067  1.3876294  0.3201880 #> 5 -0.5508063 -0.5355880  0.5624520 -2.3342729 -0.4466525 -0.9093240 -0.1783261 #>        x2_45       y1_46      y2_46       y3_46       x1_46      x2_46 #> 1 -0.4761739  1.12795639 -0.6834568 -2.15905811  0.65034856  1.3911105 #> 2 -0.3450880 -3.52737494 -0.7430851 -0.08598658  0.25261170 -1.2940025 #> 3  0.4460411  0.05897484  2.5111017  0.04442733 -0.81238472  2.2120555 #> 4 -0.3018699 -0.97038509  1.3974840  0.24494246  0.49834869 -0.5495369 #> 5 -0.1151360 -2.60616376 -0.7653270 -4.59670290 -0.07206147  1.2109098 #>        y1_47      y2_47      y3_47      x1_47      x2_47      y1_48      y2_48 #> 1 -1.3150620 -0.4756001 -1.8329691 -1.1107889 -0.8607926 -1.3449987  1.7682712 #> 2 -0.7472187 -2.0455025 -2.0144549 -0.9591704  1.0857749 -1.4057986 -1.7109581 #> 3  2.8324142  1.4446795 -0.1309829 -0.1237060 -0.4773355  0.1231669 -1.3976359 #> 4 -0.6650360 -1.8388994  1.8045724 -0.2792565  1.0965134 -1.9632644 -1.0236716 #> 5 -1.3209728  1.4065665 -0.7600015 -0.6148969  0.6761265 -0.8411154  0.7324089 #>        y3_48      x1_48      x2_48      y1_49       y2_49      y3_49 #> 1  0.5772184 -1.1317387 -1.4592140 -2.4462217  1.19775527 -1.2621964 #> 2 -0.5982397  0.4037749  0.5864875 -0.2728646  1.19842157  2.2908512 #> 3  1.5982764 -0.1662615  0.8625634 -0.4690810 -3.23643735 -0.6867484 #> 4  1.2249418  0.4420131  0.2410163  2.2338761  0.32421845  2.2357651 #> 5  0.6988805  0.8985996 -1.1893179 -0.1271400  0.09189132  0.1123442 #>         x1_49       x2_49 #> 1  0.07998255  0.65320434 #> 2  1.81522845  0.12882143 #> 3  0.09734049 -1.62561674 #> 4 -0.25560766  0.93103290 #> 5  0.12125885 -0.01122169"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/as.matrix.simstatespace.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an Object of Class simstatespace to a Matrix — as.matrix.simstatespace","title":"Coerce an Object of Class simstatespace to a Matrix — as.matrix.simstatespace","text":"Coerce Object Class simstatespace Matrix","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/as.matrix.simstatespace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an Object of Class simstatespace to a Matrix — as.matrix.simstatespace","text":"","code":"# S3 method for class 'simstatespace' as.matrix(x, eta = FALSE, long = TRUE, ...)"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/as.matrix.simstatespace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an Object of Class simstatespace to a Matrix — as.matrix.simstatespace","text":"x Object class simstatespace. eta Logical. eta = TRUE, include eta. eta = FALSE, exclude eta. long Logical. long = TRUE, use long format. long = FALSE, use wide format. ... Additional arguments.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/as.matrix.simstatespace.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Coerce an Object of Class simstatespace to a Matrix — as.matrix.simstatespace","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/as.matrix.simstatespace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an Object of Class simstatespace to a Matrix — as.matrix.simstatespace","text":"","code":"# prepare parameters set.seed(42) ## number of individuals n <- 5 ## time points time <- 50 ## dynamic structure p <- 3 mu0 <- rep(x = 0, times = p) sigma0 <- diag(p) sigma0_l <- t(chol(sigma0)) alpha <- rep(x = 0, times = p) beta <- 0.50 * diag(p) psi <- diag(p) psi_l <- t(chol(psi)) ## measurement model k <- 3 nu <- rep(x = 0, times = k) lambda <- diag(k) theta <- 0.50 * diag(k) theta_l <- t(chol(theta)) ## covariates j <- 2 x <- lapply(   X = seq_len(n),   FUN = function(i) {     matrix(       data = stats::rnorm(n = time * j),       nrow = j,       ncol = time     )   } ) gamma <- diag(x = 0.10, nrow = p, ncol = j) kappa <- diag(x = 0.10, nrow = k, ncol = j)  # Type 0 ssm <- SimSSMFixed(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 0 )  head(as.matrix(ssm)) #>      id time         y1          y2         y3 #> [1,]  1    0  1.6162534  1.38408950 -0.4111695 #> [2,]  1    1 -1.5232952  1.92627469 -0.7992414 #> [3,]  1    2 -0.3544375 -0.02220621 -1.3175714 #> [4,]  1    3 -1.9809839  0.16221765  0.2537055 #> [5,]  1    4 -2.2357532  2.58289080  0.9846965 #> [6,]  1    5 -0.3865249  1.52753010 -0.9550317 head(as.matrix(ssm, long = FALSE)) #>      id        y1_0       y2_0       y3_0       y1_1       y2_1       y3_1 #> [1,]  1  1.61625337  1.3840895 -0.4111695 -1.5232952  1.9262747 -0.7992414 #> [2,]  2 -0.04475887 -2.0473263 -1.0995401  0.1899425 -0.8022084  1.0326053 #> [3,]  3 -0.35175450 -0.8620198 -0.4862692 -1.6063570  1.1059695  0.7106665 #> [4,]  4 -0.04919594  3.4244821 -0.2611621  0.9872575  1.7031256  2.2455017 #> [5,]  5 -2.32538496  0.9005817  0.3628444 -2.4199019 -0.7584027  1.0054983 #>            y1_2        y2_2        y3_2       y1_3       y2_3       y3_3 #> [1,] -0.3544375 -0.02220621 -1.31757139 -1.9809839  0.1622177  0.2537055 #> [2,]  0.2011749  2.65001795  0.07700843 -0.5935679  1.2088950 -0.6923134 #> [3,] -1.3413361  1.61786709  0.35637548  0.2187572  0.3953878  1.9271685 #> [4,] -0.5799665  1.32218398  1.34751556 -0.8219741 -2.3408688 -0.8141161 #> [5,] -0.9017397  3.27872010  0.32578948  1.4083978  2.6259266 -1.2293404 #>             y1_4      y2_4       y3_4        y1_5       y2_5       y3_5 #> [1,] -2.23575323 2.5828908  0.9846965 -0.38652493  1.5275301 -0.9550317 #> [2,] -1.60687060 0.5230821 -0.1737218 -0.22715129  1.9330535  1.3164819 #> [3,] -0.04691762 0.6900648 -2.2786571 -2.39040982  0.8390154 -0.7203359 #> [4,] -0.86146604 1.9597340  0.8576239 -0.41418366 -0.1887423  1.1741567 #> [5,]  1.15099319 0.4568205 -1.0356634  0.07745305  2.5743280 -0.3840216 #>             y1_6        y2_6       y3_6       y1_7       y2_7       y3_7 #> [1,] -0.47791533 -0.05186306 -1.5771627 -1.9745206  1.9076700 -0.3836298 #> [2,] -2.34672407  2.97237423  2.6146254 -1.6010079  0.1317900  1.6232148 #> [3,]  0.02758404  1.45522180 -1.7086169  3.5099721  1.2209718  1.3569414 #> [4,]  0.09920765 -1.00373952  1.3464648 -0.8458918 -2.9079858  0.1188553 #> [5,]  0.08823787  0.85463074 -0.1851625 -0.2603230  0.1072301  0.1982461 #>             y1_8       y2_8      y3_8       y1_9       y2_9       y3_9 #> [1,] -1.84909940  0.3162936  1.143882  0.6510890 -0.1876209 -0.5045624 #> [2,] -0.54091538 -1.6836697  4.109281 -0.7970075 -0.2145923 -0.9984378 #> [3,]  1.50020639  0.7332345  3.294612 -0.1923136 -0.3978935  0.5829798 #> [4,]  0.07987889 -1.7158004  1.050014 -0.9939521 -2.6680120  0.2642090 #> [5,]  1.01172797 -0.1018807 -2.841976 -2.0849596 -0.4872781  0.2992914 #>           y1_10      y2_10      y3_10       y1_11       y2_11      y3_11 #> [1,]  2.3831996 -1.3758294  0.4845554  1.64979582 -1.11965602  0.8464700 #> [2,]  1.2757208  1.9613728  0.3016141  0.05475791  1.07159722 -0.9080502 #> [3,] -0.2658483  0.4920791  0.5569878  0.02408590 -2.04233004  0.4163683 #> [4,]  0.4325857 -0.7117496 -0.2928771 -0.75795600 -0.03295955 -1.8552625 #> [5,] -1.2304391 -1.3019437  1.3926087 -2.27126241 -1.03470055  0.5592967 #>           y1_12      y2_12      y3_12      y1_13       y2_13      y3_13 #> [1,]  0.2986962  3.4085424 -0.5178566 -2.3503508  1.02991334 -0.9227273 #> [2,]  0.4473381 -0.6233495 -0.4735484 -0.2239352 -0.09317512  0.5644049 #> [3,]  0.6014075  0.7830307  0.6959900 -1.0477854  1.85814585 -1.1128188 #> [4,] -3.1205632  0.4237490  0.2180062 -0.3577689  0.54474564 -0.5772663 #> [5,] -1.0212046 -0.4610074 -0.8906314 -0.5504551 -0.51539350 -2.5795614 #>            y1_14      y2_14       y3_14       y1_15       y2_15       y3_15 #> [1,] -0.70897783  1.2279481 -2.88552243 -1.10910481 -0.49726091 -2.87605245 #> [2,] -1.05684353 -2.2102637  0.66448570  0.58268562  0.28523090  0.04264334 #> [3,] -1.68248836  2.8175307 -0.01904589 -0.03977694 -0.08811798  0.63116514 #> [4,] -0.06223421 -1.1343966 -1.03940884 -1.86969158 -3.15045449  1.22888055 #> [5,] -0.84613947  0.4678982 -1.18607203 -0.84415745  0.67704173  0.68194793 #>           y1_16      y2_16      y3_16       y1_17      y2_17       y3_17 #> [1,] -1.2853619 -0.2842451 -1.0167008 -0.08604294  1.7148485 -2.69775499 #> [2,]  0.9131296 -0.9245131  0.1107793 -0.30960035 -1.9897506 -0.29548962 #> [3,] -2.1860271 -1.1531789 -0.1925946 -1.08838493 -0.4985157  1.14312425 #> [4,] -0.1971206 -1.9700271  1.4993960 -0.66114376  0.5260738 -0.63517024 #> [5,]  0.6927647  1.1351382  1.1490660 -0.72492632  3.9159707  0.07542342 #>           y1_18      y2_18       y3_18       y1_19      y2_19      y3_19 #> [1,]  0.5812529 -0.2369862 -2.49272996 -0.43617985 -0.5114359  0.5075110 #> [2,] -1.0007548 -1.9941789  0.21216641 -0.29439721 -0.5181764  2.4067212 #> [3,] -1.2158110  2.5857987 -1.74920314 -0.03522969  0.5649820  1.9746364 #> [4,]  0.5566757  1.2124295 -0.41332821  0.05630755  2.1318854 -0.5604419 #> [5,]  0.6944526 -0.2262339 -0.04938728 -1.16588456  0.3797271  1.4092183 #>           y1_20      y2_20      y3_20      y1_21      y2_21      y3_21 #> [1,]  1.4113725 -0.2775884 -0.5805856  0.5153738 -0.5774842  1.3461776 #> [2,] -0.2731870 -0.2414759  1.7093432 -0.1880165  0.2443441  3.2912305 #> [3,] -0.3068359  2.1865472  1.2485908  0.7495193  1.8971623 -0.2436155 #> [4,]  0.8822642  1.7698072  2.1359884  0.8281188  0.3965071  1.4140650 #> [5,]  1.7910299  0.5259533 -0.2166186  0.7415509  1.7855709  0.3856954 #>             y1_22     y2_22      y3_22      y1_23       y2_23      y3_23 #> [1,]  3.596343553 -1.015069  0.0226050  2.5672517  1.35666661 -0.6335853 #> [2,] -0.607617672  3.498036  0.4400620  0.1506179 -0.14861547 -1.6585065 #> [3,]  0.002613899  3.302662 -0.3179609  2.6725823  2.90101024  1.6888110 #> [4,] -1.121966830  1.835665 -0.9326660 -0.5671104  0.09194007  2.9121667 #> [5,] -2.360038750  1.374296  1.1644061 -0.1364091  1.43208504  1.3060583 #>           y1_24      y2_24      y3_24      y1_25      y2_25       y3_25 #> [1,]  0.9607637  0.6095592  1.4023794  1.9757187 -0.7188623 -1.08740006 #> [2,] -0.6433440 -1.1929799 -0.2311295 -2.0777220 -1.0833064 -0.53497728 #> [3,]  1.4395645  1.5184101 -1.1831673  0.2977171  1.9956090 -1.57492885 #> [4,] -1.2977790 -0.7019866  0.5626923  0.8652171 -1.4067314  1.32993361 #> [5,] -1.2954587 -3.3133986  0.3565990  0.9956078 -1.7670528 -0.08862718 #>           y1_26      y2_26      y3_26     y1_27      y2_27       y3_27 #> [1,]  0.5135102  1.1672849 -2.7907014 -2.147634 -1.6352704  0.01636576 #> [2,]  0.2295865 -1.5825029  2.7170672  1.482373 -0.4078197 -0.71209126 #> [3,]  1.7142149  0.5874467 -1.5651869  1.362578  2.2117553 -0.82172855 #> [4,]  0.3349119 -2.8006450  0.8948044 -1.425575 -0.1066037 -1.18425988 #> [5,] -2.4743535 -0.7087822 -0.1489025 -1.033740 -0.2955502 -0.73433686 #>           y1_28      y2_28      y3_28       y1_29      y2_29      y3_29 #> [1,]  0.2899833  0.0791213 -0.4072794  1.45918868 -2.1495539  1.3943432 #> [2,]  0.5164032  0.7878999  1.2607620 -0.02535035  0.4410402  1.9206276 #> [3,] -0.6972844 -1.1158735 -1.3716504  1.55399030 -1.7740351  0.3396966 #> [4,] -0.2862932 -2.2443239 -2.5856469  2.82294540  0.7514304 -0.2535041 #> [5,]  0.3713890  1.1065388 -0.5803437  0.18063800 -0.2898897 -2.7944895 #>           y1_30      y2_30      y3_30       y1_31       y2_31      y3_31 #> [1,]  0.8209480 -1.4734985 -0.4914223 -1.24810796 -0.53574403  1.8486074 #> [2,]  2.1996889  3.4661757  1.1667738  0.80867357  1.30923202  0.2815890 #> [3,]  0.9610677  0.8411052  0.2434068  1.07834520  0.12788082  0.2485631 #> [4,]  1.0541691  2.9329244 -0.6659829 -0.33468009 -0.07606522 -1.1034329 #> [5,] -0.2233469 -0.4254074 -1.7772095  0.09860742  0.21793047  0.5524406 #>           y1_32       y2_32      y3_32     y1_33       y2_33     y3_33 #> [1,]  0.8113517 -0.46419208  2.2016191  3.415350  3.79006196 1.5123009 #> [2,]  1.5854441  2.42009251  0.8443721  2.234726  2.23747372 0.7440492 #> [3,] -1.9480654 -1.12356865 -0.9089033 -2.148746  0.01415462 1.3291999 #> [4,]  1.3299005 -0.05077669  1.3509872  1.177275 -2.20632144 1.3496753 #> [5,]  2.1090294 -1.58307664  1.6274305  1.307622  0.41535689 1.6443757 #>           y1_34      y2_34      y3_34       y1_35     y2_35      y3_35 #> [1,] -0.3304899  1.7468472  2.0719680 -0.74759469 1.4146564  1.0198628 #> [2,]  2.8031746  1.6726827  1.3227618  1.18430270 2.2366559  1.1742738 #> [3,] -1.5777140  1.2882232 -0.2606539  0.07153844 2.8709768 -0.5532294 #> [4,] -0.5338542  0.1748380 -1.1911688 -0.35455243 0.6370667  0.3190500 #> [5,]  0.2683620 -0.4900236  0.7308648  0.06128940 0.1717690  0.8057427 #>           y1_36      y2_36      y3_36       y1_37     y2_37       y3_37 #> [1,] -0.1944395  0.8854330 -0.4322774  0.07233919 -1.388633  0.05290312 #> [2,] -0.4550634 -0.8409145  1.2436593 -1.25794738 -1.652569  0.90287860 #> [3,]  1.8323151 -0.4501924  0.1842798  0.23564658  0.814098 -0.49638849 #> [4,]  1.2553414  0.2026020 -0.3143567  1.69260785 -1.309939 -0.33704338 #> [5,] -0.2327205  1.3692313  0.0351231  0.74480078 -1.156616 -0.63663308 #>             y1_38      y2_38      y3_38      y1_39     y2_39       y3_39 #> [1,]  0.443147072 -1.7593746 -1.5113774  0.5297982 -1.917194 -0.87312929 #> [2,] -0.781440030 -0.9407196  1.9675205  0.7363899 -2.988072  0.71798859 #> [3,]  0.695325057 -0.2591509 -0.3594548  0.6645011  0.551236  2.68977216 #> [4,] -1.161582117 -1.4425935 -2.0659299 -1.7393826 -0.550202 -0.03785555 #> [5,]  0.005303157  0.7985164  0.1086735 -0.8871705  1.698271  0.40879492 #>           y1_40      y2_40      y3_40      y1_41      y2_41      y3_41 #> [1,] -0.1055503 -0.6508614 -1.7886765 -1.7211278 -1.7478217 -1.3823884 #> [2,]  0.3463280 -1.1180259 -1.6974972  1.1024505 -0.6403250  0.1884423 #> [3,] -1.3303646 -0.9439727  0.8470835  0.9670889 -1.0168700  1.4387706 #> [4,]  1.9451513 -1.1986014 -0.0677613 -0.8421198 -0.7832004 -0.9559934 #> [5,]  0.6287751  0.9767175  0.9856875  0.2784196 -0.3577045 -3.0269869 #>           y1_42      y2_42       y3_42      y1_43      y2_43      y3_43 #> [1,] -3.1341750 -2.4218606 -0.34383038 -2.1621986 -0.5874906 -0.9592735 #> [2,]  1.7235042 -2.1913185 -0.99739117 -0.2502237 -0.1004548 -0.2129836 #> [3,]  0.2945571 -3.8564551  2.45672208 -0.1084257 -1.6772485  0.7707791 #> [4,] -0.4534582  1.0494567  0.05230591  0.7511409  1.2285816  1.8865604 #> [5,] -1.9687273 -0.5729698 -0.87992403 -1.5863713 -0.4946458  0.2917907 #>            y1_44      y2_44      y3_44      y1_45      y2_45      y3_45 #> [1,]  0.07684553  0.6498703 -2.0858223  0.1913725 -0.3984163  0.7564219 #> [2,]  0.38799381  0.3487298  1.1768471 -0.5165214 -0.6068654  0.1326481 #> [3,]  0.33283223 -0.7693597 -1.0345149 -0.6230276 -1.5716891  0.7956358 #> [4,] -0.16173517  1.8282077 -0.4973262 -1.6866041  2.9826468 -1.5307716 #> [5,] -0.27219374  0.6703838 -1.3712142  0.4966287 -0.3086405 -1.2083143 #>           y1_46      y2_46      y3_46       y1_47      y2_47      y3_47 #> [1,] -0.1914062 -1.5603954  0.8761995 -0.26632228 -1.4031044  1.3346467 #> [2,] -1.1978164  0.2747516 -0.1832172  0.08399896  1.3640486 -0.1636911 #> [3,] -2.8786132 -0.4584111  0.9819970 -1.15587658  0.2381519  0.4382173 #> [4,] -0.8588464  2.3200099 -0.3044024  2.72098966  1.1599923  0.6048861 #> [5,] -0.1148448  0.8002702 -1.0484130 -0.50487573  1.0964549 -4.1001085 #>           y1_48      y2_48      y3_48       y1_49      y2_49      y3_49 #> [1,] -0.2329856  1.0748771  0.7753996  0.05097052  0.8516830 -0.8218398 #> [2,] -1.2393437  0.1201421 -0.6573276 -1.72817957 -1.5878168  1.8028099 #> [3,] -2.4674501 -0.8868146 -0.2002175 -2.83662766  0.6451701  0.2810525 #> [4,]  1.2614324  0.2585708  2.4524881 -0.50741093  1.3275485  0.6990856 #> [5,] -0.5997751  1.9156734 -1.0268122 -2.21734387  0.6382063 -1.3630000  # Type 1 ssm <- SimSSMFixed(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 1,   x = x,   gamma = gamma )  head(as.matrix(ssm)) #>      id time         y1         y2         y3        x1          x2 #> [1,]  1    0 -1.3212950  1.3069112  0.2137389 1.3709584 -0.56469817 #> [2,]  1    1 -0.2229673 -1.1548953 -1.1297343 0.3631284  0.63286260 #> [3,]  1    2 -1.1754638  0.8212813 -1.4218078 0.4042683 -0.10612452 #> [4,]  1    3 -0.4145136  1.8191834  0.8619176 1.5115220 -0.09465904 #> [5,]  1    4 -0.3116308  0.8777874  2.3952392 2.0184237 -0.06271410 #> [6,]  1    5 -0.0741827  0.1952049  2.2593628 1.3048697  2.28664539 head(as.matrix(ssm, long = FALSE)) #>      id        y1_0        y2_0       y3_0         x1_0       x2_0        y1_1 #> [1,]  1 -1.32129502  1.30691121  0.2137389  1.370958447 -0.5646982 -0.22296728 #> [2,]  2  0.06803976 -0.04990546  0.5051611  1.200965376  1.0447511 -0.27313571 #> [3,]  3 -1.29748492 -2.91033474 -2.1032602 -2.000929238  0.3337772  0.05172567 #> [4,]  4 -0.25584749 -0.25219544  1.3222454 -0.004620768  0.7602422 -0.96322916 #> [5,]  5  1.36620158  1.35333546 -0.6372020  1.334912585 -0.8692718  0.78256512 #>             y2_1        y3_1        x1_1       x2_1        y1_2       y2_2 #> [1,] -1.15489529 -1.12973434  0.36312841 0.63286260 -1.17546383 0.82128133 #> [2,]  0.23540119 -0.05306924 -1.00320865 1.84848190 -1.09640628 0.66881405 #> [3,]  0.19611625 -0.90129537  1.17132513 2.05953924  1.12632688 0.08719612 #> [4,] -0.02352759 -0.19357488  0.03899091 0.73507214  0.07984138 0.52840906 #> [5,] -0.94363718  0.41208380  0.05548695 0.04906691 -1.21504746 0.43538045 #>            y3_2       x1_2        x2_2       y1_3      y2_3       y3_3 #> [1,] -1.4218078  0.4042683 -0.10612452 -0.4145136 1.8191834  0.8619176 #> [2,] -1.3358199 -0.6667734  0.10551381 -0.7999442 0.7045620 -0.4957978 #> [3,] -1.1610320 -1.3768616 -1.15085557  2.2700874 2.7845463 -0.5357065 #> [4,]  1.8357221 -0.1464726 -0.05788734  0.4556301 1.8346636  0.7831771 #> [5,] -0.8136944 -0.5783557 -0.99873866 -0.7081730 0.8893509  3.6320074 #>             x1_3        x2_3          y1_4       y2_4       y3_4       x1_4 #> [1,]  1.51152200 -0.09465904 -0.3116308457  0.8777874  2.3952392  2.0184237 #> [2,] -0.42225588 -0.12235017  0.0003275326 -1.1810319 -0.0725149  0.1881930 #> [3,] -0.70582139 -1.05405578  0.0523547052  1.5919880  0.7848450 -0.6457437 #> [4,]  0.48236947  0.99294364  1.0515491779  2.4426596  0.7943206 -1.2463955 #> [5,] -0.00243278  0.65551188 -2.6143792827  1.2718223  2.8713631  1.4768423 #>             x2_4       y1_5       y2_5      y3_5        x1_5       x2_5 #> [1,] -0.06271410 -0.0741827  0.1952049 2.2593628  1.30486965  2.2866454 #> [2,]  0.11916096 -1.3228055  0.3247527 1.9619418 -0.02509255  0.1080727 #> [3,] -0.18537797 -0.4094134  0.6089027 0.2004189 -1.20122205  2.0369722 #> [4,] -0.03348752  2.2540317 -0.3995432 1.6048742 -0.07096218 -0.7589207 #> [5,] -1.90915279 -1.5389980  1.0286935 1.2371762 -0.70243947 -0.3114302 #>            y1_6       y2_6       y3_6       x1_6       x2_6       y1_7 #> [1,] -0.4368443  2.0929767 -0.1627264 -1.3888607 -0.2787888 -0.9313803 #> [2,] -0.4160145  0.0470476  1.1472796 -0.4854352 -0.5042171 -1.4850458 #> [3,] -3.1257716  0.9779773 -0.1317061  0.1077747 -0.0841081  0.6404262 #> [4,]  1.3679994 -2.4941578 -0.7912684 -1.0343594 -0.6307320 -0.6828575 #> [5,]  0.5103027  0.0342447  2.1412550 -1.6631570 -0.7505334 -1.5170361 #>           y2_7       y3_7       x1_7        x2_7       y1_8       y2_8 #> [1,]  2.423123  1.8765506 -0.1333213  0.63595040  1.3555973  0.2776942 #> [2,] -1.194179  0.1440756 -1.6610991 -0.38233373  0.1689121 -0.8308893 #> [3,]  2.360186  0.8461550  0.4956196  0.03741519 -0.6297808  2.3492915 #> [4,] -1.932106 -1.2325272  0.5868077 -0.41632266  1.0278824 -3.0135325 #> [5,] -1.277911  0.2377416 -0.7773518 -0.72256970  0.4862914 -1.8894371 #>            y3_8       x1_8       x2_8        y1_9       y2_9       y3_9 #> [1,]  0.3336033 -0.2842529 -2.6564554  0.44476374  2.0663970 -0.3115522 #> [2,]  2.0655163 -0.5126503  2.7018910 -0.96189170 -0.4509793  1.9482290 #> [3,]  0.8100695 -0.1320880  1.4767874  0.80833110  0.2288769 -0.3313643 #> [4,] -0.0690037 -0.7848878  0.1634163 -0.03444984 -0.7515914  0.7226250 #> [5,] -0.2718721 -2.1888346  0.2134186 -1.76555996 -2.2453781 -0.7889341 #>            x1_9       x2_9      y1_10     y2_10     y3_10      x1_10      x2_10 #> [1,] -2.4404669  1.3201133  1.0940299  1.551743 -3.457191 -0.3066386 -1.7813084 #> [2,] -1.3621162  0.1372562 -1.8715290  1.768182  1.680022 -1.4936251 -1.4704357 #> [3,] -0.2170302 -1.2836022 -1.3556844  2.128277  3.247484  0.3856679 -0.3515129 #> [4,] -1.2367142  1.0458738  0.6706872 -1.726603  2.009070 -0.4845954  0.1891288 #> [5,] -0.6319229  1.5204912 -1.7029262 -1.546746 -1.579077  0.7959559 -1.4535296 #>           y1_11     y2_11      y3_11       x1_11         x2_11     y1_12 #> [1,]  1.6080070  1.341208 -0.7619126 -0.17191736  1.2146746992 1.9193308 #> [2,]  0.9153270  1.200346  1.3312963  0.12470239 -0.9966391349 1.6719831 #> [3,] -0.7769676  1.198546  3.6750765 -0.52179609 -1.0681312007 0.1247800 #> [4,]  0.1231655 -1.289442  2.6975231  0.05100633 -0.0002406689 1.9714391 #> [5,] -1.9696088 -4.089331 -1.2921864  0.09839542 -0.5937709842 0.9537555 #>           y2_12       y3_12        x1_12       x2_12     y1_13      y2_13 #> [1,]  2.0938548  2.17045341  1.895193461 -0.43046913  1.982597  1.0425821 #> [2,]  1.5324441  0.69583843 -0.001822614 -0.42825888 -1.064327  2.4528216 #> [3,]  1.7248144  1.68928420  0.428365903 -0.17401823 -3.914508 -0.3014104 #> [4,] -2.2886164 -0.02502037  1.809382042 -0.82532796  1.957702 -0.7604525 #> [5,]  0.1167135 -0.55523419  0.888281169  0.05307042 -1.773687 -1.1221734 #>            y3_13      x1_13       x2_13      y1_14      y2_14      y3_14 #> [1,]  0.03182284 -0.2572694 -1.76316309  1.1224173  0.9823196  0.6673541 #> [2,] -0.86275293 -0.6136716 -2.02467785  0.3482144  1.9676994 -0.4420744 #> [3,]  0.56301961  0.5156677 -0.23436528 -2.6245766 -0.8698393 -1.7154935 #> [4,]  0.34113488  1.1454705  0.03157319 -0.3332116 -0.9814938  1.7911445 #> [5,] -1.32431578 -0.5570236  0.43839704 -0.4898259 -1.7693607  0.1158383 #>           x1_14       x2_14      y1_15      y2_15       y3_15      x1_15 #> [1,]  0.4600974 -0.63999488 -0.6952325  1.0229887  1.66293082  0.4554501 #> [2,] -1.2247480  0.17951644  0.1102308  1.6923343 -0.07650175  0.5676206 #> [3,] -0.6585034  1.25023660 -2.2388038 -2.0003179 -0.47657878 -0.2717637 #> [4,] -0.8352058 -0.06876365  1.1053596 -0.2092331  0.93481928  0.7467717 #> [5,]  0.1526082 -0.16461758  0.6003556 -1.4797100 -2.04300966  2.0198906 #>           x2_15       y1_16      y2_16      y3_16         x1_16      x2_16 #> [1,]  0.7048373 -0.07084522 -0.5595938  0.2004234  1.035104e+00 -0.6089264 #> [2,] -0.4928774  0.59248600 -0.4661674 -0.1810490  6.288407e-05  1.1228896 #> [3,]  0.9479520 -2.85135034 -0.4035567 -1.0487320 -1.201582e+00 -0.4661161 #> [4,] -0.4255187  1.99492931 -2.6126058  1.1768557 -7.720822e-01  0.1527641 #> [5,] -0.5293859  1.16386902 -1.6207066  0.0318715 -4.707870e-01 -1.5459369 #>            y1_17       y2_17      y3_17       x1_17       x2_17      y1_18 #> [1,] -1.43406576 -1.52341239  0.3344811  0.50495512 -1.71700868  0.2647052 #> [2,]  0.32089263  1.44632469 -0.8328417  1.43985574 -1.09711377 -0.5119163 #> [3,]  2.24942801  0.09748498 -1.2315448 -0.26935140 -0.39096541  2.0495729 #> [4,]  1.84507091 -1.04563662  1.9960705  0.98859685 -0.07345833  1.3493736 #> [5,]  0.09640684 -0.78013019 -0.3272448 -0.04052672  0.89035631  1.1458171 #>            y2_18      y3_18      x1_18      x2_18       y1_19       y2_19 #> [1,]  0.37468039  2.6737476 -0.7844590 -0.8509076 -0.76282546  0.06189121 #> [2,] -0.03934419 -0.8031779 -0.1173196  1.2014984 -1.24289238 -1.18786430 #> [3,] -0.94087452 -1.5905452  1.3487070 -0.0227647 -1.23929468  0.19919403 #> [4,] -0.03620265  1.3392054 -1.3870266 -1.3066759  0.01149444 -2.85293147 #> [5,]  0.14204054 -2.5427818 -2.0713879 -0.2500651  0.27888846 -2.47708708 #>           y3_19      x1_19       x2_19       y1_20      y2_20      y3_20 #> [1,]  2.8808639 -2.4142076  0.03612261 -0.71114553 -2.5089723 -0.8309464 #> [2,]  2.1575269 -0.4697296 -0.05246948  0.02807218  1.2439153  1.4833495 #> [3,] -1.4852461  0.2442259 -0.94237171 -0.81764122  1.0367502 -0.8555348 #> [4,]  2.3386243 -0.7683953 -0.52710813  0.55518284  0.2245032  0.6364247 #> [5,]  0.5582733 -1.1816504  1.44193727  0.09094230 -1.1840430  0.4087034 #>            x1_20      x2_20      y1_21      y2_21      y3_21      x1_21 #> [1,]  0.20599860 -0.3610573 -2.5260087 -1.3048137 -1.3981766  0.7581632 #> [2,] -0.08610730 -0.8876790 -0.3199901  2.2064632  0.6489734 -0.4446840 #> [3,] -0.72921728  0.9980689  0.0996544 -0.4360866  0.6828378  1.2584817 #> [4,] -0.02142707  0.6704981  1.2731180  0.4635977 -0.2848650 -0.4346170 #> [5,]  1.35789554  0.3345028  3.8716091  0.2527161  0.8965945  1.4293381 #>            x2_21      y1_22      y2_22       y3_22      x1_22      x2_22 #> [1,] -0.72670483  0.3521247 -1.0971151  0.21790193 -1.3682810  0.4328180 #> [2,] -0.02944488  0.6911039  1.1117158 -0.72756334 -0.4138688  1.1133860 #> [3,]  1.24886369 -1.9390432 -1.1699622  1.36893560 -1.3806370  2.0499607 #> [4,] -1.11387978 -1.1151190  0.1135364  0.05691346  0.6071060  0.2754570 #> [5,] -0.86731785  2.0364593 -1.9058403 -0.03871032  0.9506517 -0.5850115 #>           y1_23      y2_23      y3_23      x1_23       x2_23      y1_24 #> [1,]  1.3176657 -2.1642990 -0.6796242 -0.8113932  1.44410126  1.3391641 #> [2,]  1.4954691  0.7122494  0.3633060 -0.4809928 -0.43316903  1.0337595 #> [3,] -1.7492765  1.3050955 -0.3266634  1.0168728 -0.02671746 -0.6841845 #> [4,] -0.2646706  0.5000499  2.1818351  1.1573471 -1.68248086 -1.0163380 #> [5,]  1.2545266  0.3112625 -2.1339148  0.3209575 -0.29939602  0.2409194 #>            y2_24      y3_24       x1_24      x2_24      y1_25      y2_25 #> [1,] -0.82130880 -0.0752571 -0.43144620  0.6556479  0.8216689 -1.8147205 #> [2,] -0.06397518 -0.5531983  0.69686258 -1.0563684 -0.7541386 -2.1541924 #> [3,]  3.16868302  1.5155881  0.70360778 -0.9713852  0.1454184  0.3460727 #> [4,] -0.42079016  3.0327701  0.08731909  1.3533619 -1.9542314  0.7789802 #> [5,]  0.18425062 -2.2777921 -0.27854308  0.5461152 -0.2883920 -1.8790973 #>           y3_25       x1_25       x2_25     y1_26      y2_26      y3_26 #> [1,]  0.2288761  0.32192527 -0.78383894  1.479689  0.7835702 -0.4119303 #> [2,]  2.0231696 -0.04069848 -1.55154482 -1.204166 -0.4808715 -0.5025113 #> [3,]  0.2923802 -1.09615624  0.04905045  2.080418 -1.9194933  0.3897390 #> [4,]  1.6673886  0.72417380 -0.83255283 -1.172532  1.1331902  2.3754289 #> [5,] -1.3474831 -1.30382115 -0.25091447  1.368135 -2.2429527 -2.5437840 #>           x1_26      x2_26       y1_27      y2_27     y3_27       x1_27 #> [1,]  1.5757275  0.6428993  1.91209020  1.5502746 -1.005937  0.08976065 #> [2,]  1.1671695 -0.2736457 -0.63264824  1.0368186 -1.620818 -0.46784532 #> [3,] -1.1984959  0.1900190  0.51148147  0.0728170 -3.060578  1.29770590 #> [4,]  0.7325285 -0.8719269 -0.37614524  2.4562279  3.266426 -0.45339751 #> [5,]  0.1710074 -0.4034675  0.09799243 -0.4597594 -2.391649  0.10465944 #>           x2_27      y1_28      y2_28      y3_28        x1_28       x2_28 #> [1,]  0.2765507  2.2630026  0.2672299 -1.9253959  0.679288816  0.08983289 #> [2,] -1.2382523  0.1246215 -0.5721696  0.6460846 -0.007762034 -0.80028218 #> [3,] -1.0338737  2.4021004 -0.5177981 -0.3705207 -0.738440754  0.04656394 #> [4,]  1.1875343 -0.4664616  1.4204688  3.5127039 -0.290145312  0.82854614 #> [5,] -0.3188808  1.4656842 -0.6122942 -1.5410249  1.618343936  0.71418860 #>           y1_29      y2_29      y3_29      x1_29      x2_29       y1_30 #> [1,]  0.5184740  1.3615360  1.4310673 -2.9930901  0.2848830  0.08042765 #> [2,] -0.6565600 -0.8537611  0.8903193 -0.5334923  1.2876752 -0.21823923 #> [3,]  0.5111742 -2.4207984  1.4869472 -1.0175961 -0.3832840  1.01685499 #> [4,]  0.0876693 -0.3946798  2.4726918 -0.2912277 -1.5763624 -1.11657467 #> [5,]  1.0471282 -0.7406853 -2.5462526  2.9658654 -0.7950776 -0.04829977 #>            y2_30      y3_30      x1_30      x2_30      y1_31      y2_31 #> [1,] -0.53075827 -0.3826375 -0.3672346  0.1852306 -0.7575300  1.0660180 #> [2,] -2.74552124  1.6616192 -0.1755259 -1.0717824 -1.5893939 -0.9641858 #> [3,] -1.50281241  1.4140044  0.8727554  0.9695450  2.8954413 -0.8172052 #> [4,]  0.62752893  0.6372705 -0.8488157 -1.0885199 -0.5761493  0.6555097 #> [5,] -0.05633085 -2.6124751  0.8143659  2.0980308  2.2346414 -1.3267072 #>           y3_31      x1_31      x2_31      y1_32      y2_32      y3_32 #> [1,] -1.1937923  0.5818237  1.3997368 -0.8657861  1.1594111  1.5843125 #> [2,]  1.4969122  0.1632069 -0.3627384 -0.3281431 -0.2782823 -2.7009377 #> [3,]  1.0713061  0.3838467 -1.8515557  1.9802173 -1.1335253 -1.4082145 #> [4,] -0.8429513 -0.4842906 -0.3363112  0.6702878  1.6342009  0.1738516 #> [5,]  0.2265222  0.3009801 -1.0830751  0.6742349 -1.6456944  0.7162619 #>            x1_32       x2_32      y1_33     y2_33       y3_33      x1_33 #> [1,] -0.72729206  1.30254263 -1.7608815 0.7269482  1.89270783  0.3358481 #> [2,]  0.59001355  1.43242193 -0.2476019 1.0308517 -0.84104312 -0.9926925 #> [3,] -0.05399674  1.06477321 -2.0353089 1.5750707 -0.03280635  0.8131950 #> [4,] -0.15335789 -0.24324723  0.3690930 0.8654226 -0.33863586  1.8922020 #> [5,] -1.00632250 -0.03541456 -1.2679077 0.5067678  2.24073481  1.3091244 #>           x2_33      y1_34      y2_34      y3_34       x1_34       x2_34 #> [1,]  1.0385061 -0.8768112  1.1036715  2.2148850  0.92072857  0.72087816 #> [2,]  0.4546503  1.8621741 -0.4604311 -0.1387278  0.08489806  0.89556558 #> [3,] -0.1908165 -0.4522141  0.2369424 -0.1114640 -2.69992981  0.06096664 #> [4,] -1.3859983  0.6567835  1.9270995  0.6349295 -0.41482430  0.34908153 #> [5,]  0.7504005 -2.1886602 -1.7674955  1.4045945 -2.13836833 -0.70035411 #>           y1_35      y2_35      y3_35        x1_35       x2_35      y1_36 #> [1,]  0.3397298  0.8155806 -0.3256500 -1.043118939 -0.09018639  2.0467294 #> [2,]  0.7237191  0.2834713  0.5157692 -0.229778139  0.83661907 -1.6404856 #> [3,] -0.3752383 -0.7829329 -0.8206978  0.573751697  0.04580358  0.1458506 #> [4,] -0.2851125  0.6157689 -3.8247503  1.628442266  0.08852190  0.1730077 #> [5,] -1.8370658  1.0129193 -1.8720094 -0.009056475 -1.45813349 -1.8592593 #>           y2_36      y3_36      x1_36      x2_36      y1_37       y2_37 #> [1,]  0.1813455  1.6271317  0.6235182 -0.9535234  1.7177961  1.93999530 #> [2,]  2.9320693  0.4389722 -1.7450559  1.6894589  1.1006471  0.91649600 #> [3,]  0.2831584 -0.0647262  0.1574125  0.4315654  2.8766446  0.02653138 #> [4,]  0.9797463  0.5413674  1.2391507 -1.6445555 -0.3845699 -0.40591425 #> [5,] -1.4851963 -2.2134587  0.6945296 -2.4613355 -1.1164536 -1.15210573 #>           y3_37      x1_37      x2_37      y1_38     y2_38     y3_38      x1_38 #> [1,]  2.3291989 -0.5428288  0.5809965  0.5806455 0.5890687 0.9236375  0.7681787 #> [2,] -0.5028793  0.8647780 -0.1507760 -1.5437966 0.7768215 0.0760361 -1.4490071 #> [3,]  0.5382699 -0.3965497  1.3099782  0.3231083 1.0383649 0.2899639  0.4703934 #> [4,] -1.1825058  1.4463565 -0.6905602 -2.5216510 1.4791234 0.8107824 -0.2764311 #> [5,] -0.6631066  0.1432898 -0.3912221  0.6531909 0.1385496 0.4259709 -0.4911641 #>           x2_38      y1_39      y2_39      y3_39      x1_39        x2_39 #> [1,]  0.4637676  2.0052886 -0.3835412  2.5304392 -0.8857763 -1.099780899 #> [2,]  0.6430087  0.1418797  0.7309179 -1.0435802  0.4831939 -0.006355626 #> [3,] -1.2426703  1.3222493  0.1552634  1.0564194  1.3815755  1.204458937 #> [4,] -1.1094188 -2.8024327  1.1789045  0.5664178  0.1338693  1.785339052 #> [5,] -0.2836475 -2.9328006  1.4429639  0.5536245  0.3147948  0.396326578 #>           y1_40       y2_40      y3_40      x1_40      x2_40      y1_41 #> [1,] -0.2652305  1.50027725  0.9250186  1.5127070  0.2579214  0.1309740 #> [2,]  0.5980214 -0.76641709  0.2154274  0.1514559 -0.5841090  1.2234728 #> [3,]  2.1905223  0.05355728 -0.7026008  0.8240740 -1.6626294 -0.2257734 #> [4,] -0.3865157  0.97305800  1.2350377  2.4221634 -1.0768289 -0.2699938 #> [5,]  0.1574557 -0.98809480  0.8396418 -0.2256037 -1.9249504 -2.4896525 #>           y2_41       y3_41       x1_41      x2_41      y1_42       y2_42 #> [1,]  0.8219069 -0.01472055  0.08844023 -0.1208965 -0.9430371 -0.96621247 #> [2,]  2.1725154 -1.85474634  0.36880673  0.2946543  0.8238318  0.65315701 #> [3,] -0.4322122 -0.30076709 -0.56930634  0.6355138 -0.5528709  0.40038204 #> [4,]  0.1163131  0.17479170  0.48594111  1.3885217 -0.7994950 -0.07212676 #> [5,] -0.9838587 -0.19082061 -1.43922930 -1.4696578 -2.4903470 -0.71147283 #>           y3_42       x1_42      x2_42       y1_43      y2_43      y3_43 #> [1,] -0.7748278 -1.19432890  0.6119969 -0.10121621  1.8060507  0.4460444 #> [2,]  0.8901553 -0.27925937 -1.3362367  0.61060692 -0.3885625 -1.0955178 #> [3,]  1.3984393  0.04372201  0.3480123  0.45115331 -2.0828687  1.6863428 #> [4,] -0.3533231 -0.19565682 -0.2181748 -0.04885723 -1.0599949  0.6701214 #> [5,] -1.1043962  0.76186345 -0.2436150 -0.16237658 -0.2331553 -0.6697140 #>           x1_43      x2_43     y1_44     y2_44       y3_44      x1_44 #> [1,] -0.2171398 -0.1827567 -1.457261 -0.702341 -0.02497946  0.9333463 #> [2,]  0.7007488  0.5541966 -2.175534 -1.107481 -1.26217429 -0.8363066 #> [3,]  2.4595935 -0.8183803  1.952765 -2.492334  0.00432441 -2.1132001 #> [4,] -0.3047780  0.5978327  2.512454 -2.018226  0.16243943  1.3974294 #> [5,]  0.2696766 -1.5589275 -3.896427  2.019988 -0.04529128 -0.5355880 #>           x2_44      y1_45      y2_45      y3_45      x1_45      x2_45 #> [1,]  0.8217731 -0.9831391  0.9994024  3.1503015  1.3921164 -0.4761739 #> [2,] -1.5945882  0.7340985 -0.7533449 -2.1924199  0.2049586 -0.3450880 #> [3,]  0.2736953  2.2299542  0.4874205  0.4514499 -0.6875968  0.4460411 #> [4,]  0.6876198  2.1679166 -1.5166678 -1.3601942  0.3201880 -0.3018699 #> [5,]  0.5624520  0.6531392  1.3666939  1.7850713 -0.1783261 -0.1151360 #>           y1_46       y2_46       y3_46       x1_46      x2_46      y1_47 #> [1,] -0.5168949  1.24877752 -0.49639914  0.65034856  1.3911105 -3.6370966 #> [2,]  1.5346657 -0.94852167 -0.02162973  0.25261170 -1.2940025  1.0756810 #> [3,]  1.4045247  1.45055467  0.35575850 -0.81238472  2.2120555 -0.0574027 #> [4,]  3.2596240  0.12775727 -0.38482344  0.49834869 -0.5495369  1.8684240 #> [5,]  0.4616186 -0.06109306  1.49734976 -0.07206147  1.2109098  0.7463014 #>            y2_47      y3_47      x1_47      x2_47      y1_48       y2_48 #> [1,]  0.02088656  0.2411616 -1.1107889 -0.8607926  0.2395879 -0.06391602 #> [2,]  1.03974512 -0.5862474 -0.9591704  1.0857749  3.0474133  1.33874980 #> [3,]  0.91049398  0.8101820 -0.1237060 -0.4773355  1.5218235 -0.50759186 #> [4,] -0.15782705 -1.6212787 -0.2792565  1.0965134  2.4411195  0.78024158 #> [5,] -1.45892392  0.3547960 -0.6148969  0.6761265 -0.6336531 -0.83164252 #>          y3_48      x1_48      x2_48      y1_49      y2_49       y3_49 #> [1,]  1.908043 -1.1317387 -1.4592140  0.3583062  1.3518190  1.55417479 #> [2,]  0.559258  0.4037749  0.5864875  2.4212966 -0.3200761 -0.06399690 #> [3,]  1.018314 -0.1662615  0.8625634 -0.1229318 -3.3831398  0.51101047 #> [4,] -2.333490  0.4420131  0.2410163  0.9136470 -0.8633060 -0.22048714 #> [5,] -2.093679  0.8985996 -1.1893179 -0.1293048  0.4391199  0.06054169 #>            x1_49       x2_49 #> [1,]  0.07998255  0.65320434 #> [2,]  1.81522845  0.12882143 #> [3,]  0.09734049 -1.62561674 #> [4,] -0.25560766  0.93103290 #> [5,]  0.12125885 -0.01122169  # Type 2 ssm <- SimSSMFixed(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 2,   x = x,   gamma = gamma,   kappa = kappa )  head(as.matrix(ssm)) #>      id time         y1         y2        y3        x1          x2 #> [1,]  1    0 -2.2617108 -0.7667176 0.5340921 1.3709584 -0.56469817 #> [2,]  1    1  0.9759577  0.5206830 1.1328299 0.3631284  0.63286260 #> [3,]  1    2  1.4864513  1.5139406 0.7636724 0.4042683 -0.10612452 #> [4,]  1    3  0.6895916 -1.4110927 0.5326012 1.5115220 -0.09465904 #> [5,]  1    4 -2.0426250 -1.6092847 2.9555453 2.0184237 -0.06271410 #> [6,]  1    5  0.1554637 -0.2390945 0.7660269 1.3048697  2.28664539 head(as.matrix(ssm, long = FALSE)) #>      id        y1_0       y2_0       y3_0         x1_0       x2_0        y1_1 #> [1,]  1 -2.26171084 -0.7667176  0.5340921  1.370958447 -0.5646982  0.97595771 #> [2,]  2 -0.01083935  1.2735290  2.1028202  1.200965376  1.0447511 -1.22065483 #> [3,]  3 -1.17628203  1.5504647 -0.4657054 -2.000929238  0.3337772 -0.16068750 #> [4,]  4 -1.09443990  0.7378863 -1.5560017 -0.004620768  0.7602422 -0.33062582 #> [5,]  5  2.91767302  0.2292802  1.1298055  1.334912585 -0.8692718  0.06649816 #>            y2_1       y3_1        x1_1       x2_1       y1_2       y2_2 #> [1,]  0.5206830  1.1328299  0.36312841 0.63286260  1.4864513  1.5139406 #> [2,]  2.3612218  1.1376440 -1.00320865 1.84848190 -0.4653553  0.5947964 #> [3,]  0.7164697 -0.5730460  1.17132513 2.05953924 -1.6635127  0.2287985 #> [4,]  0.5212429  0.9009251  0.03899091 0.73507214 -0.7938779 -0.3201251 #> [5,] -1.0677271  2.2473308  0.05548695 0.04906691 -0.3308651 -0.5287427 #>             y3_2       x1_2        x2_2       y1_3       y2_3       y3_3 #> [1,]  0.76367243  0.4042683 -0.10612452  0.6895916 -1.4110927  0.5326012 #> [2,] -0.44834655 -0.6667734  0.10551381 -0.7405792 -0.5751752  1.2894237 #> [3,]  0.10846422 -1.3768616 -1.15085557 -0.3987294 -2.2224797 -0.2573785 #> [4,]  0.09072877 -0.1464726 -0.05788734  1.2413697  2.0108480  1.0675637 #> [5,] -0.39058089 -0.5783557 -0.99873866  0.4627781  0.7531802 -1.4845421 #>             x1_3        x2_3        y1_4       y2_4        y3_4       x1_4 #> [1,]  1.51152200 -0.09465904 -2.04262498 -1.6092847  2.95554532  2.0184237 #> [2,] -0.42225588 -0.12235017  0.08938988 -2.1971766 -0.29360369  0.1881930 #> [3,] -0.70582139 -1.05405578 -1.04567361 -2.2322137  0.94546923 -0.6457437 #> [4,]  0.48236947  0.99294364 -0.41209094 -0.6080460  2.11912321 -1.2463955 #> [5,] -0.00243278  0.65551188 -0.16190873  0.9545628  0.09236095  1.4768423 #>             x2_4       y1_5       y2_5       y3_5        x1_5       x2_5 #> [1,] -0.06271410  0.1554637 -0.2390945  0.7660269  1.30486965  2.2866454 #> [2,]  0.11916096 -0.3856124  1.0283889  0.4224272 -0.02509255  0.1080727 #> [3,] -0.18537797 -1.1221677 -1.7405010  1.4310039 -1.20122205  2.0369722 #> [4,] -0.03348752  1.6593916 -2.2213285  0.5968630 -0.07096218 -0.7589207 #> [5,] -1.90915279 -1.1067060 -0.3530877 -0.1913458 -0.70243947 -0.3114302 #>            y1_6        y2_6      y3_6       x1_6       x2_6       y1_7 #> [1,] -0.3577100 -1.11826529 0.3574445 -1.3888607 -0.2787888 -0.9035040 #> [2,] -0.2227387 -0.44385541 0.2499583 -0.4854352 -0.5042171  0.8001131 #> [3,] -0.7254209  0.34005317 1.5168391  0.1077747 -0.0841081 -1.8839166 #> [4,] -2.7752740 -1.45383703 0.8223615 -1.0343594 -0.6307320 -3.4695359 #> [5,]  0.1157016  0.01079781 1.8961065 -1.6631570 -0.7505334  2.1013598 #>            y2_7       y3_7       x1_7        x2_7       y1_8       y2_8 #> [1,]  1.6431612 -0.5654410 -0.1333213  0.63595040 -0.3055039  0.5140589 #> [2,] -0.3852358 -0.6260134 -1.6610991 -0.38233373  0.6097453  0.3018880 #> [3,] -1.3832898  0.8759856  0.4956196  0.03741519 -0.9261098  0.8598035 #> [4,] -0.2338029 -2.2144320  0.5868077 -0.41632266 -3.0403706 -1.7676560 #> [5,] -0.3598088  0.8637659 -0.7773518 -0.72256970 -0.6761900 -0.3791144 #>            y3_8       x1_8       x2_8       y1_9       y2_9       y3_9 #> [1,]  1.3956298 -0.2842529 -2.6564554  0.7170630  0.9319849  1.7523587 #> [2,] -0.2750748 -0.5126503  2.7018910  1.0110175  1.1011928 -2.1915604 #> [3,]  0.1280309 -0.1320880  1.4767874  0.1551347 -0.3676341  0.3566809 #> [4,] -0.5040090 -0.7848878  0.1634163 -1.6478691 -1.7046013 -0.8163977 #> [5,]  1.4061523 -2.1888346  0.2134186 -2.1447521  0.9616863  1.7582653 #>            x1_9       x2_9       y1_10       y2_10      y3_10      x1_10 #> [1,] -2.4404669  1.3201133  0.61528870  0.06595301  0.3283583 -0.3066386 #> [2,] -1.3621162  0.1372562  1.84601432  1.07596242 -1.1666866 -1.4936251 #> [3,] -0.2170302 -1.2836022 -0.85339502 -0.02230328  1.9582845  0.3856679 #> [4,] -1.2367142  1.0458738  0.07623835 -2.27620204  0.2104809 -0.4845954 #> [5,] -0.6319229  1.5204912  0.44929767  0.23189896  0.1892874  0.7959559 #>           x2_10      y1_11      y2_11      y3_11       x1_11         x2_11 #> [1,] -1.7813084 -0.6584546  1.1780206  2.2128578 -0.17191736  1.2146746992 #> [2,] -1.4704357  1.3268751  1.4581645  1.6710793  0.12470239 -0.9966391349 #> [3,] -0.3515129 -2.3708827 -1.0934615 -2.3682302 -0.52179609 -1.0681312007 #> [4,]  0.1891288 -1.4402695 -0.3698054 -1.1972837  0.05100633 -0.0002406689 #> [5,] -1.4535296  0.5914779  2.3065489 -0.6066982  0.09839542 -0.5937709842 #>           y1_12      y2_12      y3_12        x1_12       x2_12      y1_13 #> [1,] -1.6574764  1.8291666  0.2199046  1.895193461 -0.43046913 -2.2151404 #> [2,]  1.1932733 -0.1249057 -0.6931150 -0.001822614 -0.42825888 -0.1552379 #> [3,] -0.3379368 -0.1078337  1.3526176  0.428365903 -0.17401823  1.1126262 #> [4,]  0.1015011 -0.7048022 -1.1787278  1.809382042 -0.82532796  2.0640866 #> [5,] -1.2065887  0.2941488 -1.7351641  0.888281169  0.05307042 -0.4365304 #>            y2_13      y3_13      x1_13       x2_13       y1_14      y2_14 #> [1,] -0.42539203 -1.8083666 -0.2572694 -1.76316309 -1.42026784 -0.5793268 #> [2,] -0.06603291  0.7551181 -0.6136716 -2.02467785  1.33106571  0.2816104 #> [3,] -1.11051383 -0.3005570  0.5156677 -0.23436528 -1.18306966 -2.7370652 #> [4,] -1.93662451  1.5293285  1.1454705  0.03157319  0.08559636  1.0091553 #> [5,] -1.07341658  0.2023655 -0.5570236  0.43839704  0.08712358 -1.4457050 #>           y3_14      x1_14       x2_14      y1_15       y2_15      y3_15 #> [1,] -0.6061088  0.4600974 -0.63999488 -0.9428814  0.59601820  2.1629074 #> [2,] -2.1650570 -1.2247480  0.17951644  1.0131716  0.03519945 -1.1499958 #> [3,] -0.1639112 -0.6585034  1.25023660 -0.2079178 -0.26248612 -0.1580101 #> [4,]  2.6040149 -0.8352058 -0.06876365 -0.3314998  0.24641057  3.5398440 #> [5,]  0.3418526  0.1526082 -0.16461758 -0.7151986  0.08833419  1.0854586 #>           x1_15      x2_15      y1_16      y2_16       y3_16         x1_16 #> [1,]  0.4554501  0.7048373 -0.3427984  0.7387568  1.10667527  1.035104e+00 #> [2,]  0.5676206 -0.4928774  0.6484758  0.7295049 -0.91152816  6.288407e-05 #> [3,] -0.2717637  0.9479520 -2.2845259  2.6062737 -0.16398670 -1.201582e+00 #> [4,]  0.7467717 -0.4255187  0.3390863 -0.4424833  3.00894938 -7.720822e-01 #> [5,]  2.0198906 -0.5293859 -0.3580190 -0.8553143 -0.06110253 -4.707870e-01 #>           x2_16      y1_17      y2_17      y3_17       x1_17       x2_17 #> [1,] -0.6089264  0.7831213  2.5436538 -1.9466145  0.50495512 -1.71700868 #> [2,]  1.1228896 -1.3577298 -1.2937834  0.9420950  1.43985574 -1.09711377 #> [3,] -0.4661161 -0.6930692  1.6987587 -1.3298241 -0.26935140 -0.39096541 #> [4,]  0.1527641  2.0548933 -0.4498286 -1.3480820  0.98859685 -0.07345833 #> [5,] -1.5459369 -0.7032934 -0.3767284  0.4782274 -0.04052672  0.89035631 #>           y1_18        y2_18      y3_18      x1_18      x2_18       y1_19 #> [1,] -0.1979541  0.934651116 -2.4605171 -0.7844590 -0.8509076  0.09501072 #> [2,]  1.0538112  0.482245291 -0.2161476 -0.1173196  1.2014984  0.55752311 #> [3,] -0.1742509  0.002553713 -0.5221625  1.3487070 -0.0227647 -2.30534138 #> [4,] -0.2050521 -0.620461603 -0.2960910 -1.3870266 -1.3066759 -1.54067494 #> [5,]  0.5126820 -0.990310060 -1.6786754 -2.0713879 -0.2500651 -1.24765403 #>           y2_19       y3_19      x1_19       x2_19       y1_20      y2_20 #> [1,] 0.16565982 -2.67127807 -2.4142076  0.03612261  0.06524747  0.1468387 #> [2,] 1.63942582 -0.06732495 -0.4697296 -0.05246948  0.57675232 -0.2908006 #> [3,] 1.66243142 -1.05916120  0.2442259 -0.94237171 -3.28260298  1.3880891 #> [4,] 0.01575045  0.76033397 -0.7683953 -0.52710813 -0.62321824  0.9650449 #> [5,] 0.38733170  0.73859327 -1.1816504  1.44193727 -1.96697562  0.1014138 #>          y3_20       x1_20      x2_20      y1_21      y2_21       y3_21 #> [1,] -1.078771  0.20599860 -0.3610573 -1.2301772  0.5091490  0.02231443 #> [2,]  1.491129 -0.08610730 -0.8876790 -0.2472754 -0.4192988 -1.41122249 #> [3,] -1.116361 -0.72921728  0.9980689 -0.7938003 -0.1749302  1.51059438 #> [4,]  2.117989 -0.02142707  0.6704981 -1.2653429  2.3447854 -1.05513299 #> [5,] -1.252068  1.35789554  0.3345028  0.0408507 -2.1493766  0.93601973 #>           x1_21       x2_21      y1_22      y2_22     y3_22      x1_22 #> [1,]  0.7581632 -0.72670483 -3.0469130  0.3743534 1.0232007 -1.3682810 #> [2,] -0.4446840 -0.02944488 -0.5645269 -0.9572478 0.7276238 -0.4138688 #> [3,]  1.2584817  1.24886369 -1.5603645 -0.1838495 0.7381851 -1.3806370 #> [4,] -0.4346170 -1.11387978 -0.4357499  1.1624015 0.2351577  0.6071060 #> [5,]  1.4293381 -0.86731785 -0.7831636 -1.6882271 1.8769630  0.9506517 #>           x2_22      y1_23      y2_23      y3_23      x1_23       x2_23 #> [1,]  0.4328180 -1.8262502 -0.7376244 -0.3671736 -0.8113932  1.44410126 #> [2,]  1.1133860 -0.1703043  0.2797799  1.5287615 -0.4809928 -0.43316903 #> [3,]  2.0499607 -0.9550793  0.2786485 -1.3416689  1.0168728 -0.02671746 #> [4,]  0.2754570 -0.3413122 -0.4190110 -1.2849335  1.1573471 -1.68248086 #> [5,] -0.5850115 -0.1491781 -0.7253244 -1.3660979  0.3209575 -0.29939602 #>           y1_24       y2_24       y3_24       x1_24      x2_24      y1_25 #> [1,] -0.7958582  1.22671231 -0.46755175 -0.43144620  0.6556479  0.4792682 #> [2,] -1.5288576 -1.18580336 -0.09326903  0.69686258 -1.0563684 -0.8426745 #> [3,] -0.4028647 -1.36256873  1.44578030  0.70360778 -0.9713852  1.5342963 #> [4,] -0.7521130  1.65155850  0.37153081  0.08731909  1.3533619  1.6027442 #> [5,] -0.3675176 -0.02479883 -0.90361727 -0.27854308  0.5461152 -0.4166378 #>           y2_25      y3_25       x1_25       x2_25       y1_26      y2_26 #> [1,] -0.6222010 -0.8141507  0.32192527 -0.78383894  1.49478044 -0.7011373 #> [2,]  2.6837173  0.3922965 -0.04069848 -1.55154482  0.06169944  1.4954911 #> [3,] -0.4870606 -0.5943964 -1.09615624  0.04905045  0.72900810 -2.7314058 #> [4,] -1.0151345  1.7426810  0.72417380 -0.83255283 -0.06770521 -0.3768668 #> [5,]  2.3206512 -0.1405577 -1.30382115 -0.25091447  0.10216523  0.5191222 #>           y3_26      x1_26      x2_26      y1_27      y2_27      y3_27 #> [1,]  0.9654151  1.5757275  0.6428993 -1.1647060 -2.2184199  3.4363355 #> [2,] -2.1184110  1.1671695 -0.2736457  2.6494635  0.1662511  0.1836773 #> [3,]  0.3839384 -1.1984959  0.1900190 -0.4266472 -1.1554926 -1.1296515 #> [4,] -0.2867897  0.7325285 -0.8719269  0.7947885 -2.3842952 -2.1643112 #> [5,]  0.3139478  0.1710074 -0.4034675  1.9508978 -0.3848814 -3.0563611 #>            x1_27      x2_27      y1_28      y2_28      y3_28        x1_28 #> [1,]  0.08976065  0.2765507 -1.1232442 -0.3386327  2.4856565  0.679288816 #> [2,] -0.46784532 -1.2382523  0.4372636  1.8478779 -1.3167820 -0.007762034 #> [3,]  1.29770590 -1.0338737 -0.9236442 -3.0363753  1.1332017 -0.738440754 #> [4,] -0.45339751  1.1875343  1.6876901 -1.3855848 -1.1868768 -0.290145312 #> [5,]  0.10465944 -0.3188808  1.5762711  2.9005160 -0.6647209  1.618343936 #>            x2_28      y1_29      y2_29      y3_29      x1_29      x2_29 #> [1,]  0.08983289 -0.2116782 -0.2639721  0.7380767 -2.9930901  0.2848830 #> [2,] -0.80028218  0.6312305  2.1808281 -0.6859749 -0.5334923  1.2876752 #> [3,]  0.04656394 -0.8130017 -1.9517001 -0.8381478 -1.0175961 -0.3832840 #> [4,]  0.82854614  0.4826578 -3.0943325 -0.9111990 -0.2912277 -1.5763624 #> [5,]  0.71418860  3.3908647  2.3261089 -1.4026520  2.9658654 -0.7950776 #>           y1_30      y2_30       y3_30      x1_30      x2_30       y1_31 #> [1,] -1.2035309 -0.3571279 -1.64509425 -0.3672346  0.1852306  0.07109925 #> [2,]  2.0804276  0.2775435  0.06526954 -0.1755259 -1.0717824  0.55629458 #> [3,] -1.0822334 -0.9186276  1.39868427  0.8727554  0.9695450 -0.46278148 #> [4,] -1.7304351 -2.5725873 -0.55611115 -0.8488157 -1.0885199  1.36947093 #> [5,] -0.2029005  1.1005079 -1.85546589  0.8143659  2.0980308 -0.01129053 #>            y2_31       y3_31      x1_31      x2_31      y1_32       y2_32 #> [1,] -2.24613575  1.99010583  0.5818237  1.3997368  3.7186580 -0.05208359 #> [2,]  0.69940331 -0.97774634  0.1632069 -0.3627384 -0.5323864  2.47158612 #> [3,] -1.93447356  0.98093559  0.3838467 -1.8515557 -0.9562222  1.44806587 #> [4,] -0.06717144 -0.09082801 -0.4842906 -0.3363112 -1.0024854 -0.90709147 #> [5,]  0.20335470 -3.45852622  0.3009801 -1.0830751 -0.3644994 -1.24486220 #>            y3_32       x1_32       x2_32      y1_33      y2_33       y3_33 #> [1,] -0.56197007 -0.72729206  1.30254263 -0.1160670  0.3101314  1.53358498 #> [2,] -0.97034857  0.59001355  1.43242193  0.1011716 -0.1749360 -0.26398660 #> [3,] -2.37649172 -0.05399674  1.06477321 -2.4240088  1.2592813 -0.08246484 #> [4,]  0.06740686 -0.15335789 -0.24324723  1.2153747  0.1826516 -0.99893422 #> [5,] -3.45887740 -1.00632250 -0.03541456  0.7289556 -1.5118393 -0.91846250 #>           x1_33      x2_33      y1_34      y2_34       y3_34       x1_34 #> [1,]  0.3358481  1.0385061 -0.4771736  1.9733541 -0.06159458  0.92072857 #> [2,] -0.9926925  0.4546503  3.5078962 -0.6752161 -0.09798790  0.08489806 #> [3,]  0.8131950 -0.1908165  0.7883838  1.6639357  1.78529327 -2.69992981 #> [4,]  1.8922020 -1.3859983  0.4488331  1.4923626 -0.27997541 -0.41482430 #> [5,]  1.3091244  0.7504005 -0.3396360 -2.6796190  0.09732401 -2.13836833 #>            x2_34      y1_35      y2_35      y3_35        x1_35       x2_35 #> [1,]  0.72087816  0.1334822  0.6098394  0.9771480 -1.043118939 -0.09018639 #> [2,]  0.89556558  0.7529208  0.2315859 -0.2440604 -0.229778139  0.83661907 #> [3,]  0.06096664  2.7238966 -0.4761221 -1.4859338  0.573751697  0.04580358 #> [4,]  0.34908153  1.2359666  0.7233830  1.4193523  1.628442266  0.08852190 #> [5,] -0.70035411 -1.3900866 -1.2572970  1.5649886 -0.009056475 -1.45813349 #>           y1_36      y2_36      y3_36      x1_36      x2_36       y1_37 #> [1,] -2.1793162  0.7935969 -0.5925976  0.6235182 -0.9535234 -1.69080557 #> [2,]  0.6036193  0.2024711  1.3342233 -1.7450559  1.6894589 -0.09277337 #> [3,]  0.9637950 -0.8749543 -0.1194499  0.1574125  0.4315654  0.94630702 #> [4,]  1.6951209 -1.2556609  0.2163004  1.2391507 -1.6445555  1.13743144 #> [5,] -1.8757981 -0.6122068  1.5551625  0.6945296 -2.4613355 -0.87174442 #>           y2_37      y3_37      x1_37      x2_37      y1_38      y2_38 #> [1,] -0.3025021  1.7319803 -0.5428288  0.5809965 -2.6354214 -0.7183577 #> [2,] -1.1021267  1.6043880  0.8647780 -0.1507760 -0.6308415 -1.1112348 #> [3,] -0.5591950 -0.8697912 -0.3965497  1.3099782  1.5346053 -1.9888093 #> [4,] -2.4450389  1.0365605  1.4463565 -0.6905602  2.2584497 -2.7826021 #> [5,] -0.9280160 -0.8723213  0.1432898 -0.3912221  0.4400004 -1.7603171 #>           y3_38      x1_38      x2_38      y1_39      y2_39        y3_39 #> [1,] -0.4737886  0.7681787  0.4637676 -2.8071935 -0.5614764  0.881604859 #> [2,]  1.6758752 -1.4490071  0.6430087  0.3740888 -0.1523084 -0.006343342 #> [3,] -0.2844570  0.4703934 -1.2426703  0.2343761  2.1184055  0.795769292 #> [4,] -1.3484993 -0.2764311 -1.1094188  0.4663693 -1.6985818  0.626488740 #> [5,] -0.9955418 -0.4911641 -0.2836475  1.4811656  0.8301803 -0.163071934 #>           x1_39        x2_39      y1_40      y2_40      y3_40      x1_40 #> [1,] -0.8857763 -1.099780899 -2.2040033  0.1882097 -0.1269184  1.5127070 #> [2,]  0.4831939 -0.006355626  0.6789519  2.3019134  0.6939580  0.1514559 #> [3,]  1.3815755  1.204458937  0.4976630  1.2046355 -1.1505839  0.8240740 #> [4,]  0.1338693  1.785339052  1.3594825 -0.6741237  2.0404639  2.4221634 #> [5,]  0.3147948  0.396326578  1.4834493  2.9148698 -0.2685219 -0.2256037 #>           x2_40       y1_41      y2_41      y3_41       x1_41      x2_41 #> [1,]  0.2579214  0.57684619 -0.6899581  0.5429887  0.08844023 -0.1208965 #> [2,] -0.5841090 -0.08175649  0.6560388  2.2044339  0.36880673  0.2946543 #> [3,] -1.6626294 -0.90625055 -0.2168597 -1.9086710 -0.56930634  0.6355138 #> [4,] -1.0768289  0.92517233  0.0159189  0.5964618  0.48594111  1.3885217 #> [5,] -1.9249504 -1.51243420  0.4976952 -1.4491377 -1.43922930 -1.4696578 #>           y1_42       y2_42       y3_42       x1_42      x2_42      y1_43 #> [1,] -0.9841455  1.95659308  0.10631121 -1.19432890  0.6119969 -0.4172575 #> [2,]  1.6252713  1.40303796 -0.64688033 -0.27925937 -1.3362367 -0.4323630 #> [3,]  0.5611223  0.09548179  0.02792649  0.04372201  0.3480123  0.6717540 #> [4,] -1.8603537 -1.05576936 -1.43747523 -0.19565682 -0.2181748 -0.1999509 #> [5,]  0.7375841 -1.27621056 -0.28031657  0.76186345 -0.2436150  1.5568158 #>            y2_43      y3_43      x1_43      x2_43      y1_44      y2_44 #> [1,] -0.03975722 -1.0649549 -0.2171398 -0.1827567 -0.6356891 -0.8823777 #> [2,]  0.69400066 -0.4854508  0.7007488  0.5541966 -1.5815027  1.2093094 #> [3,]  0.59886248 -1.4107830  2.4595935 -0.8183803 -1.5925834  0.2028067 #> [4,] -0.27958137 -0.1115583 -0.3047780  0.5978327 -1.3860432  0.8088848 #> [5,] -0.60905958 -2.4224375  0.2696766 -1.5589275 -2.1225482  0.3167143 #>           y3_44      x1_44      x2_44      y1_45      y2_45      y3_45 #> [1,]  1.0255378  0.9333463  0.8217731  1.4168399 -1.2529312 -0.0138464 #> [2,]  0.1015089 -0.8363066 -1.5945882  1.0726562 -0.3726381 -3.8113788 #> [3,]  2.1139917 -2.1132001  0.2736953  0.7580356 -1.1751165 -0.1074872 #> [4,]  1.2056015  1.3974294  0.6876198 -1.8356432  1.1946067  1.3876294 #> [5,] -0.5508063 -0.5355880  0.5624520 -2.3342729 -0.4466525 -0.9093240 #>           x1_45      x2_45       y1_46      y2_46       y3_46       x1_46 #> [1,]  1.3921164 -0.4761739  1.12795639 -0.6834568 -2.15905811  0.65034856 #> [2,]  0.2049586 -0.3450880 -3.52737494 -0.7430851 -0.08598658  0.25261170 #> [3,] -0.6875968  0.4460411  0.05897484  2.5111017  0.04442733 -0.81238472 #> [4,]  0.3201880 -0.3018699 -0.97038509  1.3974840  0.24494246  0.49834869 #> [5,] -0.1783261 -0.1151360 -2.60616376 -0.7653270 -4.59670290 -0.07206147 #>           x2_46      y1_47      y2_47      y3_47      x1_47      x2_47 #> [1,]  1.3911105 -1.3150620 -0.4756001 -1.8329691 -1.1107889 -0.8607926 #> [2,] -1.2940025 -0.7472187 -2.0455025 -2.0144549 -0.9591704  1.0857749 #> [3,]  2.2120555  2.8324142  1.4446795 -0.1309829 -0.1237060 -0.4773355 #> [4,] -0.5495369 -0.6650360 -1.8388994  1.8045724 -0.2792565  1.0965134 #> [5,]  1.2109098 -1.3209728  1.4065665 -0.7600015 -0.6148969  0.6761265 #>           y1_48      y2_48      y3_48      x1_48      x2_48      y1_49 #> [1,] -1.3449987  1.7682712  0.5772184 -1.1317387 -1.4592140 -2.4462217 #> [2,] -1.4057986 -1.7109581 -0.5982397  0.4037749  0.5864875 -0.2728646 #> [3,]  0.1231669 -1.3976359  1.5982764 -0.1662615  0.8625634 -0.4690810 #> [4,] -1.9632644 -1.0236716  1.2249418  0.4420131  0.2410163  2.2338761 #> [5,] -0.8411154  0.7324089  0.6988805  0.8985996 -1.1893179 -0.1271400 #>            y2_49      y3_49       x1_49       x2_49 #> [1,]  1.19775527 -1.2621964  0.07998255  0.65320434 #> [2,]  1.19842157  2.2908512  1.81522845  0.12882143 #> [3,] -3.23643735 -0.6867484  0.09734049 -1.62561674 #> [4,]  0.32421845  2.2357651 -0.25560766  0.93103290 #> [5,]  0.09189132  0.1123442  0.12125885 -0.01122169"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/plot.simstatespace.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Method for an Object of Class simstatespace — plot.simstatespace","title":"Plot Method for an Object of Class simstatespace — plot.simstatespace","text":"Plot Method Object Class simstatespace","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/plot.simstatespace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Method for an Object of Class simstatespace — plot.simstatespace","text":"","code":"# S3 method for class 'simstatespace' plot(x, id = NULL, time = NULL, eta = FALSE, type = \"b\", ...)"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/plot.simstatespace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Method for an Object of Class simstatespace — plot.simstatespace","text":"x Object class simstatespace. id Numeric vector. Optional id numbers plot. id = NULL, plot available data. time Numeric vector. Optional time points plot. time = NULL, plot available data. eta Logical. eta = TRUE, plot latent variables. eta = FALSE, plot observed variables. type Character indicating type plotting; actually types plot.default(). ... Additional arguments.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/plot.simstatespace.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Method for an Object of Class simstatespace — plot.simstatespace","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/plot.simstatespace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Method for an Object of Class simstatespace — plot.simstatespace","text":"","code":"# prepare parameters set.seed(42) ## number of individuals n <- 5 ## time points time <- 50 ## dynamic structure p <- 3 mu0 <- rep(x = 0, times = p) sigma0 <- diag(p) sigma0_l <- t(chol(sigma0)) alpha <- rep(x = 0, times = p) beta <- 0.50 * diag(p) psi <- diag(p) psi_l <- t(chol(psi)) ## measurement model k <- 3 nu <- rep(x = 0, times = k) lambda <- diag(k) theta <- 0.50 * diag(k) theta_l <- t(chol(theta)) ## covariates j <- 2 x <- lapply(   X = seq_len(n),   FUN = function(i) {     matrix(       data = stats::rnorm(n = time * j),       nrow = j,       ncol = time     )   } ) gamma <- diag(x = 0.10, nrow = p, ncol = j) kappa <- diag(x = 0.10, nrow = k, ncol = j)  # Type 0 ssm <- SimSSMFixed(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 0 )  plot(ssm)    plot(ssm, id = 1:3, time = 0:9)     # Type 1 ssm <- SimSSMFixed(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 1,   x = x,   gamma = gamma )  plot(ssm)    plot(ssm, id = 1:3, time = 0:9)     # Type 2 ssm <- SimSSMFixed(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 2,   x = x,   gamma = gamma,   kappa = kappa )  plot(ssm)    plot(ssm, id = 1:3, time = 0:9)"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/print.simstatespace.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Method for an Object of Class simstatespace — print.simstatespace","title":"Print Method for an Object of Class simstatespace — print.simstatespace","text":"Print Method Object Class simstatespace","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/print.simstatespace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Method for an Object of Class simstatespace — print.simstatespace","text":"","code":"# S3 method for class 'simstatespace' print(x, ...)"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/print.simstatespace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Method for an Object of Class simstatespace — print.simstatespace","text":"x Object Class simstatespace. ... Additional arguments.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/print.simstatespace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Method for an Object of Class simstatespace — print.simstatespace","text":"Prints simulated data long format.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/print.simstatespace.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print Method for an Object of Class simstatespace — print.simstatespace","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/reference/print.simstatespace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Method for an Object of Class simstatespace — print.simstatespace","text":"","code":"# prepare parameters set.seed(42) ## number of individuals n <- 5 ## time points time <- 50 ## dynamic structure p <- 3 mu0 <- rep(x = 0, times = p) sigma0 <- diag(p) sigma0_l <- t(chol(sigma0)) alpha <- rep(x = 0, times = p) beta <- 0.50 * diag(p) psi <- diag(p) psi_l <- t(chol(psi)) ## measurement model k <- 3 nu <- rep(x = 0, times = k) lambda <- diag(k) theta <- 0.50 * diag(k) theta_l <- t(chol(theta)) ## covariates j <- 2 x <- lapply(   X = seq_len(n),   FUN = function(i) {     matrix(       data = stats::rnorm(n = time * j),       nrow = j,       ncol = time     )   } ) gamma <- diag(x = 0.10, nrow = p, ncol = j) kappa <- diag(x = 0.10, nrow = k, ncol = j)  # Type 0 ssm <- SimSSMFixed(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 0 )  print(ssm) #> Call: #> SimSSMFixed(n = n, time = time, mu0 = mu0, sigma0_l = sigma0_l,  #>     alpha = alpha, beta = beta, psi_l = psi_l, nu = nu, lambda = lambda,  #>     theta_l = theta_l, type = 0) #> Use `as.data.frame` or `as.matrix` on the output of `SimSSMFixed` #> to convert it to a data frame or a matrix. #>   # Type 1 ssm <- SimSSMFixed(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 1,   x = x,   gamma = gamma )  print(ssm) #> Call: #> SimSSMFixed(n = n, time = time, mu0 = mu0, sigma0_l = sigma0_l,  #>     alpha = alpha, beta = beta, psi_l = psi_l, nu = nu, lambda = lambda,  #>     theta_l = theta_l, type = 1, x = x, gamma = gamma) #> Use `as.data.frame` or `as.matrix` on the output of `SimSSMFixed` #> to convert it to a data frame or a matrix. #>   # Type 2 ssm <- SimSSMFixed(   n = n,   time = time,   mu0 = mu0,   sigma0_l = sigma0_l,   alpha = alpha,   beta = beta,   psi_l = psi_l,   nu = nu,   lambda = lambda,   theta_l = theta_l,   type = 2,   x = x,   gamma = gamma,   kappa = kappa )  print(ssm) #> Call: #> SimSSMFixed(n = n, time = time, mu0 = mu0, sigma0_l = sigma0_l,  #>     alpha = alpha, beta = beta, psi_l = psi_l, nu = nu, lambda = lambda,  #>     theta_l = theta_l, type = 2, x = x, gamma = gamma, kappa = kappa) #> Use `as.data.frame` or `as.matrix` on the output of `SimSSMFixed` #> to convert it to a data frame or a matrix. #>"},{"path":"https://github.com/jeksterslab/simStateSpace/reference/simStateSpace-package.html","id":null,"dir":"Reference","previous_headings":"","what":"simStateSpace: Simulate Data from State Space Models — simStateSpace-package","title":"simStateSpace: Simulate Data from State Space Models — simStateSpace-package","text":"Provides streamlined user-friendly framework simulating data state space models, particularly number subjects/units (n) exceeds one, scenario commonly encountered social behavioral sciences. introduction state space models social behavioral sciences, refer Chow, Ho, Hamaker, Dolan (2010) doi:10.1080/10705511003661553 .","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/reference/simStateSpace-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"simStateSpace: Simulate Data from State Space Models — simStateSpace-package","text":"Maintainer: Ivan Jacob Agaloos Pesigan r.jeksterslab@gmail.com (ORCID) [copyright holder]","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/simStateSpace/news/index.html","id":"patch-1-2-8-9000","dir":"Changelog","previous_headings":"","what":"Patch","title":"simStateSpace 1.2.8.9000","text":"Latest development version.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/news/index.html","id":"simstatespace-128","dir":"Changelog","previous_headings":"","what":"simStateSpace 1.2.8","title":"simStateSpace 1.2.8","text":"CRAN release: 2025-01-23","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/news/index.html","id":"patch-1-2-8","dir":"Changelog","previous_headings":"","what":"Patch","title":"simStateSpace 1.2.8","text":"Moved bootstrap components dedicated package, bootStateSpace, better modularity.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/news/index.html","id":"simstatespace-127","dir":"Changelog","previous_headings":"","what":"simStateSpace 1.2.7","title":"simStateSpace 1.2.7","text":"CRAN release: 2025-01-08","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/news/index.html","id":"patch-1-2-7","dir":"Changelog","previous_headings":"","what":"Patch","title":"simStateSpace 1.2.7","text":"Added PBSSMFixed(), PBSSMVARFixed(), PBSSMLinSDEFixed(), PBSSMOUFixed() functions. Added SystemRequirements: GSL (>= 2.6) DESCRIPTION file dynr package.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/news/index.html","id":"simstatespace-123","dir":"Changelog","previous_headings":"","what":"simStateSpace 1.2.3","title":"simStateSpace 1.2.3","text":"CRAN release: 2024-11-26","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/news/index.html","id":"patch-1-2-3","dir":"Changelog","previous_headings":"","what":"Patch","title":"simStateSpace 1.2.3","text":"Replaced arma::inv arma::solve.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/news/index.html","id":"simstatespace-122","dir":"Changelog","previous_headings":"","what":"simStateSpace 1.2.2","title":"simStateSpace 1.2.2","text":"CRAN release: 2024-06-21","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/news/index.html","id":"patch-1-2-2","dir":"Changelog","previous_headings":"","what":"Patch","title":"simStateSpace 1.2.2","text":"Added TestStationarity(), TestStability(), TestPhi() functions. Added SimBetaN() SimPhiN() functions. SimSSMLinSDEIVary() SimSSMOUIVary() functions can now accept matrix zeros argument sigma_l. SimSSMLinSDEIVary() function can now accept vector zeros argument iota. SimSSMOUIVary() function can now accept vector zeros argument mu.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/news/index.html","id":"simstatespace-121","dir":"Changelog","previous_headings":"","what":"simStateSpace 1.2.1","title":"simStateSpace 1.2.1","text":"CRAN release: 2024-05-14","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/news/index.html","id":"patch-1-2-1","dir":"Changelog","previous_headings":"","what":"Patch","title":"simStateSpace 1.2.1","text":"LinSDE2SSM function can now accept matrix zeros argument sigma_l. LinSDE2SSM function can now accept vector zeros argument iota.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/news/index.html","id":"simstatespace-120","dir":"Changelog","previous_headings":"","what":"simStateSpace 1.2.0","title":"simStateSpace 1.2.0","text":"CRAN release: 2024-02-16","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/news/index.html","id":"patch-1-2-0","dir":"Changelog","previous_headings":"","what":"Patch","title":"simStateSpace 1.2.0","text":"Added functions generate linear stochastic differential equation models.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/news/index.html","id":"simstatespace-110","dir":"Changelog","previous_headings":"","what":"simStateSpace 1.1.0","title":"simStateSpace 1.1.0","text":"CRAN release: 2024-01-15","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/news/index.html","id":"minor-1-1-0","dir":"Changelog","previous_headings":"","what":"Minor","title":"simStateSpace 1.1.0","text":"Added functions generate data models covariates. Added functions generate data linear growth curve models. Added print, .data.frame, .matrix, plot methods.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/news/index.html","id":"simstatespace-101","dir":"Changelog","previous_headings":"","what":"simStateSpace 1.0.1","title":"simStateSpace 1.0.1","text":"CRAN release: 2023-11-17","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/news/index.html","id":"patch-1-0-1","dir":"Changelog","previous_headings":"","what":"Patch","title":"simStateSpace 1.0.1","text":"Updates package documentation.","code":""},{"path":"https://github.com/jeksterslab/simStateSpace/news/index.html","id":"simstatespace-100","dir":"Changelog","previous_headings":"","what":"simStateSpace 1.0.0","title":"simStateSpace 1.0.0","text":"Initial release.","code":""}]
